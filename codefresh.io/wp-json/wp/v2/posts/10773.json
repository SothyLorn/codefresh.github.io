{"id":10773,"date":"2018-08-30T15:12:42","date_gmt":"2018-08-30T15:12:42","guid":{"rendered":"http:\/\/codefresh.io\/?p=10773"},"modified":"2018-08-30T15:12:42","modified_gmt":"2018-08-30T15:12:42","slug":"fully-automated-canary-deployments-kubernetes","status":"publish","type":"post","link":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/","title":{"rendered":"Fully automated canary deployments in Kubernetes"},"content":{"rendered":"<p>In a previous article, we described how you can do <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-blue-green-deployments-kubernetes-codefresh\/\">blue\/green deployments in Codefresh<\/a> using a declarative step in your Codefresh Pipeline.<\/p>\n<p>Blue\/Green deployments are very powerful when it comes to easy rollbacks, but they are not the only approach for updating your Kubernetes application.<\/p>\n<p>Another deployment strategy is using <a href=\"https:\/\/martinfowler.com\/bliki\/CanaryRelease.html\">Canaries<\/a> (a.k.a. incremental rollouts). With canaries, the new version of the application is gradually deployed to the Kubernetes cluster while getting a very small amount of live traffic (i.e. a subset of live users are connecting to the new version while the rest are still using the previous version).<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-before.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-before.png\" alt=\"\" width=\"800\" height=\"456\" class=\"alignnone size-full wp-image-10777\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-before.png 800w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-before-300x171.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-before-768x438.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-before-575x328.png 575w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/p>\n<p>The small subset of live traffic to the new version acts as an early warning for potential problems that might be present in the new code. As our confidence increases, more canaries are created and more users are now connecting to the updated version. In the end, all live traffic goes to canaries, and thus the canary version becomes the new \u201cproduction version\u201d.<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-after.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-after.png\" alt=\"\" width=\"800\" height=\"414\" class=\"alignnone size-full wp-image-10778\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-after.png 800w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-after-300x155.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-after-768x397.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-after-628x325.png 628w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/p>\n<p>The big advantage of using canaries is that deployment issues can be detected very early while they still affect only a small subset of all application users. If something goes wrong with a canary, the production version is still present and all traffic can simply be reverted to it.<\/p>\n<p>While a canary is active, you can use it for additional verification (for example running smoke tests) to further increase your confidence on the stability of each new version.<\/p>\n<p>Unlike Blue\/green deployments, Canary releases are based on the following assumptions:<\/p>\n<ol>\n<li>Multiple versions of your application can exist together at the same time, getting live traffic.<\/li>\n<li>If you don\u2019t use some kind of sticky session mechanism, some customers might hit a production server in one request and a canary server in another.<\/li>\n<\/ol>\n<p>If you cannot guarantee these two points, then blue\/green deployments are a much better approach for safe deployments.<\/p>\n<h2>Canaries with\/without Istio<\/h2>\n<p>The gradual confidence offered by canary releases is a major selling point and lots of organizations are looking for ways to adopt canaries for the main deployment method. Codefresh recently released a <a href=\"https:\/\/codefresh.io\/webinars\/istio-canary-deployment-with-helm-and-codefresh\/\">comprehensive webinar<\/a> that shows how you can perform canary updates in Kubernetes using Helm and Istio.<\/p>\n<p>The webinar shows the recommended way to do canaries using <a href=\"https:\/\/istio.io\/docs\/concepts\/what-is-istio\/\">Istio<\/a>. Istio is a service mesh that can be used in your Kubernetes cluster to shape your traffic according to your own rules. Istio is a perfect solution for doing canaries as you can point any percentage of your traffic to the canary version regardless of the number of pods that serve it.<\/p>\n<p>In a Kubernetes cluster without Istio, the number of canary pods is directly affecting the traffic they get at any given point in time.<\/p>\n<figure id=\"attachment_10779\" aria-describedby=\"caption-attachment-10779\" style=\"width: 579px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/without-istio.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/without-istio.png\" alt=\"Traffic switching without Istio\" width=\"579\" height=\"508\" class=\"size-full wp-image-10779\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/without-istio.png 579w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/without-istio-300x263.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/without-istio-374x328.png 374w\" sizes=\"(max-width: 579px) 100vw, 579px\" \/><\/a><figcaption id=\"caption-attachment-10779\" class=\"wp-caption-text\">Traffic switching without Istio<\/figcaption><\/figure>\n<p>So if for example you need your canary to get at 10% traffic, you need at least 9 production pods. With Istio there is no such restriction. The number of pods serving the canary version and the traffic they get is unrelated. All possible combinations that you might think of are valid. Here are some examples of what you can achieve with Istio:<\/p>\n<figure id=\"attachment_10780\" aria-describedby=\"caption-attachment-10780\" style=\"width: 579px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/with-istio.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/with-istio.png\" alt=\"Traffic switching with Istio\" width=\"579\" height=\"502\" class=\"size-full wp-image-10780\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/with-istio.png 579w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/with-istio-300x260.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/with-istio-378x328.png 378w\" sizes=\"(max-width: 579px) 100vw, 579px\" \/><\/a><figcaption id=\"caption-attachment-10780\" class=\"wp-caption-text\">Traffic switching with Istio<\/figcaption><\/figure>\n<p>This is why we recommend using Istio. Istio has several other interesting capabilities such as rate limiting, circuit breakers, A\/B testing etc.<\/p>\n<p>The webinar also uses <a href=\"https:\/\/codefresh.io\/helm-tutorial\/\">Helm<\/a> for deployments. Helm is a package manager for Kubernetes that allows you to group multiple manifests together, allowing you to deploy an application along with its dependencies.<\/p>\n<p>At Codefresh we have several customers that wanted to use Canary deployments in their pipelines but chose to wait until Istio reached 1.0 version before actually using it in production.<\/p>\n<p>Even though we fully recommend Istio for doing canary deployments, we also developed a Codefresh plugin (i.e. a Docker image) that allows you to take advantage of canary deployments even on plain Kubernetes clusters (without Istio installed).<\/p>\n<p>We are open-sourcing <a href=\"https:\/\/github.com\/codefresh-io\/k8s-canary-deployment\">this Docker image<\/a> today for everybody to use and we will explain how you can integrate it in a Codefresh pipeline with only declarative syntax.<\/p>\n<h2>Canary deployments with a declarative syntax<\/h2>\n<p>In a similar manner as the <a href=\"https:\/\/github.com\/codefresh-io\/k8s-blue-green-deployment\">blue\/green deployment plugin<\/a>, the Canary plugin is also taking care of all the <code>kubectl <\/code> invocations needed behind the scenes. To use it you can simply insert it in a Codefresh pipeline as below:<\/p>\n<pre>\ncanaryDeploy:\n   title: \"Deploying new version ${{CF_SHORT_REVISION}}\"\n   image: codefresh\/k8s-canary:master\n   environment:\n     - WORKING_VOLUME=.\n     - SERVICE_NAME=my-demo-app\n     - DEPLOYMENT_NAME=my-demo-app\n     - TRAFFIC_INCREMENT=20\n     - NEW_VERSION=${{CF_SHORT_REVISION}}\n     - SLEEP_SECONDS=40\n     - NAMESPACE=canary\n     - KUBE_CONTEXT=myDemoAKSCluster\n<\/pre>\n<p>Notice the complete lack of <code>kubectl<\/code> commands. The <a href=\"https:\/\/github.com\/codefresh-io\/k8s-canary-deployment\/blob\/master\/Dockerfile\">Docker image<\/a> k8s-canary contains a single executable that takes the following parameters as environment variables:<\/p>\n<div class=\"table-responsive\"><table border=\"1\" cellpadding=\"10\">\n<tr>\n<th>Environment Variable<\/th>\n<th>Description<\/th>\n<\/tr>\n<tr>\n<td>KUBE_CONTEXT<\/td>\n<td>Name of your cluster in Codefresh dashboard<\/td>\n<\/th>\n<tr>\n<td>WORKING_VOLUME<\/td>\n<td>A folder for saving temp\/debug files<\/td>\n<\/th>\n<tr>\n<td>SERVICE_NAME<\/td>\n<td>Existing K8s service<\/td>\n<\/th>\n<tr>\n<td>DEPLOYMENT_NAME<\/td>\n<td>Existing k8s deployment<\/td>\n<\/th>\n<tr>\n<td>TRAFFIC_INCREMENT<\/td>\n<td>Percentage of pods to convert to canaries at each stage<\/td>\n<\/th>\n<tr>\n<td>NEW_VERSION<\/td>\n<td>Docker tag for the next version of the app<\/td>\n<\/th>\n<tr>\n<td>SLEEP_SECONDS<\/td>\n<td>How many seconds each canary stage will wait. After that, the new pods will be checked for restarts<\/td>\n<\/th>\n<tr>\n<td>NAMESPACE<\/td>\n<td>K8s Namespace where deployments happen<\/td>\n<\/th>\n<\/table><\/div>\n<h2>Prerequisites<\/h2>\n<p>The canary deployments steps expect the following assumptions:<\/p>\n<ul>\n<li>An initial service and the respective deployment should already exist in your cluster.<\/li>\n<li>The name of each deployment should contain each version<\/li>\n<li>The service should have a metadata label that shows what the \u201cproduction\u201d version is.<\/li>\n<\/ul>\n<p>These requirements allow each canary deployment to finish into a state that allows the next one to run in a similar manner.<\/p>\n<p>You can use anything you want as a \u201cversion\u201d, but the recommended approach is to use GIT hashes and tag your Docker images with them. In Codefresh this is very easy because the <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/variables\/\">built-in variable CF_SHORT_REVISION<\/a> gives you the git hash of the commit that was pushed.<\/p>\n<p>The build step of the main application that creates the Docker image that will be used in the canary step is a standard <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/steps\/build-1\/\">build step<\/a> that tags the Docker image with the git hash.<\/p>\n<pre>\n BuildingDockerImage:\n    title: Building Docker Image\n    type: build\n    image_name: trivial-web\n    working_directory: .\/example\/\n    tag: '${{CF_SHORT_REVISION}}'\n    dockerfile: Dockerfile\n<\/pre>\n<p>For more details, you can look at the <a href=\"https:\/\/github.com\/codefresh-io\/k8s-canary-deployment\/tree\/master\/example\">example application<\/a> that also contains a service and deployment with the correct labels as well as the full <a href=\"https:\/\/github.com\/codefresh-io\/k8s-canary-deployment\/blob\/master\/example\/codefresh.yml\">codefresh.yml<\/a> file.<\/p>\n<h2>How to perform Canary deployments<\/h2>\n<p>When you run a deployment in Codefresh, the pipeline step will print messages with its progress:<\/p>\n<figure id=\"attachment_10783\" aria-describedby=\"caption-attachment-10783\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs-1024x401.png\" alt=\"Canary Logs\" width=\"1024\" height=\"401\" class=\"size-large wp-image-10783\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs-1024x401.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs-300x118.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs-768x301.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs-628x246.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/canary-logs.png 1120w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-10783\" class=\"wp-caption-text\">Canary Logs<\/figcaption><\/figure>\n<p>First, the Canary plugin will read the Kubernetes services and extract the \u201cversion\u201d metadata label to find out which version is running \u201cin production\u201d. Then it will read the respective deployment and find the Docker image currently getting live traffic. It will also read the number of current replicas for that deployment.<\/p>\n<p>Then it will create a second deployment using the new Docker image tag. This second deployment uses the same labels as the first one, so the existing service will serve <strong>BOTH<\/strong> deployments at the same time. A single pod for the new version will be deployed. This pod will instantly get live traffic according to the total number of pods. For example, if you have in production 3 pods and the new version pod is created, it will instantly get 25% of the traffic (1 canary, 3 production version).<\/p>\n<p>Once the first pod is created, the script is running in a loop where each iteration does the following:<\/p>\n<ol>\n<li>Increases the number of canaries according to the predefined percentage. For example, a percentage of 33% means that 3 phases of canaries will be performed. With 25%, you will see 4 canary iterations and so on. The algorithm used is pretty basic and for a very low number of pods, you will see a lot of rounding happening.<\/li>\n<li>Waits for some seconds until the pods have time to start (the time is configurable).<\/li>\n<li>Checks for pod restarts. If there are none, it assumes that everything is ok and the next iteration happens.<\/li>\n<\/ol>\n<p>This goes on until only canaries get live traffic. The previous deployment is destroyed and the new one is marked as \u201cproduction\u201d in the service.<\/p>\n<p>If at any point there are problems with canaries (or restarts), all canary instances are destroyed and all live traffic goes back to the production version.<\/p>\n<p>You can see all this happening in real-time either using direct <code>kubectl<\/code> commands or looking at the Codefresh Kubernetes dashboard. While canaries are active you will see two docker image versions in the Images column:<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard-1024x393.png\" alt=\"\" width=\"1024\" height=\"393\" class=\"alignnone size-large wp-image-10784\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard-1024x393.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard-300x115.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard-768x295.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard-628x241.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/k8s-dashboard.png 1150w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p>We are working on more ways of health-checking in addition to looking at pod restarts. The Canary image is <a href=\"https:\/\/hub.docker.com\/r\/codefresh\/k8s-canary\/\">available in Dockerhub<\/a>.<\/p>\n<p>New to Codefresh? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&#038;utm_medium=Post&#038;utm_campaign=plainCanary\">Create Your Free Account Today!<\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"10773\"\/>","protected":false},"excerpt":{"rendered":"<p>In a previous article, we described how you can do blue\/green deployments in Codefresh using a declarative step in your Codefresh Pipeline. Blue\/Green deployments are very powerful when it comes to easy rollbacks, but they are not the only approach for updating your Kubernetes application. Another deployment strategy is using Canaries (a.k.a. incremental rollouts). With &hellip; <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":10775,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120,1657],"tags":[44,53,59,68,3163],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Fully automated canary deployments in Kubernetes | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Fully automated canary deployments in Kubernetes\" \/>\n<meta property=\"og:description\" content=\"In a previous article, we described how you can do blue\/green deployments in Codefresh using a declarative step in your Codefresh Pipeline. Blue\/Green deployments are very powerful when it comes to easy rollbacks, but they are not the only approach for updating your Kubernetes application. Another deployment strategy is using Canaries (a.k.a. incremental rollouts). With &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2018-08-30T15:12:42+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"670\" \/>\n\t<meta property=\"og:image:height\" content=\"200\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg\",\"width\":670,\"height\":200,\"caption\":\"Canary Deloyment\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#webpage\",\"url\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/\",\"name\":\"Fully automated canary deployments in Kubernetes | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#primaryimage\"},\"datePublished\":\"2018-08-30T15:12:42+00:00\",\"dateModified\":\"2018-08-30T15:12:42+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Fully automated canary deployments in Kubernetes\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Fully automated canary deployments in Kubernetes\",\"datePublished\":\"2018-08-30T15:12:42+00:00\",\"dateModified\":\"2018-08-30T15:12:42+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#webpage\"},\"wordCount\":1406,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg\",\"keywords\":[\"Kubernetes\",\"CI\/CD\",\"codefresh\",\"continuous delivery\",\"canary\"],\"articleSection\":[\"Continuous Deployment\/Delivery\",\"Kubernetes Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Fully automated canary deployments in Kubernetes | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/","og_locale":"en_US","og_type":"article","og_title":"Fully automated canary deployments in Kubernetes","og_description":"In a previous article, we described how you can do blue\/green deployments in Codefresh using a declarative step in your Codefresh Pipeline. Blue\/Green deployments are very powerful when it comes to easy rollbacks, but they are not the only approach for updating your Kubernetes application. Another deployment strategy is using Canaries (a.k.a. incremental rollouts). With &hellip; Read more","og_url":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2018-08-30T15:12:42+00:00","og_image":[{"width":670,"height":200,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg","width":670,"height":200,"caption":"Canary Deloyment"},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#webpage","url":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/","name":"Fully automated canary deployments in Kubernetes | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#primaryimage"},"datePublished":"2018-08-30T15:12:42+00:00","dateModified":"2018-08-30T15:12:42+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Fully automated canary deployments in Kubernetes"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Fully automated canary deployments in Kubernetes","datePublished":"2018-08-30T15:12:42+00:00","dateModified":"2018-08-30T15:12:42+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#webpage"},"wordCount":1406,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/08\/Fully_automated_Canary_deployments_in_Kubernetes_with_Codefresh.jpg","keywords":["Kubernetes","CI\/CD","codefresh","continuous delivery","canary"],"articleSection":["Continuous Deployment\/Delivery","Kubernetes Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/kubernetes-tutorial\/fully-automated-canary-deployments-kubernetes\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/10773"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=10773"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/10773\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/10775"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=10773"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=10773"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=10773"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}