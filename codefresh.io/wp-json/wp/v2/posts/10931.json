{"id":10931,"date":"2018-09-11T18:34:55","date_gmt":"2018-09-11T18:34:55","guid":{"rendered":"http:\/\/codefresh.io\/?p=10931"},"modified":"2020-01-09T12:35:02","modified_gmt":"2020-01-09T12:35:02","slug":"programmatic-creation-codefresh-pipelines-part1","status":"publish","type":"post","link":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/","title":{"rendered":"Programmatic Creation of Codefresh Pipelines &#8211; Part1"},"content":{"rendered":"<p><strong>Update: Part 2 of the series in now <a href=\"http:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part2\/\">available<\/a><\/strong><\/p>\n<p>One of the big strengths of Codefresh is its friendly UI. For example, in Codefresh you can quickly <a href=\"https:\/\/codefresh.io\/docs\/docs\/getting-started\/deployment-to-kubernetes-quick-start-guide\/\">deploy a service\/deployment<\/a> to Kubernetes using just the graphical Interface. Of course, you are still free to use your own kubectl commands if you wish to do so, by taking advantage of the <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\">pipeline yaml<\/a> definition.<\/p>\n<p>The same ease of use is given to all other critical aspects of the UI, such as the Docker registry, Kubernetes Dashboard, and Helm releases. If you are getting started with CI\/CD it is very easy to navigate the Codefresh UI and get familiar with all the deployment tools it offers.<\/p>\n<h2>Pipeline Creation from the Codefresh UI<\/h2>\n<p>One particularly interesting feature loved by our users is the real-time yaml verification that Codefresh offers while you are editing the definition of a pipeline.<\/p>\n<figure id=\"attachment_10933\" aria-describedby=\"caption-attachment-10933\" style=\"width: 638px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/inline-editor.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/inline-editor.png\" alt=\"Codefresh Pipeline Editor\" width=\"638\" height=\"504\" class=\"size-full wp-image-10933\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/inline-editor.png 638w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/inline-editor-300x237.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/inline-editor-415x328.png 415w\" sizes=\"(max-width: 638px) 100vw, 638px\" \/><\/a><figcaption id=\"caption-attachment-10933\" class=\"wp-caption-text\">Codefresh Pipeline Editor<\/figcaption><\/figure>\n<p>This feature is very powerful when you are creating a new project in Codefresh, as it notifies you very early of possible syntax errors, even before your run the pipeline. This way, you can iterate very quickly on pipeline changes, without having to commit anything to your repository.<\/p>\n<p>Once your pipeline is complete, you should commit it as a codefresh.yml file in the git repository. This practice aligns with the configuration-as-code mentality, allowing you to version all pipeline changes and giving you an auditing history through git.<\/p>\n<p>The pipeline definition does not really need to be in the same git repository as the source code. It can be on any other repository and multiple Codefresh projects can share the same pipeline. This is a great opportunity for reusing your pipeline definitions across similar projects and allows developers to take advantage of pipelines already created in the organization in a centralized repository.<\/p>\n<figure id=\"attachment_10934\" aria-describedby=\"caption-attachment-10934\" style=\"width: 618px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/pipeline-gui.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/pipeline-gui.png\" alt=\"Pipeline definition source\" width=\"618\" height=\"188\" class=\"size-full wp-image-10934\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/pipeline-gui.png 618w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/pipeline-gui-300x91.png 300w\" sizes=\"(max-width: 618px) 100vw, 618px\" \/><\/a><figcaption id=\"caption-attachment-10934\" class=\"wp-caption-text\">Pipeline definition source<\/figcaption><\/figure>\n<p>In summary, pipeline creation is very easy in Codefresh both for individual developers and teams within companies that wish to reuse pipeline definitions.<\/p>\n<h2>Creating Pipelines in an Automated Manner<\/h2>\n<p>While these two methods of pipeline creation (inline editing, and loading from a git repository) are enough for the majority of our customers, we had several enterprise organizations that wanted to take pipeline creation to the next level by requesting:<\/p>\n<ul>\n<li>External pipeline creation (i.e. not being forced to use the Codefresh UI)<\/li>\n<li>Templating and external management of pipelines<\/li>\n<li>Provisioning of pipelines from operations so that developers can find a pre-configured Codefresh project<\/li>\n<\/ul>\n<p>The most common usage scenario is requested from customers with separate operations and development teams. Operations want to help developers with project creation and ideally, they want to initialize a git repository along with its Codefresh pipeline in a single step.<\/p>\n<p>This means that developers don\u2019t even have to login in Codefresh just to get the pipeline running. They only commit code to the git repository and Codefresh will automatically build everything with the <a href=\"https:\/\/codefresh.io\/docs\/docs\/configure-ci-cd-pipeline\/triggers\/\">existing git triggers<\/a>.<\/p>\n<p>To address this scenario, Codefresh offers the following building blocks:<\/p>\n<ol>\n<li>Programmatic pipeline <a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/codefresh-api\/#example---creating-codefresh-pipelines-externally\">creation from the API<\/a><\/li>\n<li>Easy integration with the <a href=\"https:\/\/codefresh-io.github.io\/cli\/\">Codefresh CLI<\/a><\/li>\n<li><a href=\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\">Mono-repo support<\/a><\/li>\n<\/ol>\n<p>Let\u2019s examine these features in turn&#8230;<\/p>\n<h2>Codefresh Pipeline Specification<\/h2>\n<p>Codefresh already offers a specification for the whole pipeline (i.e. not just the build steps defined in yml). Here is a quick example:<\/p>\n<pre>\nversion: '1.0'\nkind: pipeline\nmetadata:\n  name: my-project\/my-basic-pipeline\n  description: my description\n  labels:\n    key1: value1\n    key2: value2\n  project: my-project\nspec:\n  triggers:\n    - type: git\n      provider: github\n      name: my-trigger\n      repo: kostis-codefresh\/nestjs-example\n      events:\n        - push\n      branchRegex: \/.\/\n      verified: true\n  contexts: []\n  variables:\n    - key: PORT\n      value: 5000\n      encrypted: false\n    - key: SECRET\n      value: '*****'\n      encrypted: true\n  steps:\n    main_clone:\n      title: Cloning main repository...\n      type: git-clone\n      repo: '${{CF_REPO_OWNER}}\/${{CF_REPO_NAME}}'\n      revision: '${{CF_REVISION}}'\n      git: github-1\n    PrintFileList:\n      title: Listing files\n      image: 'alpine:latest'\n      commands:\n        - ls -l\n        - echo \"hello world\"\n        - echo \"plain value $PORT\"\n  stages: []\n<\/pre>\n<p>As you can see this yml file is a superset of what Codefresh yaml offers. It also has sections for triggers and variables as well as general pipeline metadata.<\/p>\n<p>This means that you can create any Codefresh pipeline with your tools and choose your own templating solution if you wish to do some pre-processing on Codefresh pipelines before creating them.<\/p>\n<p>As a quick example, the operations team could have a single template of a Codefresh pipeline which uses only \u201capproved\u201d and \u201ctrusted\u201d build tooling, while still providing value overrides for the git repository to be checked out.<\/p>\n<h2>Creation of Codefresh Pipelines from CLI<\/h2>\n<p>The second crucial element is the way this pipeline can be pushed to Codefresh. The API call for doing this is available to be used by any kind of HTTP application and so it is very easy to integrate it in your own solution by yourself. A much faster solution is to use the Codefresh Command Line interface that has built-in integration.<\/p>\n<p>You can create a pipeline with a simple command such as:<\/p>\n<pre>\ncodefresh create pipeline -f my-pipeline-spec.yml\n<\/pre>\n<p>This will take as input a Codefresh specification file and automatically create the pipeline in the UI with no other user intervention.<\/p>\n<p>The Codefresh CLI is also offered as a Docker image so it is very easy to use it in a <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/steps\/freestyle\/\">freestyle step<\/a>.<\/p>\n<h2>Git triggers for Mono-Repos<\/h2>\n<p>The last piece of the puzzle is the support Codefresh offers for mono-repos. This means you can define a pipeline in a git repository and having it trigger only when a specific folder or set of files are changed.<\/p>\n<p>This way you can have multiple projects in the same git repository each with its own pipeline. When a developer commits to any of the folders, only the respective pipeline will be triggered.<\/p>\n<figure id=\"attachment_10935\" aria-describedby=\"caption-attachment-10935\" style=\"width: 596px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/add-git-trigger-1.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/add-git-trigger-1.png\" alt=\"Git trigger for specific paths\" width=\"596\" height=\"281\" class=\"size-full wp-image-10935\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/add-git-trigger-1.png 596w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/add-git-trigger-1-300x141.png 300w\" sizes=\"(max-width: 596px) 100vw, 596px\" \/><\/a><figcaption id=\"caption-attachment-10935\" class=\"wp-caption-text\">Git trigger for specific paths<\/figcaption><\/figure>\n<p>You can also use the same mechanism for the initial pipeline (i.e the pipeline that will create pipelines as we will see below).<\/p>\n<h2>The Complete Workflow<\/h2>\n<p>Now that we have all pieces of the puzzle in place, let\u2019s see how we can use them together. There are many ways to put all the pieces together, but a good starting point is the following:<\/p>\n<figure id=\"attachment_10936\" aria-describedby=\"caption-attachment-10936\" style=\"width: 799px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/workflow.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/workflow.png\" alt=\"Dynamic Pipeline creation\" width=\"799\" height=\"725\" class=\"size-full wp-image-10936\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/workflow.png 799w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/workflow-300x272.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/workflow-768x697.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/workflow-361x328.png 361w\" sizes=\"(max-width: 799px) 100vw, 799px\" \/><\/a><figcaption id=\"caption-attachment-10936\" class=\"wp-caption-text\">Dynamic Pipeline creation<\/figcaption><\/figure>\n<p>Here is how the whole process works:<\/p>\n<ol>\n<li>In the beginning, there is a single git repository with one or more projects and a special folder called \u201cpipelines\u201d that holds all the pipelines specifications for those projects.<\/li>\n<li>A special \u201cpipeline builder\u201d pipeline is set up that is triggered only for changes in the \u201cpipelines\u201d folder (you could also use a cron trigger).<\/li>\n<li>Once a development team wants to start a new project, an operations person performs the following actions:<\/li>\n<ol>\n<li>Creates a project folder in the root of the git repository<\/li>\n<li>Creates a pipeline spec in the \u201cpipelines folder\u201d that builds the project created in the first step<\/li>\n<\/ol>\n<li>The \u201cpipeline builder\u201d pipeline is triggered by Codefresh because a change happened in the \u201cpipelines\u201d folder.<\/li>\n<li>The pipeline executes and calls the Codefresh CLI in a freestyle step. The CLI takes as a parameter the spec file that was just created (spec3.yml in the example above).<\/li>\n<li>A project-specific pipeline is automatically created for the newly created project (pipeline-3 in the example above).<\/li>\n<\/ol>\n<p>At this point, the operations person contacts the development team and says that the project infrastructure is ready.<\/p>\n<figure id=\"attachment_10938\" aria-describedby=\"caption-attachment-10938\" style=\"width: 833px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/generated.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/generated.png\" alt=\"Dynamically Generated Pipelines\" width=\"833\" height=\"160\" class=\"size-full wp-image-10938\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/generated.png 833w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/generated-300x58.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/generated-768x148.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/generated-628x121.png 628w\" sizes=\"(max-width: 833px) 100vw, 833px\" \/><\/a><figcaption id=\"caption-attachment-10938\" class=\"wp-caption-text\">Dynamically Generated Pipelines<\/figcaption><\/figure>\n<p>Any developer can now make a commit into the project folder and the respective pipeline will run a build as normal. All this happens behind the scenes. The developers of the project do not even need to know what Codefresh is actually doing.<\/p>\n<p>This is only a suggestion on how to create programmatic pipelines in Codefresh. There are many more variations that might suit better your organization.<\/p>\n<p>In a future blog post we will see another scenario of dynamic pipeline creation where the pipeline specification is inside the project folder itself instead of an external location.<\/p>\n<p><strong>Update: Part 2 of the series in now <a href=\"http:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part2\/\">available<\/a><\/strong><\/p>\n<p>New to Codefresh? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&#038;utm_medium=Post&#038;utm_campaign=monorepoPipelinePart1\">Create Your Free Account Today!<\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"10931\"\/>","protected":false},"excerpt":{"rendered":"<p>Update: Part 2 of the series in now available One of the big strengths of Codefresh is its friendly UI. For example, in Codefresh you can quickly deploy a service\/deployment to Kubernetes using just the graphical Interface. Of course, you are still free to use your own kubectl commands if you wish to do so, &hellip; <a href=\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":10932,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1543,1538],"tags":[52,53,59,961,1390,3226],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Programmatic Creation of Codefresh Pipelines - Part1 | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Programmatic Creation of Codefresh Pipelines - Part1\" \/>\n<meta property=\"og:description\" content=\"Update: Part 2 of the series in now available One of the big strengths of Codefresh is its friendly UI. For example, in Codefresh you can quickly deploy a service\/deployment to Kubernetes using just the graphical Interface. Of course, you are still free to use your own kubectl commands if you wish to do so, &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2018-09-11T18:34:55+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-01-09T12:35:02+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png\" \/>\n\t<meta property=\"og:image:width\" content=\"800\" \/>\n\t<meta property=\"og:image:height\" content=\"311\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png\",\"width\":800,\"height\":311},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#webpage\",\"url\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/\",\"name\":\"Programmatic Creation of Codefresh Pipelines - Part1 | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#primaryimage\"},\"datePublished\":\"2018-09-11T18:34:55+00:00\",\"dateModified\":\"2020-01-09T12:35:02+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Programmatic Creation of Codefresh Pipelines &#8211; Part1\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Programmatic Creation of Codefresh Pipelines &#8211; Part1\",\"datePublished\":\"2018-09-11T18:34:55+00:00\",\"dateModified\":\"2020-01-09T12:35:02+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#webpage\"},\"wordCount\":1255,\"commentCount\":2,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png\",\"keywords\":[\"devops\",\"CI\/CD\",\"codefresh\",\"pipeline\",\"codefresh cli\",\"monorepo\"],\"articleSection\":[\"Continuous Integration\",\"DevOps Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Programmatic Creation of Codefresh Pipelines - Part1 | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/","og_locale":"en_US","og_type":"article","og_title":"Programmatic Creation of Codefresh Pipelines - Part1","og_description":"Update: Part 2 of the series in now available One of the big strengths of Codefresh is its friendly UI. For example, in Codefresh you can quickly deploy a service\/deployment to Kubernetes using just the graphical Interface. Of course, you are still free to use your own kubectl commands if you wish to do so, &hellip; Read more","og_url":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2018-09-11T18:34:55+00:00","article_modified_time":"2020-01-09T12:35:02+00:00","og_image":[{"width":800,"height":311,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png","width":800,"height":311},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#webpage","url":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/","name":"Programmatic Creation of Codefresh Pipelines - Part1 | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#primaryimage"},"datePublished":"2018-09-11T18:34:55+00:00","dateModified":"2020-01-09T12:35:02+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Programmatic Creation of Codefresh Pipelines &#8211; Part1"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Programmatic Creation of Codefresh Pipelines &#8211; Part1","datePublished":"2018-09-11T18:34:55+00:00","dateModified":"2020-01-09T12:35:02+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#webpage"},"wordCount":1255,"commentCount":2,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/09\/Blog_Image_2.png","keywords":["devops","CI\/CD","codefresh","pipeline","codefresh cli","monorepo"],"articleSection":["Continuous Integration","DevOps Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/devops-tutorial\/programmatic-creation-codefresh-pipelines-part1\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/10931"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=10931"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/10931\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/10932"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=10931"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=10931"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=10931"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}