{"id":11966,"date":"2019-09-16T12:39:49","date_gmt":"2019-09-16T12:39:49","guid":{"rendered":"http:\/\/codefresh.io\/?p=11966"},"modified":"2019-12-09T08:03:46","modified_gmt":"2019-12-09T08:03:46","slug":"codefresh-versus-jenkins","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/","title":{"rendered":"Codefresh versus Jenkins"},"content":{"rendered":"<p>One of the most popular questions we get from customers is how Codefresh compares to Jenkins. People are also curious about seeing the <a href=\"https:\/\/codefresh.io\/compare-codefresh-jenkins\/\">classic comparison matrix<\/a> between the two solutions as part of their evaluation.<\/p>\n<p><strong>It is important to understand that Codefresh and Jenkins are not truly comparable as they are not serving the same function. Codefresh has a bigger scope than Jenkins.<\/strong><\/p>\n<p>In fact, one of the most crucial points of the comparison is that Jenkins is <strong>only <\/strong>a Continuous Integration (CI) solution, while Codefresh covers <strong>both <\/strong> <a href=\"https:\/\/thenewstack.io\/understanding-the-difference-between-ci-and-cd\/\">Continuous Integration and Continuous Delivery<\/a>. Therefore by design, Codefresh offers many more features as it focuses on the full CI\/CD lifecycle. In the next sections, we will explain how Codefresh offers a superset of what is possible with Jenkins.<\/p>\n<p>Also notice that for the purposes of this article, \u201cJenkins\u201d refers to the open source Jenkins 1.x and 2.x versions (and their enterprise siblings from Cloudbees). We will explore <a href=\"http:\/\/codefresh.io\/containers\/codefresh-versus-jenkins-x\/\">Jenkins X in a separate article<\/a> and see how it compares to Codefresh on its own.<\/p>\n<h2>Point 1 &#8211; Jenkins is CI only, Codefresh covers both CI and deployments (CD)<\/h2>\n<p>At its core, Jenkins is a simple task runner. It can run builds that cover all the basic Continuous Integration tasks such as:<\/p>\n<ul>\n<li>Code compilation<\/li>\n<li>Artifact packaging<\/li>\n<li>Testing<\/li>\n<li>Pull request handling<\/li>\n<\/ul>\n<p>Codefresh, on the other hand, supports all these tasks as well as the actual deployment. Here is how both tools compare in the classic pipeline that first deploys to staging and then to production environments:<\/p>\n<figure id=\"attachment_11967\" aria-describedby=\"caption-attachment-11967\" style=\"width: 670px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/lifecycle.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/lifecycle.png\" alt=\"Jenkins does not deploy on its own\" width=\"670\" height=\"410\" class=\"size-full wp-image-11967\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/lifecycle.png 670w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/lifecycle-300x184.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/lifecycle-536x328.png 536w\" sizes=\"(max-width: 670px) 100vw, 670px\" \/><\/a><figcaption id=\"caption-attachment-11967\" class=\"wp-caption-text\">Jenkins does not deploy on its own<\/figcaption><\/figure>\n<p>It should be clear from the picture above the Jenkins offers zero facilities for actual deployment. When people say that they \u201cdeploy with Jenkins\u201d they mean that they <strong>execute a completely custom in-house deployment script which actually takes care of deployment<\/strong>.<\/p>\n<p>Jenkins does not do deployments on its own. It needs to be coupled with a CD solution and traditionally companies have used configuration management solutions for this purpose.<\/p>\n<figure id=\"attachment_11973\" aria-describedby=\"caption-attachment-11973\" style=\"width: 500px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/cicd-1.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/cicd-1.png\" alt=\"Extra tooling needed for deployments with Jenkins\" width=\"500\" height=\"432\" class=\"size-full wp-image-11973\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/cicd-1.png 500w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/cicd-1-300x259.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/cicd-1-380x328.png 380w\" sizes=\"(max-width: 500px) 100vw, 500px\" \/><\/a><figcaption id=\"caption-attachment-11973\" class=\"wp-caption-text\">Extra tooling needed for deployments with Jenkins<\/figcaption><\/figure>\n<p>The lack of Jenkins deployment capabilities is well known and several companies have tried to put glue code in their Jenkins pipelines in the form of bash\/Chef\/puppet\/Ansible scripts. This approach quickly results in a spaghetti of procedural custom code that is hard to maintain and upgrade. Maintenance of Jenkins nodes can quickly become one of the most boring tasks in a development team.<\/p>\n<p>Codefresh, on the other hand, was designed with the full software cycle in mind from the beginning. Here is a screenshot of Codefresh deploying to Kubernetes via the GUI (one of the many ways to deploy with Codefresh). This functionality is built into Codefresh by default (no plugin is needed for this capability).<\/p>\n<figure id=\"attachment_11971\" aria-describedby=\"caption-attachment-11971\" style=\"width: 891px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/deployment-step.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/deployment-step.png\" alt=\"\" width=\"891\" height=\"530\" class=\"size-full wp-image-11971\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/deployment-step.png 891w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/deployment-step-300x178.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/deployment-step-768x457.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/deployment-step-551x328.png 551w\" sizes=\"(max-width: 891px) 100vw, 891px\" \/><\/a><figcaption id=\"caption-attachment-11971\" class=\"wp-caption-text\">Codefresh built-in deployment facilities<\/figcaption><\/figure>\n<p>For programmatic deployments, Codefresh offers a <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\">declarative yaml syntax<\/a> (discussed later in this post) which is far superior to procedural in-house deployment scripts.<\/p>\n<p>What is more important is the fact that Codefresh standardizes deployment with its built-in deployment capabilities instead of using custom in-house scripts.<\/p>\n<h2>Point 2 &#8211; Codefresh is a batteries included DevOps solution<\/h2>\n<p>We have seen in the previous section that Codefresh covers both CI and CD while Jenkins is only a CI server. In the case of Kubernetes\/Helm deployments, Codefresh takes it one step further by providing <strong>everything <\/strong>you need in a single platform:<\/p>\n<ul>\n<li>A CI solution for packaging of artifacts<\/li>\n<li>A CD solution for deploying artifacts<\/li>\n<li>An integrated Docker registry to store artifacts<\/li>\n<li>An integrated Helm repository to store Helm charts (i.e. Kubernetes packages)<\/li>\n<\/ul>\n<p>This makes Codefresh a one-stop-shop for Kubernetes deployments as it contains the whole platform in a single cohesive package:<\/p>\n<figure id=\"attachment_11975\" aria-describedby=\"caption-attachment-11975\" style=\"width: 1000px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-with-codefresh.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-with-codefresh.png\" alt=\"\" width=\"1000\" height=\"600\" class=\"size-full wp-image-11975\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-with-codefresh.png 1000w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-with-codefresh-300x180.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-with-codefresh-768x461.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-with-codefresh-547x328.png 547w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" \/><\/a><figcaption id=\"caption-attachment-11975\" class=\"wp-caption-text\">Codefresh is a cohesive solution<\/figcaption><\/figure>\n<p>With Jenkins, you only get the CI part and nothing else. It is your responsibility to cover not only CD but also the Docker and Helm management of your pipelines.<\/p>\n<figure id=\"attachment_11977\" aria-describedby=\"caption-attachment-11977\" style=\"width: 1000px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd.png\" alt=\"\" width=\"1000\" height=\"600\" class=\"size-full wp-image-11977\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd.png 1000w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-300x180.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-768x461.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/typical-ci-cd-547x328.png 547w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" \/><\/a><figcaption id=\"caption-attachment-11977\" class=\"wp-caption-text\">Jenkins is only one part of the solution<\/figcaption><\/figure>\n<p>This means that any solution based on Jenkins requires extra effort on your part to find the missing components for the full pipeline. With Codefresh you can start deploying right away without any extra requirement.<\/p>\n<h2>Point 3 &#8211; Codefresh has built-in Docker\/Kubernetes\/Helm management dashboards<\/h2>\n<p>We have seen in the previous section that Codefresh also comes with an integrated registry and integrated Helm repository. Apart from the storage itself, Codefresh has a set of graphical dashboards that allow you to manage your artifacts and releases.<\/p>\n<p>The <a href=\"https:\/\/codefresh.io\/docs\/docs\/docker-registries\/codefresh-registry\/\">Docker registry<\/a> has its own dashboard that includes search filters:<\/p>\n<figure id=\"attachment_11978\" aria-describedby=\"caption-attachment-11978\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry-1024x626.png\" alt=\"\" width=\"1024\" height=\"626\" class=\"size-large wp-image-11978\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry-1024x626.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry-300x183.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry-768x470.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry-536x328.png 536w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh-registry.png 1174w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-11978\" class=\"wp-caption-text\">Codefresh Docker registry<\/figcaption><\/figure>\n<p>The <a href=\"https:\/\/codefresh.io\/docs\/docs\/deploy-to-kubernetes\/manage-kubernetes\/\">Kubernetes dashboard<\/a> shows the running status of your cluster along with what is deployed:<\/p>\n<figure id=\"attachment_11979\" aria-describedby=\"caption-attachment-11979\" style=\"width: 976px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/kubernetest-dashboard.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/kubernetest-dashboard.png\" alt=\"\" width=\"976\" height=\"786\" class=\"size-full wp-image-11979\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/kubernetest-dashboard.png 976w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/kubernetest-dashboard-300x242.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/kubernetest-dashboard-768x618.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/kubernetest-dashboard-407x328.png 407w\" sizes=\"(max-width: 976px) 100vw, 976px\" \/><\/a><figcaption id=\"caption-attachment-11979\" class=\"wp-caption-text\">Codefresh Kubernetes Dashboard<\/figcaption><\/figure>\n<p>Finally, the <a href=\"https:\/\/codefresh.io\/docs\/docs\/new-helm\/helm-releases-management\/\">Helm dashboard<\/a> shows what Helm packages are installed in your Kubernetes cluster:<\/p>\n<figure id=\"attachment_11980\" aria-describedby=\"caption-attachment-11980\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-1024x655.png\" alt=\"\" width=\"1024\" height=\"655\" class=\"size-large wp-image-11980\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-1024x655.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-300x192.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-768x491.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-513x328.png 513w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases.png 1048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-11980\" class=\"wp-caption-text\">Codefresh Helm Dashboard<\/figcaption><\/figure>\n<p>A unique feature offered by Codefresh is the ability to rollback Helm releases to a previous version right from the User interface.<\/p>\n<figure id=\"attachment_11981\" aria-describedby=\"caption-attachment-11981\" style=\"width: 824px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-Diff-Rollback-2.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-Diff-Rollback-2.png\" alt=\"\" width=\"824\" height=\"670\" class=\"size-full wp-image-11981\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-Diff-Rollback-2.png 824w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-Diff-Rollback-2-300x244.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-Diff-Rollback-2-768x624.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/Helm-Releases-Diff-Rollback-2-403x328.png 403w\" sizes=\"(max-width: 824px) 100vw, 824px\" \/><\/a><figcaption id=\"caption-attachment-11981\" class=\"wp-caption-text\">Rolling back Helm releases<\/figcaption><\/figure>\n<p>Jenkins offers none of these dashboards because it only handles CI and knows nothing about environments or deployments. This is a crucial point as we will see in the next section.<\/p>\n<h2>Point 4 &#8211; Codefresh offers full traceability from commit to deployment<\/h2>\n<p>We now reach perhaps the most important point in this comparison. We have seen already that Codefresh is a full DevOps platform that includes all phases of the CI\/CD lifecycle including artifact storage and cluster management.<\/p>\n<p>This gives Codefresh the full view of a deployment from start (commit) to finish (release). It is very easy from the Codefresh dashboards to track what is released where:<\/p>\n<figure id=\"attachment_11982\" aria-describedby=\"caption-attachment-11982\" style=\"width: 446px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/trace.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/trace.png\" alt=\"\" width=\"446\" height=\"600\" class=\"size-full wp-image-11982\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/trace.png 446w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/trace-223x300.png 223w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/trace-244x328.png 244w\" sizes=\"(max-width: 446px) 100vw, 446px\" \/><\/a><figcaption id=\"caption-attachment-11982\" class=\"wp-caption-text\">Codefresh knows the full story for a deployment<\/figcaption><\/figure>\n<p>The question of what is released on which environment is one of the most common questions among a development team. In Codefresh, any stakeholder can easily answer this question just by looking at the integrated dashboards.<\/p>\n<p>Jenkins, on the other hand, knows only about jobs and builds. It is your responsibility to find a way to correlate what is deployed from where.<\/p>\n<h2>Point 5 &#8211; Codefresh pipelines use Docker-based steps by design<\/h2>\n<p>Traditionally Jenkins 1.x builds are based on VMs which have pre-installed all possible build tools needed by all projects inside a company. Builds are then executed in a scripted manner where all needed build dependencies are prepared in advance.<\/p>\n<p>Unfortunately, this practice is the same one that results in huge unmaintainable jobs that were hard to version and reason as Jenkins 1.x was configured via GUI elements instead of programmatic pipelines.<\/p>\n<p>Using multiple versions of the same build tool in the same pipeline is a nightmare in Jenkins 1.x. Upgrading the tool to a new version is also very hard as it might break any of the builds that use it.<\/p>\n<p>Jenkins 2.x added the concept of pipelines that can execute commands <a href=\"https:\/\/jenkins.io\/doc\/book\/pipeline\/docker\/\">inside Docker images<\/a>. This is an extra ability that is changing the way builds are happening compared to Jenkins 1.x and is indeed a welcome change. Tool upgrades are now easier (i.e. only the respective Docker image must be changed) and using multiple versions of the same tool is now possible.<\/p>\n<p>This capability of Jenkins 2.x is however purely optional. A team that is using Jenkins is still able to create pipelines using the old way of installing all build tools on the Jenkins host and running them in a single VM, still stumbling in all the issues and problems of the traditional method.<\/p>\n<p>Codefresh, on the other hand, enforces Docker-based builds (where all build tools are Dockerized) in a strict manner by offering this as the sole way of creating pipelines. In Codefresh, all build steps are running <a href=\"https:\/\/codefresh.io\/docs\/docs\/configure-ci-cd-pipeline\/introduction-to-codefresh-pipelines\/\">in the context of a Docker container<\/a>. This makes Codefresh pipelines resilient to tool upgrades and future proof in the sense that any tool that comes in a Docker image can be used in a Codefresh pipeline.<\/p>\n<figure id=\"attachment_11991\" aria-describedby=\"caption-attachment-11991\" style=\"width: 300px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/steps-example1.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/steps-example1-300x227.png\" alt=\"\" width=\"300\" height=\"227\" class=\"size-medium wp-image-11991\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/steps-example1-300x227.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/steps-example1-434x328.png 434w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/steps-example1.png 735w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-11991\" class=\"wp-caption-text\">Docker images as build steps<\/figcaption><\/figure>\n<p>What is more, Codefresh offers some additional capabilities:<\/p>\n<ul>\n<li>A common Docker volume is attached automatically between all build steps, so there is no need for the concept of \u201cartifacts\u201d or \u201ccached folders\u201d in order to share information between steps.<\/li>\n<li>Aggressive caching of this volume as the well of the intermediate Docker images allow for fast builds regardless of the actual build tool used.<\/li>\n<li>All successful builds automatically push their result in the Integrated Docker registry, making future builds much faster if the artifacts do not change.<\/li>\n<\/ul>\n<p>The killer feature of Codefresh, however, is the capability to create dynamic Docker images from the same pipeline that will use them:<\/p>\n<figure id=\"attachment_11984\" aria-describedby=\"caption-attachment-11984\" style=\"width: 709px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/dynamic-docker-builds.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/dynamic-docker-builds.png\" alt=\"\" width=\"709\" height=\"389\" class=\"size-full wp-image-11984\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/dynamic-docker-builds.png 709w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/dynamic-docker-builds-300x165.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/dynamic-docker-builds-598x328.png 598w\" sizes=\"(max-width: 709px) 100vw, 709px\" \/><\/a><figcaption id=\"caption-attachment-11984\" class=\"wp-caption-text\">Dynamic Docker image creation<\/figcaption><\/figure>\n<p>In Codefresh it is possible to:<\/p>\n<ol>\n<li>Create a Docker image on a build step with custom tools (e.g. add a test framework on an application image).<\/li>\n<li>Run a command in the next step using a context the Docker image created in the previous.<\/li>\n<\/ol>\n<p>To sum up, Codefresh has fully embraced Docker-based builds instead of offering it as an optional extra feature as Jenkins 2.x does.<\/p>\n<h2>Point 6 &#8211; Codefresh pipelines are declarative yml instead of Groovy scripts<\/h2>\n<p>We have already mentioned the problems of maintenance when it comes to Jenkins 1.x. Jenkins 2.x comes with programmatic pipelines that are implemented in the Groovy language.<\/p>\n<p>Even though Groovy is a great programming language for <a href=\"https:\/\/en.wikipedia.org\/wiki\/Domain-specific_language\">DSLs <\/a>and can result in very concise code, it can also be used to create unreadable procedural scripts.<\/p>\n<p>Jenkins 2.x allows for both \u201cdeclarative\u201d and \u201cscripted\u201d modes for Groovy scripts. The \u201cscripted\u201d mode is very close to real Groovy code making it very easy for developers to abuse the syntax offered.<\/p>\n<p>Codefresh offers only one mode for pipelines: <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\">declarative yaml<\/a>. There is no scripted mode, so creating pipelines always happens in a standardized manner. This is very important for companies that are moving from monoliths to microservices, as the large number of pipelines from different teams makes standardization a compulsory requirement.<\/p>\n<p>Codefresh also comes with very sensible defaults (convention-via-configuration). The most minimal pipeline in Codefresh is just 5 lines:<\/p>\n<pre>\nversion: '1.0'\nsteps:\n  MyAppDockerImage:\n    type: build\n    image_name: my-own-app\n<\/pre>\n<p>This pipeline will:<\/p>\n<ol>\n<li>Automatically checkout the code from the GIT repository connected to it.<\/li>\n<li>Create a Docker image named \u201cmy-own-app\u201d from the root level Dockerfile and tag it with the branch name of the git repository.<\/li>\n<li>Upload the resulting docker image in the integrated Codefresh registry (happens automatically for all successful pipeline builds).<\/li>\n<\/ol>\n<p>The comparable Jenkins 2.x pipeline would be more than 15 lines of Groovy script.<\/p>\n<p>As another example, <a href=\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\">Monorepo support<\/a> (where multiple projects are in the same git repo) can be enabled in Codefresh with a single line:<\/p>\n<pre>\nmodifiedFilesGlob: 'my-awesome-app\/**'\n<\/pre>\n<p>This instructs the Codefresh pipeline to run only if the files under my-awesome-app folder are changed. The same thing in Jenkins requires custom scripting and knowledge of the internal Jenkins API.<\/p>\n<h2>Point 7 &#8211; Codefresh extensions are Docker images instead of custom Groovy libraries<\/h2>\n<p>We have talked in the previous section about Groovy pipelines in Jenkins 2.x and how they can easily be abused for unmaintainable scripts. Another important point is the concept of pipeline extensions.<\/p>\n<p>In Jenkins 2.x it is perfectly fine to use the \u201cdeclarative\u201d mode of Groovy in simple pipelines. In complex pipelines, however, you will need to extend the basic syntax and add your own capabilities.<\/p>\n<p>The suggested way to extend Jenkins is via shared libraries. The <a href=\"https:\/\/jenkins.io\/doc\/book\/pipeline\/shared-libraries\/\">official Jenkins documentation page<\/a> alone is 11 pages and assumes that:<\/p>\n<ul>\n<li>you know Groovy,<\/li>\n<li>you know the shared library Jenkins API,<\/li>\n<li>you have admin access on the Jenkins instance in order to install the library.<\/li>\n<\/ul>\n<p>This makes the creation of a Jenkins library a full-scale project as you need to follow a predefined project file structure, learn the API and also know how to test and install it.<\/p>\n<p>The fact that only people with admin access can install shared libraries goes against the whole spirit of DevOps, as it instantly creates a barrier between those that want to upgrade the libraries used and those that can actually do it.<\/p>\n<p>The Groovy choice is also a big problem for companies that have no in-house expertise in Java\/Groovy. Even if there is expertise in Java\/Groovy, the Jenkins API is hard to mock and test.<\/p>\n<p>Codefresh takes a very simple approach. A <a href=\"https:\/\/github.com\/codefresh-io\/plugins\">Codefresh plugin<\/a> is just another Docker image. That\u2019s it! There is no other requirement. You can use <strong>any <\/strong>programming language to create a Codefresh plugin. You can also use <strong>any <\/strong> pre-existing Docker images for a Codefresh plugin.<\/p>\n<p>Communication with Codefresh pipelines happens only via environment variables and files which are known by all developers. This means that you can write Codefresh plugins in Scala, Rust, Go, Erlang, Haskell and anything else that can write files and understand environment variables.<\/p>\n<p>Finally, using a custom Docker image in a Codefresh pipeline requires no special privileges. Creating and testing a custom Docker image in Codefresh is actually a very common pattern.<\/p>\n<p>In summary, creating a plugin for Codefresh is a painless operation without requiring a specific programming language, API knowledge, or admin access.<\/p>\n<h2>Conclusion<\/h2>\n<p>By this point, it should be clear that Jenkins offers only a very small subset of Codefresh features. It should also be clear that this is because the scope of Jenkins is very narrow. Jenkins started as a simple job\/task runner and was never designed as a full CI\/CD solution.<\/p>\n<p>There is a very large number of Jenkins plugins out there (of various quality levels) but none of them can change the basic abstractions offered by Jenkins, which have nothing to do with deployment and monitoring of a modern cloud application.<\/p>\n<p>The abstractions in Jenkins are only two<\/p>\n<ul>\n<li>Jobs\/Pipelines<\/li>\n<li>Builds<\/li>\n<\/ul>\n<p>In Codefresh the following are top-level constructs:<\/p>\n<ul>\n<li>Git repositories<\/li>\n<li>Pipelines<\/li>\n<li>Builds<\/li>\n<li>Docker images<\/li>\n<li>Docker registries<\/li>\n<li>Kubernetes clusters<\/li>\n<li>Kubernetes services<\/li>\n<li>Kubernetes namespaces<\/li>\n<li>Kubernetes deployments<\/li>\n<li>Helm repositories<\/li>\n<li>Helm charts<\/li>\n<li>Helm releases<\/li>\n<\/ul>\n<p>As companies are moving into microservices, where the deployment of an application is something that happens very often (instead of having full blown \u201crelease\u201d periods), having a true CI\/CD platform will become an essential requirement. <strong>Despite all the plugins, Jenkins is still a plain build server<\/strong>.<\/p>\n<p><strong>Update:<\/strong> A comparison is also available for <a href=\"http:\/\/codefresh.io\/containers\/codefresh-versus-jenkins-x\/\">Codefresh versus Jenkins X<\/a>.<\/p>\n<p>New to Codefresh? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&#038;utm_medium=Post&#038;utm_campaign=versusJenkins\">Create Your Free Account Today<\/a>!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"11966\"\/>","protected":false},"excerpt":{"rendered":"<p>One of the most popular questions we get from customers is how Codefresh compares to Jenkins. People are also curious about seeing the classic comparison matrix between the two solutions as part of their evaluation. It is important to understand that Codefresh and Jenkins are not truly comparable as they are not serving the same &hellip; <a href=\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":11969,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120,1505,1543],"tags":[13,15,24,53,59,68],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Codefresh versus Jenkins | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Codefresh versus Jenkins\" \/>\n<meta property=\"og:description\" content=\"One of the most popular questions we get from customers is how Codefresh compares to Jenkins. People are also curious about seeing the classic comparison matrix between the two solutions as part of their evaluation. It is important to understand that Codefresh and Jenkins are not truly comparable as they are not serving the same &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2019-09-16T12:39:49+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-09T08:03:46+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png\" \/>\n\t<meta property=\"og:image:width\" content=\"670\" \/>\n\t<meta property=\"og:image:height\" content=\"200\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"12 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png\",\"width\":670,\"height\":200},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/\",\"name\":\"Codefresh versus Jenkins | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#primaryimage\"},\"datePublished\":\"2019-09-16T12:39:49+00:00\",\"dateModified\":\"2019-12-09T08:03:46+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Codefresh versus Jenkins\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Codefresh versus Jenkins\",\"datePublished\":\"2019-09-16T12:39:49+00:00\",\"dateModified\":\"2019-12-09T08:03:46+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#webpage\"},\"wordCount\":2418,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png\",\"keywords\":[\"jenkins\",\"continuous integration\",\"Containers\",\"CI\/CD\",\"codefresh\",\"continuous delivery\"],\"articleSection\":[\"Continuous Deployment\/Delivery\",\"Containers\",\"Continuous Integration\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Codefresh versus Jenkins | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/","og_locale":"en_US","og_type":"article","og_title":"Codefresh versus Jenkins","og_description":"One of the most popular questions we get from customers is how Codefresh compares to Jenkins. People are also curious about seeing the classic comparison matrix between the two solutions as part of their evaluation. It is important to understand that Codefresh and Jenkins are not truly comparable as they are not serving the same &hellip; Read more","og_url":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2019-09-16T12:39:49+00:00","article_modified_time":"2019-12-09T08:03:46+00:00","og_image":[{"width":670,"height":200,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"12 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png","width":670,"height":200},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#webpage","url":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/","name":"Codefresh versus Jenkins | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#primaryimage"},"datePublished":"2019-09-16T12:39:49+00:00","dateModified":"2019-12-09T08:03:46+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Codefresh versus Jenkins"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Codefresh versus Jenkins","datePublished":"2019-09-16T12:39:49+00:00","dateModified":"2019-12-09T08:03:46+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#webpage"},"wordCount":2418,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/11\/codefresh_vs__Jenkins_-2.png","keywords":["jenkins","continuous integration","Containers","CI\/CD","codefresh","continuous delivery"],"articleSection":["Continuous Deployment\/Delivery","Containers","Continuous Integration"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-jenkins\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/11966"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=11966"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/11966\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/11969"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=11966"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=11966"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=11966"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}