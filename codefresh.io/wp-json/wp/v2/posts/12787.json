{"id":12787,"date":"2019-02-05T19:02:31","date_gmt":"2019-02-05T19:02:31","guid":{"rendered":"http:\/\/codefresh.io\/?p=12787"},"modified":"2019-04-18T19:26:01","modified_gmt":"2019-04-18T19:26:01","slug":"codefresh-versus-bitbucket-pipelines","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/","title":{"rendered":"Codefresh versus Bitbucket pipelines"},"content":{"rendered":"<p>Bitbucket pipelines are the native Continuous Integration (CI) part of the Bitbucket GIT repository service. If you are already using Bitbucket for your source control needs, you might think that adopting Bitbucket pipelines is also natural as they are tightly integrated.<\/p>\n<p>Choosing <a href=\"https:\/\/codefresh.io\/docs\/docs\/getting-started\/create-a-basic-pipeline\/\">Bitbucket pipelines<\/a> just because they are already part of the bitbucket service might seem a good idea at first glance, but in reality, it forces you to use what is readily available instead of what is truly appropriate to your needs.<\/p>\n<p>Bitbucket is one of the <a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/git-providers\/\">supported providers<\/a> in Codefresh (like GitHub and GitLab) so it is perfectly possible to still use Bitbucket as a source code repository and delegate all pipelines to Codefresh.<\/p>\n<p>In this post, we will see a comparison between Bitbucket pipelines and Codefresh. The reality is that like all other traditional solutions, Bitbucket was originally a pure CI solution which was later retrofitted with deployment capabilities. Codefresh, on the other hand, was designed from scratch with the full CI\/CD lifecycle in mind.<\/p>\n<h3>Table of contents:<\/h3>\n<ol>\n<li>Bitbucket pipelines only work with Bitbucket, Codefresh works with Bitbucket, GitHub, and GitLab<\/li>\n<li>Bitbucket pipelines are limited to 10 steps<\/li>\n<li>Bitbucket pipelines are not designed for microservices<\/li>\n<li>Bitbucket pipelines git triggers are very limited compared to Codefresh<\/li>\n<li>Build caching must be manually configured in Bitbucket pipelines<\/li>\n<li>Docker support is not first class in Bitbucket pipelines<\/li>\n<li>There is no Docker cache in Bitbucket pipelines<\/li>\n<li>Codefresh has explicit support for Kubernetes deployments<\/li>\n<li>Codefresh has explicit support for Helm deployments<\/li>\n<li>Bitbucket pipelines are SAAS only<\/li>\n<\/ol>\n<p>Let\u2019s see all these points in order&#8230;<\/p>\n<h2>Bitbucket pipelines only work with Bitbucket, Codefresh works with Bitbucket, GitHub, and GitLab<\/h2>\n<p>This is probably the first important point regarding this comparison: Bitbucket pipelines only work with Bitbucket repositories. If your organization works purely with Bitbucket this might not be a problem. But in more realistic situations (with big companies) it is very common to work with multiple source code providers.<\/p>\n<p>Bitbucket pipelines only work with the integrated Bitbucket repositories and the only way to work with another repository is by importing it first as a native source code repository (essentially creating a second copy of it). This means that if you want to collaborate with people that have repositories in GitLab, GitHub or any other external source, you will be forced to maintain a completely separate repository just for taking advantage of Bitbucket pipelines (a very impractical solution).<\/p>\n<p>Codefresh is agnostic as far as the source code is concerned. You can connect any type of git repository from GitHub, GitLab or Bitbucket (or even your on-premise git platform) and use all of them in the same manner. You can even mix source code from different git providers in the same Codefresh pipeline.<\/p>\n<p>In summary, if you have code repositories outside Bitbucket or want to collaborate with people that are not using Bitbucket, Codefresh is only viable CI\/CD platform.<\/p>\n<h2>Bitbucket pipelines are limited to 10 steps<\/h2>\n<p>This is a second Bitbucket limitation that may prove a deal-breaker for big organizations. Bitbucket pipelines can only have a maximum number of 10 steps and even if you use parallel steps this number is still a limit on the total number of steps used.<\/p>\n<p>You may never hit the limit if you work on small pipelines. Any large organization, however, will most likely need pipelines with more steps, especially when it comes to building microservices that consist of multiple applications.<\/p>\n<p>Codefresh has no limit on the pipeline steps (as long as runtime resources are available) so you are free to create and design any pipeline structure you want.<\/p>\n<figure id=\"attachment_12790\" aria-describedby=\"caption-attachment-12790\" style=\"width: 1871px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines.png\" alt=\"A common Codefresh pipeline\" width=\"1871\" height=\"845\" class=\"size-full wp-image-12790\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines.png 1871w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines-300x135.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines-768x347.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines-1024x462.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/visual-pipelines-628x284.png 628w\" sizes=\"(max-width: 1871px) 100vw, 1871px\" \/><\/a><figcaption id=\"caption-attachment-12790\" class=\"wp-caption-text\">A common Codefresh pipeline<\/figcaption><\/figure>\n<p>In Bitbucket the pipeline shown above would not be possible as it contains 15 steps.<\/p>\n<h2>Bitbucket pipelines are not designed for microservices<\/h2>\n<p>Bitbucket pipelines are mainly a CI platform that existed long before containers and microservices gained popularity. As such, it was retrofitted with container support, while still keeping the legacy design that was present before.<\/p>\n<p>This is more evident in how thing are organized in Bitbucket pipelines. Everything is attached to a single project. This made sense in the era of monolithic applications but is totally inflexible for microservices.<\/p>\n<p>As a quick example, the build view in Bitbucket pipelines always shows the builds for a single project:<\/p>\n<figure id=\"attachment_12791\" aria-describedby=\"caption-attachment-12791\" style=\"width: 1059px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds.png\" alt=\"Bitbucket build view\" width=\"1059\" height=\"473\" class=\"size-full wp-image-12791\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds.png 1059w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds-300x134.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds-768x343.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds-1024x457.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/bitbucket-builds-628x280.png 628w\" sizes=\"(max-width: 1059px) 100vw, 1059px\" \/><\/a><figcaption id=\"caption-attachment-12791\" class=\"wp-caption-text\">Bitbucket build view<\/figcaption><\/figure>\n<p>If you have multiple projects that form an application, it is impossible to see all of them together in Bitbucket pipelines.<\/p>\n<p>Codefresh on the other hand is designed with micro-services in mind and integrations and view are at the account level instead of the project level. In the same example, Codefresh allows you to view builds from multiple projects at the same time.<\/p>\n<figure id=\"attachment_12792\" aria-describedby=\"caption-attachment-12792\" style=\"width: 1086px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds.png\" alt=\"Codefresh build view\" width=\"1086\" height=\"774\" class=\"size-full wp-image-12792\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds.png 1086w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds-300x214.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds-768x547.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds-1024x730.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/all-builds-460x328.png 460w\" sizes=\"(max-width: 1086px) 100vw, 1086px\" \/><\/a><figcaption id=\"caption-attachment-12792\" class=\"wp-caption-text\">Codefresh build view<\/figcaption><\/figure>\n<p>The same mentality of a single monolithic application is evident in all other aspects of Bitbucket pipelines. Even pipelines themselves are attached to a single project. Codefresh is a much more flexible solution that allows you to create pipelines attached to multiple git repositories (or even none).<\/p>\n<figure id=\"attachment_12793\" aria-describedby=\"caption-attachment-12793\" style=\"width: 1224px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines.png\" alt=\"Codefresh pipeline view\" width=\"1224\" height=\"575\" class=\"size-full wp-image-12793\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines.png 1224w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines-300x141.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines-768x361.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines-1024x481.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/unlinked-pipelines-628x295.png 628w\" sizes=\"(max-width: 1224px) 100vw, 1224px\" \/><\/a><figcaption id=\"caption-attachment-12793\" class=\"wp-caption-text\">Codefresh pipeline view<\/figcaption><\/figure>\n<h2>Bitbucket pipelines git triggers are very limited compared to Codefresh<\/h2>\n<p>Building a basic pipeline that only checks out the code at each commit is very easy to do in Bitbucket. Unfortunately, this is the only way git triggers can be used. The only choice you have is whether you will build a commit, a tag or branch.<\/p>\n<p>Codefresh has a much more advanced triggering system that can be used with multiple conditions:<\/p>\n<figure id=\"attachment_12794\" aria-describedby=\"caption-attachment-12794\" style=\"width: 300px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-triggers.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-triggers-300x286.png\" alt=\"Codefresh triggers\" width=\"300\" height=\"286\" class=\"size-medium wp-image-12794\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-triggers-300x286.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-triggers-344x328.png 344w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-triggers.png 592w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-12794\" class=\"wp-caption-text\">Codefresh triggers<\/figcaption><\/figure>\n<p>For example, you can define a trigger only when a Pull request is created against a specific branch. With Codefresh you also have <a href=\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\">full monorepo support<\/a> where a trigger will only happen if specific files within the repository change. Bitbucket pipeline have no such support out of the box.<\/p>\n<h2>Build caching must be manually configured in Bitbucket pipelines<\/h2>\n<p>In Bibucket pipelines (like <a href=\"https:\/\/codefresh.io\/continuous-integration\/codefresh-versus-gitlabci\/\">GitLabCI<\/a>) you have to setup manually caching for your pipelines. Bitbucket will not cache anything out of the box and it is your responsibility to define which directories will be cached.<\/p>\n<p>To enable cache, you need a special directive in your Bitbucket pipeline definition to select which programming language you want to use. Here is an example for Node:<\/p>\n<pre>\npipelines:\n default:\n    - step:\n       caches:\n         - node\n       script:\n         - npm install\n         - npm test\n<\/pre>\n<p>The same is also true for build artifacts. There is a separate syntax in Bitbucket pipelines where you define you artifacts.<\/p>\n<p>Codefresh has instead fully automatic caching. If you want to move a folder from one step of the pipeline to the next (that either contains dependencies or artifact) you need to do exactly\u2026 nothing!<\/p>\n<p>Codefresh accomplishes this by automatically mounting a shared volume between all the pipeline steps. The project folder itself is checked out on this volume.<\/p>\n<figure id=\"attachment_12795\" aria-describedby=\"caption-attachment-12795\" style=\"width: 807px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-volume-example1.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-volume-example1.png\" alt=\"Codefresh automatic caching\" width=\"807\" height=\"333\" class=\"size-full wp-image-12795\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-volume-example1.png 807w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-volume-example1-300x124.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-volume-example1-768x317.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-volume-example1-628x259.png 628w\" sizes=\"(max-width: 807px) 100vw, 807px\" \/><\/a><figcaption id=\"caption-attachment-12795\" class=\"wp-caption-text\">Codefresh automatic caching<\/figcaption><\/figure>\n<p>In the example above the node_modules folder is automatically shared with all the steps in the pipeline. You don\u2019t need to define it as a special cache folder.<\/p>\n<p>Notice that this shared volume is also cached by Codefresh between subsequent builds of the same pipeline. This makes Codefresh builds very fast without any extra configuration.<\/p>\n<h2>Docker support is not first class in Bitbucket pipelines<\/h2>\n<p>Like several other legacy CI solutions, Bitbucket pipelines was originally a VM based platform. When Docker appeared into the scene, Bitbucket pipelines added support of running Docker commands manually. Here is an example Bitbucket pipeline:<\/p>\n<pre>\npipelines:\n default:\n    - step:\n       services:\n         - docker\n       script:\n         # build the Docker image (this will use the Dockerfile in the root of the repo)\n         - docker build -t $IMAGE_NAME .\n         # authenticate with the Docker Hub registry\n         - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD\n         # push the new Docker image to the Docker registry\n         - docker push $IMAGE_NAME\n<\/pre>\n<p>The commands just represent what you would run locally in your workstation. You also need to litter your pipeline with Docker credentials. In summary, with Bitbucket pipelines \u201cDocker support\u201d just means the ability to run Docker commands.<\/p>\n<p>Codefresh was designed with containers in mind and it has proper Docker support by including the following:<\/p>\n<ol>\n<li>A free private Docker registry built into the platform<\/li>\n<li>Special Docker pipeline steps for creating and pushing images<\/li>\n<li>Automatic pushing to the internal Docker registry<\/li>\n<li>Account-level external Docker registry integration.<\/li>\n<\/ol>\n<p>Codefresh has a built-in registry (comes for free with all accounts) as well as handy UI dashboard that allows you to inspect your Docker images.<\/p>\n<figure id=\"attachment_12797\" aria-describedby=\"caption-attachment-12797\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry-1024x628.png\" alt=\"Built-in Codefresh registry\" width=\"1024\" height=\"628\" class=\"size-large wp-image-12797\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry-1024x628.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry-300x184.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry-768x471.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry-535x328.png 535w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-registry.png 1171w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-12797\" class=\"wp-caption-text\">Built-in Codefresh registry<\/figcaption><\/figure>\n<p>Apart from the internal Docker registry, you can also link any external Docker registry (and promote images between registries). The Docker credentials are defined once in the account level and all your pipelines are just using the integration.<\/p>\n<figure id=\"attachment_12798\" aria-describedby=\"caption-attachment-12798\" style=\"width: 246px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/add-docker-registry.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/add-docker-registry-246x300.png\" alt=\"Adding an external docker registry\" width=\"246\" height=\"300\" class=\"size-medium wp-image-12798\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/add-docker-registry-246x300.png 246w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/add-docker-registry-269x328.png 269w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/add-docker-registry.png 489w\" sizes=\"(max-width: 246px) 100vw, 246px\" \/><\/a><figcaption id=\"caption-attachment-12798\" class=\"wp-caption-text\">Adding an external docker registry<\/figcaption><\/figure>\n<p>All Codefresh pipelines automatically push their artifacts to the internal Docker registry. If you want to push to external registries as well you can easily use the dedicated push step.<\/p>\n<p>Here is a Codefresh pipeline:<\/p>\n<pre>\nbuild_image:\n  title: Building DockerImage\n  type: build\n  image_name: my-app:master\npush_name:\n  type: push\n  title: Pushing to ECR\n  candidate: ${{build_image}}\n  tag: latest\n  image_name: codefresh\/my-app  \n  registry: my-ecr-registry\n<\/pre>\n<p>Notice the lack of Docker login instructions or credentials.<\/p>\n<p>In summary, Codefresh offers everything you need to work with Docker images (including a private Docker registry), while with Bitbucket pipelines you need to setup everything by yourself with custom scripts.<\/p>\n<h2>There is no Docker cache in Bitbucket pipelines<\/h2>\n<p>We have already seen the fact that Codefresh also includes a private Docker registry (and associated dashboard). Codefresh takes Docker support one step further by having full Docker cache for all build nodes resulting in very fast builds.<\/p>\n<p>The Docker cache in Codefresh works exactly like the local Docker layer cache that you are familiar with and can help you achieve very fast builds as only the changed layers will be fetched for each build.<\/p>\n<figure id=\"attachment_12799\" aria-describedby=\"caption-attachment-12799\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache-1024x549.png\" alt=\"Docker caching in Codefresh\" width=\"1024\" height=\"549\" class=\"size-large wp-image-12799\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache-1024x549.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache-300x161.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache-768x412.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache-612x328.png 612w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/codefresh-cache.png 1224w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-12799\" class=\"wp-caption-text\">Docker caching in Codefresh<\/figcaption><\/figure>\n<p>In the pipeline above, you can see that Codefresh automatically detects which layers have already been built.<\/p>\n<p>Bitbucket pipelines on the other hand have zero support for Docker cache. Thus, everytime that you build a container you pay the full price for the build even if only some layers are actually changed.<\/p>\n<figure id=\"attachment_12800\" aria-describedby=\"caption-attachment-12800\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching-1024x591.png\" alt=\"Bitbicket pipelines with no Docker cache\" width=\"1024\" height=\"591\" class=\"size-large wp-image-12800\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching-1024x591.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching-300x173.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching-768x443.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching-569x328.png 569w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/redownload-caching.png 1241w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-12800\" class=\"wp-caption-text\">Bitbicket pipelines with no Docker cache<\/figcaption><\/figure>\n<p>Here I am running a Bitbucket pipeline a second time (without actually changing in my Dockerfile) and you can see that all Docker layers are downloaded again and again.<\/p>\n<p>Depending on your Docker migration path, not having Docker cache in your pipelines might become a serious blocker in the way developers interact with the CI\/CD platform.<\/p>\n<h2>Codefresh has explicit support for Kubernetes deployments<\/h2>\n<p>Codefresh is currently the only CI\/CD solution that offers an integrated Kubernetes dashboard.<\/p>\n<figure id=\"attachment_12801\" aria-describedby=\"caption-attachment-12801\" style=\"width: 973px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/kubernetest-dashboard.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/kubernetest-dashboard.png\" alt=\"Codefresh Kubernetes dashboard\" width=\"973\" height=\"786\" class=\"size-full wp-image-12801\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/kubernetest-dashboard.png 973w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/kubernetest-dashboard-300x242.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/kubernetest-dashboard-768x620.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/kubernetest-dashboard-406x328.png 406w\" sizes=\"(max-width: 973px) 100vw, 973px\" \/><\/a><figcaption id=\"caption-attachment-12801\" class=\"wp-caption-text\">Codefresh Kubernetes dashboard<\/figcaption><\/figure>\n<p>Once you connect your cluster you can see in real time all the services, pods, and deployments from your releases.<\/p>\n<p>Bitbucket offers nothing for verifying deployments. Once a deployment is finished you need to use an external service to actually see it running.<\/p>\n<h2>Codefresh has explicit support for Helm deployments<\/h2>\n<p>Similar to Kubernetes, Codefresh comes also with full support for Helm. Out of the box, you get:<\/p>\n<ul>\n<li>A private Helm repository for your releases<\/li>\n<li>The ability to connect any external Helm repository<\/li>\n<li>A Helm release dashboard<\/li>\n<li>A Helm deployment dashboard<\/li>\n<li>A Helm environment dashboard.<\/li>\n<\/ul>\n<p>Here is the Helm dashboard:<\/p>\n<figure id=\"attachment_12802\" aria-describedby=\"caption-attachment-12802\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases-1024x655.png\" alt=\"Codefresh Helm dashboard\" width=\"1024\" height=\"655\" class=\"size-large wp-image-12802\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases-1024x655.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases-300x192.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases-768x491.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases-513x328.png 513w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Helm-Releases.png 1048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-12802\" class=\"wp-caption-text\">Codefresh Helm dashboard<\/figcaption><\/figure>\n<p>Here is the list of all Helm releases (public and private repos are supported):<\/p>\n<figure id=\"attachment_12804\" aria-describedby=\"caption-attachment-12804\" style=\"width: 961px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/helm-repository.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/helm-repository.png\" alt=\"Helm app browser\" width=\"961\" height=\"748\" class=\"size-full wp-image-12804\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/helm-repository.png 961w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/helm-repository-300x234.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/helm-repository-768x598.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/helm-repository-421x328.png 421w\" sizes=\"(max-width: 961px) 100vw, 961px\" \/><\/a><figcaption id=\"caption-attachment-12804\" class=\"wp-caption-text\">Helm app browser<\/figcaption><\/figure>\n<p>And here is the Helm environment board:<\/p>\n<figure id=\"attachment_12805\" aria-describedby=\"caption-attachment-12805\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board-1024x514.png\" alt=\"Helm environment board\" width=\"1024\" height=\"514\" class=\"size-large wp-image-12805\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board-1024x514.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board-300x151.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board-768x386.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board-628x315.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/board.png 1609w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-12805\" class=\"wp-caption-text\">Helm environment board<\/figcaption><\/figure>\n<p>In summary, the Helm support in Codefresh is very comprehensive. There is zero support for Helm releases in Bitbucket pipelines.<\/p>\n<h2>Codefresh also offers on-premise and hybrid installation modes<\/h2>\n<p>Bitbucket Pipelines are only offered as a SAAS product. This is fine if your application and source code is already on the cloud. There are several companies however with strict security requirements for keeping source code on premise (e.g. financial or medical).<\/p>\n<p>Codefresh also offers an on-premise installation mode for companies who wish to run the Codefresh platform on their own infrastructure. There is also a hybrid mode available so that the builders themselves are running in the customer infrastructure while the UI is still in the SAAS product.<\/p>\n<p>In summary, Codefresh can cater to any type and size of company, while Bitbucket pipelines offer only a single usage mode (cloud version).<\/p>\n<h2>Conclusion<\/h2>\n<p>Bitbucket pipelines is a CI solution limited only to Bitbucket and small pipelines (10 steps maximum) which was later retrofitted for Docker support as a way to run Docker commands.<\/p>\n<p>Codefresh is a full CI\/CD solution with Docker caching, private Docker and Helm registry, Kubernetes and Helm release dashboards.<\/p>\n<p>If you prefer a matrix-style comparison, read the table below:<\/p>\n<div class=\"table-responsive\"><table class=\"table table-responsive-sm\">\n<thead>\n<tr>\n<th>Feature<\/th>\n<th>Bitbucket pipelines<\/th>\n<th>Codefresh<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td>Git Repository dashboard<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Git support<\/td>\n<td>Bitbucket<\/td>\n<td>GitHub, GitLab, Bitbucket<\/td>\n<\/tr>\n<tr>\n<td>Quay\/ACR\/JFrog\/Dockerhub triggers<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>GIT triggers<\/td>\n<td>Commits only<\/td>\n<td>Any git event<\/td>\n<\/tr>\n<tr>\n<td>Native Monorepo support<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Global pipeline view<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Max pipeline steps<\/td>\n<td>10<\/td>\n<td>Limited to resources only<\/td>\n<\/tr>\n<tr>\n<td>Built-in dynamic test environments<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Local builds<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>First class docker support<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Automatic build caching<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Docker layer caching<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Internal Docker registry<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Docker Registry dashboard<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Native Kubernetes deployment<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Kubernetes Release Dashboard<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Integrated Helm repository<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Helm deployment dashboard<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Helm release dashboard<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Helm environment dashboard<\/td>\n<td>No<\/td>\n<td>Yes<\/td>\n<\/tr>\n<tr>\n<td>Installation<\/td>\n<td>Cloud<\/td>\n<td>Cloud\/On-prem\/Hybrid<\/td>\n<\/tr>\n<\/tbody>\n<\/table><\/div>\n<p>New to Codefresh? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&#038;utm_medium=Post&#038;utm_campaign=versusBitbucketPipelines\">Create Your Free Account Today!<\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"12787\"\/>","protected":false},"excerpt":{"rendered":"<p>Bitbucket pipelines are the native Continuous Integration (CI) part of the Bitbucket GIT repository service. If you are already using Bitbucket for your source control needs, you might think that adopting Bitbucket pipelines is also natural as they are tightly integrated. Choosing Bitbucket pipelines just because they are already part of the bitbucket service might &hellip; <a href=\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":12789,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120,1543],"tags":[15,44,53,59,68,3084],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Codefresh versus Bitbucket pipelines | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Codefresh versus Bitbucket pipelines\" \/>\n<meta property=\"og:description\" content=\"Bitbucket pipelines are the native Continuous Integration (CI) part of the Bitbucket GIT repository service. If you are already using Bitbucket for your source control needs, you might think that adopting Bitbucket pipelines is also natural as they are tightly integrated. Choosing Bitbucket pipelines just because they are already part of the bitbucket service might &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2019-02-05T19:02:31+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-04-18T19:26:01+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"670\" \/>\n\t<meta property=\"og:image:height\" content=\"200\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"11 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg\",\"width\":670,\"height\":200},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/\",\"name\":\"Codefresh versus Bitbucket pipelines | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#primaryimage\"},\"datePublished\":\"2019-02-05T19:02:31+00:00\",\"dateModified\":\"2019-04-18T19:26:01+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Codefresh versus Bitbucket pipelines\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Codefresh versus Bitbucket pipelines\",\"datePublished\":\"2019-02-05T19:02:31+00:00\",\"dateModified\":\"2019-04-18T19:26:01+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#webpage\"},\"wordCount\":2175,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg\",\"keywords\":[\"continuous integration\",\"Kubernetes\",\"CI\/CD\",\"codefresh\",\"continuous delivery\",\"bitbucket\"],\"articleSection\":[\"Continuous Deployment\/Delivery\",\"Continuous Integration\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Codefresh versus Bitbucket pipelines | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/","og_locale":"en_US","og_type":"article","og_title":"Codefresh versus Bitbucket pipelines","og_description":"Bitbucket pipelines are the native Continuous Integration (CI) part of the Bitbucket GIT repository service. If you are already using Bitbucket for your source control needs, you might think that adopting Bitbucket pipelines is also natural as they are tightly integrated. Choosing Bitbucket pipelines just because they are already part of the bitbucket service might &hellip; Read more","og_url":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2019-02-05T19:02:31+00:00","article_modified_time":"2019-04-18T19:26:01+00:00","og_image":[{"width":670,"height":200,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"11 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg","width":670,"height":200},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#webpage","url":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/","name":"Codefresh versus Bitbucket pipelines | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#primaryimage"},"datePublished":"2019-02-05T19:02:31+00:00","dateModified":"2019-04-18T19:26:01+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Codefresh versus Bitbucket pipelines"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Codefresh versus Bitbucket pipelines","datePublished":"2019-02-05T19:02:31+00:00","dateModified":"2019-04-18T19:26:01+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#webpage"},"wordCount":2175,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/02\/Bitbucket_vs_codefresh_670x200.jpg","keywords":["continuous integration","Kubernetes","CI\/CD","codefresh","continuous delivery","bitbucket"],"articleSection":["Continuous Deployment\/Delivery","Continuous Integration"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-deployment\/codefresh-versus-bitbucket-pipelines\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/12787"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=12787"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/12787\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/12789"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=12787"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=12787"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=12787"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}