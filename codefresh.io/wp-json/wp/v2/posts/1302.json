{"id":1302,"date":"2019-10-01T02:00:30","date_gmt":"2019-10-01T02:00:30","guid":{"rendered":"https:\/\/codefresh.io\/?p=1302"},"modified":"2021-11-09T17:10:47","modified_gmt":"2021-11-09T17:10:47","slug":"not-ignore-dockerignore-2","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/","title":{"rendered":"Do not ignore .dockerignore (it&#8217;s expensive and potentially dangerous)"},"content":{"rendered":"<p>In this article we will learn about the docker build context and how to optimize it (using the <code>.dockerignore<\/code> file).<\/p>\n<p>Docker images can run anywhere on cheap cloud services so why bother optimizing them? Well it turns out there are lots of advantages to using .dockerignore. It can help reduce Docker image size, speedup <code>docker build<\/code> and avoid unintended secret exposure (read on to see what I mean).\u00a0To understand why .dockerignore is so effective you have to understand the build context.\u00a0Read this useful tutorial and <a href=\"https:\/\/g.codefresh.io\/signup?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=DoT\">jump into Codefresh to deploy your service<\/a>!<\/p>\n<h2>Docker build context<\/h2>\n<p>The <code>docker build<\/code> command is used to build a new Docker image. There is one argument you can pass to the <code>build<\/code> command  that specifies the <strong>build context<\/strong>. In most cases you usually pass the current directory as in <code>docker build . -t my-app-image:1.0.1<\/code>.<\/p>\n<h3>So, what is the Docker <strong>build context<\/strong>?<\/h3>\n<p>First, remember, that Docker is a client-server application, it consists of Docker client and Docker server (also known as the Docker\u00a0<em>daemon<\/em>). The Docker client command line tool talks with the Docker server and asks it to do things. One of these things is Docker\u00a0<strong>build<\/strong>: building a new Docker image. The Docker server can run on the same machine as the client or in a virtual machine, that also can be local, remote or in the cloud.<\/p>\n<h3>Why is that important and how is the Docker <strong>build context<\/strong> related to this fact?<\/h3>\n<p>In order to create a new Docker image, the Docker server needs access to the files, you want to create the Docker image from. So, you need somehow to send these files to the Docker server (because remember the Docker server can be another remote machine). These files are the Docker <strong>build context<\/strong>. The Docker client packs all <strong>build context<\/strong> files into a <code>tar<\/code> archive and uploads this archive to the Docker server. By default the client will take all files (and folders) in current working directory and use them as the <strong>build context<\/strong>. While the default behavior sounds good in theory, in practice you must be aware of its implications.<\/p>\n<p>You can also use as Docker context an existing <code>tar<\/code> archive or <code>git<\/code> repository. In the case of a\u00a0<code>git<\/code> repository, the client will clone it with submodules into a temporary folder and will create a <strong>build context<\/strong> archive from it.<\/p>\n<h2>Impact on Docker build<\/h2>\n<p>The first output line, that you see, running the <code>docker build<\/code> command is:<\/p>\n<pre>Sending build context to Docker daemon 45.3 MB\nStep 1: FROM ...\n<\/pre>\n<p>This should make things clear. Actually, <strong>every time<\/strong> you are running the <code>docker build<\/code> command, the Docker client creates a new <strong>build context<\/strong> archive and sends it to the Docker server. So, you are always paying this \u201ctax\u201d: the time it takes to create an archive, storage and network traffic and latency time.<\/p>\n<blockquote><p><strong>Tip<\/strong>: The <strong>rule of thumb<\/strong> is not adding files to the <strong>build context<\/strong>, if you do not need them in your Docker image. The Docker context should be minimal and secret-free.<\/p><\/blockquote>\n<h2>The <strong>.dockerignore<\/strong> file<\/h2>\n<p>The <code>.dockerignore<\/code> file is the tool, that can help you to define the Docker <strong>build context<\/strong> you really need. Using this file, you can specify <strong>ignore rules<\/strong> and <strong>exceptions<\/strong> from these rules for files and folder, that won\u2019t be included in the <strong>build context<\/strong> and thus won\u2019t be packed into an archive and uploaded to the Docker server.<\/p>\n<h2>Why should you care?<\/h2>\n<p>Indeed, why should you care? Computers today are fast, networks are also pretty fast (hopefully) and storage is cheap. So, this \u201ctax\u201d may be not that big, right?<br \/>\nI will try to convince you, that you should care.<\/p>\n<h2>Reason #1: Docker image size<\/h2>\n<p>The world of software development is shifting lately towards <em>continuous delivery<\/em>, <em>elastic infrastructure<\/em> and <em>microservice architecture<\/em>.<\/p>\n<p>Your systems are composed of multiple components (or <em>microservices<\/em>), each one of them running inside Linux container. There might be tens or hundreds of services and even more service instances. These service instances can be built and deployed independently of each other and this can be done for <strong>every single code commit<\/strong>. More than that, <em>elastic infrastructure<\/em> means that new compute nodes can be added or removed from the system and its microservices can move from node to node, to support scale or availability requirements. That means, your Docker images will be frequently built and transferred.<\/p>\n<p>When you practice continuous delivery and <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/cd_helm_kubernetes_microservices_2\/\">microservice architecture<\/a>, image size and image build time <strong>do matter<\/strong>. If it much faster to deploy a 5MB Docker image to 100 servers, than a 700MB image. It also helps local development as well.<\/p>\n<h2>Reason #2: Unintended secrets exposure<\/h2>\n<p>Not controlling your <strong>build context<\/strong>, can also lead to an unintended exposure of your code, commit history, and secrets (keys and credentials).<\/p>\n<p>If you copy files into you Docker image with <code>ADD .<\/code> or <code>COPY .<\/code> command, you may unintentionally include your source files, whole <code>git<\/code> history (a <code>.git<\/code> folder), secret files (like <code>.aws<\/code>, <code>.env<\/code>, private keys), cache and other files not only into the Docker <strong>build context<\/strong>, but also into the final Docker image.<\/p>\n<p>There are multiple Docker images currently available on DockerHub, that expose application source code, passwords, keys and credentials (for example <a href=\"http:\/\/thehackernews.com\/2016\/07\/vine-source-code.html\">Twitter Vine<\/a>). Copying the .git folder in a Docker image by mistake is especially damaging.<\/p>\n<blockquote><p><strong>Tip<\/strong>: Always mention your <code>.git<\/code> folder in your <code>.dockerignore<\/code> file <\/p><\/blockquote>\n<h2>Reason #3: The Docker build &#8211; cache invalidation<\/h2>\n<p>A common pattern is to inject an application\u2019s entire codebase into an image using an instruction like this:<\/p>\n<pre>COPY . \/usr\/src\/app\n<\/code><\/pre>\n<p>In this case, we\u2019re copying the <strong>entire<\/strong> <strong>build context<\/strong> into the image. It\u2019s also important to understand, that every Dockerfile command generates a new layer. So, if any of the included files changes in the entire build context, this change will invalidate the build cache for <code>COPY . \/opt\/myapp<\/code> layer and a new image layer will be generated on the next build (making the build much slower)<\/p>\n<p>If your working directory contains files that are frequently updated (logs, test results, git history, temporary cache files and similar), you are going to regenerate this layer for every <code>docker build<\/code> run. If you don&#8217;t manage the build context correctly, your builds will be very slow as cache cannot be used correctly.<\/p>\n<h2 >The <code>.dockerignore<\/code> syntax<\/h2>\n<p>Now that you know why you need to control the docker build context, we can see how this is done. The <code>.dockerignore<\/code> file is similar to <code>gitignore<\/code> file, used by \u00a0the\u00a0<code>git<\/code> tool. similarly to <code>.gitignore<\/code> file, it allows you to specify a pattern for files and folders that should be ignored by the Docker client when generating a <strong>build context<\/strong>. While <code>.dockerignore<\/code> file syntax used to describe <strong>ignore patterns<\/strong> is similar to <code>.gitignore<\/code>, it\u2019s not the same.<\/p>\n<p>The <code>.dockerignore<\/code> pattern matching syntax is based on the Go <code>filepath.Match()<\/code> function and includes some additions.<\/p>\n<p>Here is the complete syntax for the <code>.dockerignore<\/code>:<\/p>\n<pre>pattern:\n{ term }\nterm:\n'*' matches any sequence of non-Separator characters\n'?' matches any single non-Separator character\n'[' [ '^' ] { character-range } ']'\ncharacter class (must be non-empty)\nc matches character c (c != '*', '?', '\\\\', '[')\n'\\\\' c matches character c\n\ncharacter-range:\nc matches character c (c != '\\\\', '-', ']')\n'\\\\' c matches character c\nlo '-' hi matches character c for lo &lt;= c &lt;= hi\n\nadditions:\n'**' matches any number of directories (including zero)\n'!' lines starting with ! (exclamation mark) can be used to make exceptions to exclusions\n'#' lines starting with this character are ignored: use it for comments\n<\/pre>\n<p><strong>Note:<\/strong> Using the <code>!<\/code> character is pretty tricky. The combination of this character and patterns before and after line with the <code>!<\/code> character can be used to create more advanced rules.<\/p>\n<h2>Examples<\/h2>\n<p>Here are some examples. You can also find more if you search for &#8220;docker ignore for [your favorite programming language]&#8221; in Google.<\/p>\n<pre>\n# ignore .git and .cache folders\n.git\n.cache\n<\/pre>\n<pre>\n# ignore all *.class files in all folders, including build root\n**\/*.class\n<\/pre>\n<pre>\n# ignore all markdown files (md) beside all README*.md other than README-secret.md\n*.md\n!README*.md\nREADME-secret.md\n<\/pre>\n<h2>Should the Dockerfile itself be mentioned in .dockerignore<\/h2>\n<p>This is a question that has no clear answer and it mostly boils does to personal preference. We suggest you include the Dockerfile in the Docker image (i.e. not mention it in .dockerignore) as it can help the consumers of the image to understand how it was build. Before you do that, make sure that you Dockerfile does not contain any sensitive information.<\/p>\n<h2>Conclusion<\/h2>\n<p>Use <code>.dockerignore<\/code> in every project, where you are building Docker images. It will make your Docker images small, fast and secure. It will help with the Docker cache during local development as well.<\/p>\n<p>At the very least you <strong>must <\/strong> mention your .git folder in the docker ignore file. Then add extra files specific to your project such as<\/p>\n<ul>\n<li>build logs<\/li>\n<li>test scripts\/results<\/li>\n<li>temporary files<\/li>\n<li>caching\/intermediate artifacts<\/li>\n<li>local secrets<\/li>\n<li>Local development files such as docker-compose.yml<\/li>\n<\/ul>\n<p>For more information see the <a href=\"https:\/\/docs.docker.com\/engine\/reference\/builder\/#dockerignore-file\">official Documentation<\/a><\/p>\n<p>Ready to try Codefresh, the CI\/CD platform for Docker\/Kubernetes\/Helm? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=dockerignore\">Create Your Free Account Today<\/a>!<\/p>\n<p>*** This story is also published at my <a href=\"https:\/\/medium.com\/@alexeiled\/do-not-ignore-dockerignore-47f5fb67b448#.ap1a8tfyc\">personal blog<\/a> ***<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"1302\"\/>","protected":false},"excerpt":{"rendered":"<p>In this article we will learn about the docker build context and how to optimize it (using the .dockerignore file). Docker images can run anywhere on cheap cloud services so why bother optimizing them? Well it turns out there are lots of advantages to using .dockerignore. It can help reduce Docker image size, speedup docker &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/\">Read more<\/a><\/p>\n","protected":false},"author":28,"featured_media":20535,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[14,15,24,51,52,53,54],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Do not ignore .dockerignore (it&#039;s expensive and potentially dangerous) | Codefresh<\/title>\n<meta name=\"description\" content=\"The .dockerignore file is the tool, that can help you to define the Docker build context you really need.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Do not ignore .dockerignore (it&#039;s expensive and potentially dangerous)\" \/>\n<meta property=\"og:description\" content=\"The .dockerignore file is the tool, that can help you to define the Docker build context you really need.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2019-10-01T02:00:30+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-11-09T17:10:47+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2560\" \/>\n\t<meta property=\"og:image:height\" content=\"1440\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@alexeiled\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Alexei Ledenev\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg\",\"width\":2560,\"height\":1440},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/\",\"name\":\"Do not ignore .dockerignore (it's expensive and potentially dangerous) | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#primaryimage\"},\"datePublished\":\"2019-10-01T02:00:30+00:00\",\"dateModified\":\"2021-11-09T17:10:47+00:00\",\"description\":\"The .dockerignore file is the tool, that can help you to define the Docker build context you really need.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Do not ignore .dockerignore (it&#8217;s expensive and potentially dangerous)\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50\"},\"headline\":\"Do not ignore .dockerignore (it&#8217;s expensive and potentially dangerous)\",\"datePublished\":\"2019-10-01T02:00:30+00:00\",\"dateModified\":\"2021-11-09T17:10:47+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#webpage\"},\"wordCount\":1329,\"commentCount\":15,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg\",\"keywords\":[\"docker\",\"continuous integration\",\"Containers\",\".dockerignore\",\"devops\",\"CI\/CD\",\"build\"],\"articleSection\":[\"Docker Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50\",\"name\":\"Alexei Ledenev\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g\",\"caption\":\"Alexei Ledenev\"},\"description\":\"Alexei is an experienced software architect and HPE distinguished technologist. He currently works at Codefresh as the Chief Researcher, focusing lately on #docker, #golang and #aws. In his spare time, Alexei maintains a couple of Docker-centric open-source projects, writes tech blog posts, and enjoys traveling and playing with his kids. https:\/\/github.com\/gaia-adm\/pumba\",\"sameAs\":[\"https:\/\/medium.com\/@alexeiled\/\",\"https:\/\/twitter.com\/alexeiled\"],\"url\":\"https:\/\/codefresh.io\/author\/alexei\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Do not ignore .dockerignore (it's expensive and potentially dangerous) | Codefresh","description":"The .dockerignore file is the tool, that can help you to define the Docker build context you really need.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/","og_locale":"en_US","og_type":"article","og_title":"Do not ignore .dockerignore (it's expensive and potentially dangerous)","og_description":"The .dockerignore file is the tool, that can help you to define the Docker build context you really need.","og_url":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2019-10-01T02:00:30+00:00","article_modified_time":"2021-11-09T17:10:47+00:00","og_image":[{"width":2560,"height":1440,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@alexeiled","twitter_site":"@codefresh","twitter_misc":{"Written by":"Alexei Ledenev","Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg","width":2560,"height":1440},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/","name":"Do not ignore .dockerignore (it's expensive and potentially dangerous) | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#primaryimage"},"datePublished":"2019-10-01T02:00:30+00:00","dateModified":"2021-11-09T17:10:47+00:00","description":"The .dockerignore file is the tool, that can help you to define the Docker build context you really need.","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Do not ignore .dockerignore (it&#8217;s expensive and potentially dangerous)"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50"},"headline":"Do not ignore .dockerignore (it&#8217;s expensive and potentially dangerous)","datePublished":"2019-10-01T02:00:30+00:00","dateModified":"2021-11-09T17:10:47+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#webpage"},"wordCount":1329,"commentCount":15,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/boat-fail-shipping-wrong-timur-m-7QgYG0Wj-YY-unsplash-scaled.jpg","keywords":["docker","continuous integration","Containers",".dockerignore","devops","CI\/CD","build"],"articleSection":["Docker Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50","name":"Alexei Ledenev","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g","caption":"Alexei Ledenev"},"description":"Alexei is an experienced software architect and HPE distinguished technologist. He currently works at Codefresh as the Chief Researcher, focusing lately on #docker, #golang and #aws. In his spare time, Alexei maintains a couple of Docker-centric open-source projects, writes tech blog posts, and enjoys traveling and playing with his kids. https:\/\/github.com\/gaia-adm\/pumba","sameAs":["https:\/\/medium.com\/@alexeiled\/","https:\/\/twitter.com\/alexeiled"],"url":"https:\/\/codefresh.io\/author\/alexei\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1302"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/28"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=1302"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1302\/revisions"}],"predecessor-version":[{"id":20534,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1302\/revisions\/20534"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/20535"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=1302"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=1302"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=1302"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}