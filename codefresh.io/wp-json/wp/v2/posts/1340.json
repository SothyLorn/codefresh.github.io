{"id":1340,"date":"2016-12-22T22:12:50","date_gmt":"2016-12-22T22:12:50","guid":{"rendered":"https:\/\/codefresh.io\/?p=1340"},"modified":"2022-03-24T20:41:35","modified_gmt":"2022-03-24T20:41:35","slug":"deploy-docker-compose-v3-swarm-mode-cluster","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/","title":{"rendered":"Deploy Docker Compose (v3) to Swarm (mode) Cluster"},"content":{"rendered":"<div class=\"markdown-here-wrapper\">\n<div class=\"markdown-here-exclude\">\n<p>&nbsp;<\/p>\n<blockquote><p><strong>Disclaimer<\/strong>: all code snippets below\u00a0require\u00a0<strong>Docker 1.13+<\/strong><\/p><\/blockquote>\n<\/div>\n<h2 id=\"tl-dr\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.6em; border-bottom: 1px solid #dddddd;\">TL;DR<\/h2>\n<p style=\"margin: 0px 0px 1.2em !important;\"><strong>Docker 1.13<\/strong> simplifies deployment of composed applications to a <strong>swarm<\/strong> (mode) cluster. And you can do it without creating a new <code>dab<\/code> (<em>Distribution Application Bundle<\/em>) file, but just using familiar and well-known <code>docker-compose.yml<\/code> syntax (with some additions) and the\u00a0<code>--compose-file<\/code> option.\u00a0<span style=\"font-weight: 400;\">Read about this exciting feature, <\/span><strong><a href=\"https:\/\/g.codefresh.io\/signup?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=DeployT\">create a free Codefresh account<\/a><\/strong><span style=\"font-weight: 400;\">, and try <\/span>building, testing and deploying \u00a0images instantly.<\/p>\n<p><img class=\"aligncenter wp-image-1341\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png\" alt=\"compose_swarm\" width=\"830\" height=\"424\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png 900w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm-300x153.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm-768x393.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm-628x321.png 628w\" sizes=\"(max-width: 830px) 100vw, 830px\" \/><\/p>\n<h2 id=\"swarm-cluster\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.6em; border-bottom: 1px solid #dddddd;\">Swarm cluster<\/h2>\n<p style=\"margin: 0px 0px 1.2em !important;\">Docker Engine 1.12 introduced a new <strong>swarm mode<\/strong> for natively managing a cluster of Docker Engines called a <strong>swarm<\/strong>. Docker <strong>swarm mode<\/strong> implements <a href=\"https:\/\/docs.docker.com\/engine\/swarm\/raft\/\">Raft Consensus Algorithm<\/a> and does not require using external key value store anymore, such as <a href=\"https:\/\/www.consul.io\/\">Consul<\/a> or <a href=\"https:\/\/github.com\/coreos\/etcd\">etcd<\/a>.<br \/>\nIf you want to run a <strong>swarm<\/strong> cluster on a developer\u2019s machine, there are several options.<br \/>\nThe first option and most widely known\u00a0is to use a <code>docker-machine<\/code> tool with some virtual driver (Virtualbox, Parallels or other).<br \/>\nBut, in this post, I will use another approach: using <a href=\"https:\/\/hub.docker.com\/_\/docker\/\">docker-in-docker<\/a> Docker image with Docker for Mac, see more details in my <a href=\"http:\/\/..\/swarm_dind\">Docker Swarm cluster with docker-in-docker on MacOS<\/a> post.<\/p>\n<h2 id=\"docker-registry-mirror\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.4em; border-bottom: 1px solid #eeeeee;\">Docker Registry mirror<\/h2>\n<p style=\"margin: 0px 0px 1.2em !important;\">When you deploy a new service on a local swarm cluster, I recommend setting up a local Docker registry mirror so you can run\u00a0all swarm nodes with the\u00a0<code>--registry-mirror<\/code> option, pointing to your local Docker registry. By running a local Docker registry mirror, you can keep most of the redundant image fetch traffic on your local network and speedup service deployment.<\/p>\n<h3 id=\"docker-swarm-cluster-bootstrap-script\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.3em;\">Docker Swarm cluster bootstrap script<\/h3>\n<p style=\"margin: 0px 0px 1.2em !important;\">I\u2019ve prepared a shell script to bootstrap a 4 node swarm cluster with Docker registry mirror and the very nice <a href=\"https:\/\/github.com\/ManoMarks\/docker-swarm-visualizer\">swarm visualizer<\/a> application.<br \/>\nThe script initializes docker engine as a <strong>swarm master<\/strong>, then starts 3 new docker-in-docker containers and joins them to the <strong>swarm<\/strong> cluster as worker nodes. All worker nodes run with the\u00a0<code>--registry-mirror<\/code> option.<\/p>\n<pre class=\"lang:zsh decode:true\">#!\/bin\/bash\r\n\r\n# vars\r\n[ -z \"$NUM_WORKERS\" ] &amp;&amp; NUM_WORKERS=3\r\n\r\n# init swarm (need for service command); if not created\r\ndocker node ls 2&gt; \/dev\/null | grep \"Leader\"\r\nif [ $? -ne 0 ]; then\r\n  docker swarm init &gt; \/dev\/null 2&gt;&amp;1\r\nfi\r\n\r\n# get join token\r\nSWARM_TOKEN=$(docker swarm join-token -q worker)\r\n\r\n# get Swarm master IP (Docker for Mac xhyve VM IP)\r\nSWARM_MASTER=$(docker info --format \"{{.Swarm.NodeAddr}}\")\r\necho \"Swarm master IP: ${SWARM_MASTER}\"\r\nsleep 10\r\n\r\n# start Docker registry mirror\r\ndocker run -d --restart=always -p 4000:5000 --name v2_mirror \\\r\n  -v $PWD\/rdata:\/var\/lib\/registry \\\r\n  -e REGISTRY_PROXY_REMOTEURL=https:\/\/registry-1.docker.io \\\r\n  registry:2.5\r\n\r\n# run NUM_WORKERS workers with SWARM_TOKEN\r\nfor i in $(seq \"${NUM_WORKERS}\"); do\r\n  # remove node from cluster if exists\r\n  docker node rm --force $(docker node ls --filter \"name=worker-${i}\" -q) &gt; \/dev\/null 2&gt;&amp;1\r\n  # remove worker contianer with same name if exists\r\n  docker rm --force $(docker ps -q --filter \"name=worker-${i}\") &gt; \/dev\/null 2&gt;&amp;1\r\n  # run new worker container\r\n  docker run -d --privileged --name worker-${i} --hostname=worker-${i} \\\r\n    -p ${i}2375:2375 \\\r\n    -p ${i}5000:5000 \\\r\n    -p ${i}5001:5001 \\\r\n    -p ${i}5601:5601 \\\r\n    docker:1.13-rc-dind --registry-mirror http:\/\/${SWARM_MASTER}:4000\r\n  # add worker container to the cluster\r\n  docker --host=localhost:${i}2375 swarm join --token ${SWARM_TOKEN} ${SWARM_MASTER}:2377\r\ndone\r\n\r\n# show swarm cluster\r\nprintf \"\\nLocal Swarm Cluster\\n===================\\n\"\r\n\r\ndocker node ls\r\n\r\n# echo swarm visualizer\r\nprintf \"\\nLocal Swarm Visualizer\\n===================\\n\"\r\ndocker run -it -d --name swarm_visualizer \\\r\n  -p 8000:8080 -e HOST=localhost \\\r\n  -v \/var\/run\/docker.sock:\/var\/run\/docker.sock \\\r\n  manomarks\/visualizer:beta\r\n<\/pre>\n<h2 id=\"deploy-multi-container-application-the-old-way\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.4em; border-bottom: 1px solid #eeeeee;\">Deploying multi-container application &#8211; the \u201cold\u201d way<\/h2>\n<p style=\"margin: 0px 0px 1.2em !important;\">The Docker <code>compose<\/code> is a tool (and deployment specification format) for defining and running composed multi-container Docker applications. Before Docker 1.12, you could use <code>docker-compose<\/code>\u00a0to deploy such applications to a <strong>swarm<\/strong> cluster. With 1.12 release, that is no longer possible: <code>docker-compose<\/code> can deploy your application on <em>single Docker host only<\/em>.<br \/>\nIn order to deploy it to a <strong>swarm<\/strong> cluster, you need to create a special deployment specification file (also knows as <em>Distribution Application Bundle<\/em>) in <code>dab<\/code> format (see more <a href=\"https:\/\/github.com\/docker\/docker\/blob\/master\/experimental\/docker-stacks-and-bundles.md\">here<\/a>).<br \/>\nTo create this file, run\u00a0<code>docker-compose bundle<\/code>. This will create a\u00a0JSON file that describes a multi-container composed application with Docker images referenced by <code>@sha256<\/code> instead of tags. Currently the\u00a0<code>dab<\/code> file format does not support multiple settings from <code>docker-compose.yml<\/code> and does not support\u00a0options from the\u00a0<code>docker service create<\/code> command.<br \/>\nIt&#8217;s really too bad,\u00a0the <code>dab<\/code> bundle format looks promising, but is useless in Docker 1.12.<\/p>\n<h2 id=\"deploy-multi-container-application-the-new-way\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.4em; border-bottom: 1px solid #eeeeee;\">Deploying multi-container application &#8211; the \u201cnew\u201d way<\/h2>\n<p style=\"margin: 0px 0px 1.2em !important;\">With Docker 1.13, the \u201cnew\u201d way to deploy a multi-container composed application is to use <code>docker-compose.yml<\/code>\u00a0again (<em>hurrah!<\/em>). Kudos to the Docker team!<br \/>\n<strong>*Note<\/strong>: You do not need\u00a0<code>docker-compose<\/code>. You only need a\u00a0<code>yaml<\/code> file in <strong>docker-compose<\/strong> format (<code>version: \"3\"<\/code>)<\/p>\n<pre style=\"font-size: 1em; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; margin: 1.2em 0px;\"><code style=\"font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; margin: 0px 0.15em; padding: 0.5em 0.7em; border: 1px solid #cccccc; background-color: #f8f8f8; overflow: auto;\">$ docker deploy --compose-file docker-compose.yml\r\n<\/code><\/pre>\n<h2 id=\"docker-compose-v3-version-3-\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.4em; border-bottom: 1px solid #eeeeee;\">Docker compose v3 (<code>version: \"3\"<\/code>)<\/h2>\n<p style=\"margin: 0px 0px 1.2em !important;\"><em>So, what\u2019s new in docker compose version 3?<\/em><br \/>\nFirst, I suggest you take a deeper look at the\u00a0<a href=\"https:\/\/github.com\/aanand\/compose-file\/blob\/master\/schema\/data\/config_schema_v3.0.json\">docker-compose schema<\/a>. It is an extension of the well-known <code>docker-compose<\/code> format.<br \/>\n<strong>Note:<\/strong><code>docker-compose<\/code> tool (<code>ver. 1.9.0<\/code>) does not support <code>docker-compose.yaml version: \"3\"<\/code> yet.<br \/>\nThe most visible change is around <strong>swarm<\/strong> service deployment.<br \/>\nNow you can specify all options supported by <code>docker service create\/update<\/code> commands, this includes:<\/p>\n<ul style=\"margin: 1.2em 0px; padding-left: 2em;\">\n<li style=\"margin: 0.5em 0px;\">number of service replicas (or global service)<\/li>\n<li style=\"margin: 0.5em 0px;\">service labels<\/li>\n<li style=\"margin: 0.5em 0px;\">hard and soft limits for service (container) CPU and memory<\/li>\n<li style=\"margin: 0.5em 0px;\">service restart policy<\/li>\n<li style=\"margin: 0.5em 0px;\">service rolling update policy<\/li>\n<li style=\"margin: 0.5em 0px;\">deployment placement constraints <a href=\"https:\/\/github.com\/docker\/docker\/blob\/master\/docs\/reference\/commandline\/service_create.md#specify-service-constraints---constraint\">link<\/a><br \/>\n<h3 id=\"docker-compose-v3-example\" style=\"margin: 1.3em 0px 1em; padding: 0px; font-weight: bold; font-size: 1.3em;\">Docker compose v3 example<\/h3>\n<p>I\u2019ve created a \u201cnew\u201d compose file (v3) for the classic Cats vs. Dogs voting app. This example application contains 5 services with the following deployment configurations:<\/li>\n<\/ul>\n<ol style=\"margin: 1.2em 0px; padding-left: 2em;\">\n<li style=\"margin: 0.5em 0px;\"><code>voting-app<\/code> &#8211; a Python webapp which lets you vote between two options; requires <code>redis<\/code><\/li>\n<li style=\"margin: 0.5em 0px;\"><code>redis<\/code> &#8211; Redis queue which collects new votes; deployed on <code>swarm manager<\/code> node<\/li>\n<li><code>db<\/code> &#8211; Postgres database backed by a Docker volume; deployed on swarm manager node<\/li>\n<li><span class=\"lang:default decode:true crayon-inline \">result-app<\/span>\u00a0 Node.js webapp which shows the results of the voting in real time; 2 replicas, deployed on swarm worker nodes<\/li>\n<li><code>worker<\/code> .NET worker which consumes votes and stores them in <code>db<\/code>;<\/li>\n<\/ol>\n<ul style=\"margin: 1.2em 0px; padding-left: 2em;\">\n<li style=\"margin: 0.5em 0px;\"><strong># of replicas:<\/strong> 2 replicas<\/li>\n<li style=\"margin: 0.5em 0px;\"><strong>hard limit:<\/strong> max 25% CPU and 512MB memory<\/li>\n<li style=\"margin: 0.5em 0px;\"><strong>soft limit:<\/strong> max 25% CPU and 256MB memory<\/li>\n<li style=\"margin: 0.5em 0px;\"><strong>placement:<\/strong> on <code>swarm worker<\/code> nodes only<\/li>\n<li style=\"margin: 0.5em 0px;\"><strong>restart policy:<\/strong> restart on-failure, with 5 seconds delay, up to 3 attempts<\/li>\n<li style=\"margin: 0.5em 0px;\"><strong>update policy:<\/strong> one by one, with 10 seconds delay and 0.3 failure rate to tolerate during the update<\/li>\n<\/ul>\n<pre class=\"lang:default decode:true\">version: \"3\"\r\n\r\nservices:\r\n\r\n  redis:\r\n    image: redis:3.2-alpine\r\n    ports:\r\n      - \"6379\"\r\n    networks:\r\n      - voteapp\r\n    deploy:\r\n      placement:\r\n        constraints: [node.role == manager]\r\n\r\n  db:\r\n    image: postgres:9.4\r\n    volumes:\r\n      - db-data:\/var\/lib\/postgresql\/data\r\n    networks:\r\n      - voteapp\r\n    deploy:\r\n      placement:\r\n        constraints: [node.role == manager]\r\n\r\n  voting-app:\r\n    image: gaiadocker\/example-voting-app-vote:good\r\n    ports:\r\n      - 5000:80\r\n    networks:\r\n      - voteapp\r\n    depends_on:\r\n      - redis\r\n    deploy:\r\n      mode: replicated\r\n      replicas: 2\r\n      labels: [APP=VOTING]\r\n      placement:\r\n        constraints: [node.role == worker]\r\n\r\n  result-app:\r\n    image: gaiadocker\/example-voting-app-result:latest\r\n    ports:\r\n      - 5001:80\r\n    networks:\r\n      - voteapp\r\n    depends_on:\r\n      - db\r\n\r\n  worker:\r\n    image: gaiadocker\/example-voting-app-worker:latest\r\n    networks:\r\n      voteapp:\r\n        aliases:\r\n          - workers\r\n    depends_on:\r\n      - db\r\n      - redis\r\n    # service deployment\r\n    deploy:\r\n      mode: replicated\r\n      replicas: 2\r\n      labels: [APP=VOTING]\r\n      # service resource management\r\n      resources:\r\n        # Hard limit - Docker does not allow to allocate more\r\n        limits:\r\n          cpus: '0.25'\r\n          memory: 512M\r\n        # Soft limit - Docker makes best effort to return to it\r\n        reservations:\r\n          cpus: '0.25'\r\n          memory: 256M\r\n      # service restart policy\r\n      restart_policy:\r\n        condition: on-failure\r\n        delay: 5s\r\n        max_attempts: 3\r\n        window: 120s\r\n      # service update configuration\r\n      update_config:\r\n        parallelism: 1\r\n        delay: 10s\r\n        failure_action: continue\r\n        monitor: 60s\r\n        max_failure_ratio: 0.3\r\n      # placement constraint - in this case on 'worker' nodes only\r\n      placement:\r\n        constraints: [node.role == worker]\r\n\r\nnetworks:\r\n    voteapp:\r\n\r\nvolumes:\r\n  db-data:\r\n<\/pre>\n<p>Run the <span class=\"lang:default decode:true crayon-inline\">docker deploy &#8211;compose-file docker-compose.yml\u00a0VOTE<\/span>\u00a0command to deploy my version of \u201cCats vs. Dogs\u201d application on a swarm cluster.<\/p>\n<p><img class=\"aligncenter wp-image-1342\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/Screen-Shot-2016-12-18-at-17.59.13.png\" alt=\"Cats vs. Dogs on Swarm cluster\" width=\"832\" height=\"750\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/Screen-Shot-2016-12-18-at-17.59.13.png 1782w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/Screen-Shot-2016-12-18-at-17.59.13-300x270.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/Screen-Shot-2016-12-18-at-17.59.13-768x692.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/Screen-Shot-2016-12-18-at-17.59.13-1024x923.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/Screen-Shot-2016-12-18-at-17.59.13-364x328.png 364w\" sizes=\"(max-width: 832px) 100vw, 832px\" \/><\/p>\n<hr \/>\n<p style=\"margin: 0px 0px 1.2em !important;\">Hope you find this post useful. I look forward to your comments and any questions you have.<\/p>\n<p><span style=\"font-weight: 400;\">Hope you find this post useful. I look forward to your comments and any questions you have. <\/span><span style=\"font-weight: 400;\">Now, it\u2019s time to get you onboarded. \u00a0Go on and <\/span><a href=\"https:\/\/g.codefresh.io\/signup?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=DeployB\"><span style=\"font-weight: 400;\">create a free Codefresh account<\/span><\/a><span style=\"font-weight: 400;\"> to start building, testing and deploying Docker images faster than ever.<\/span><\/p>\n<\/div>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">New to Codefresh? <\/span><strong><a href=\"https:\/\/codefresh.io\/request-a-demo\/\">Schedule a FREE onboarding and start making pipelines fast<\/a>.<\/strong><span style=\"font-weight: 400;\"> and start building, testing and deploying Docker images faster than ever.<\/span><\/p>\n<p>&nbsp;<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"1340\"\/>","protected":false},"excerpt":{"rendered":"<p>&nbsp; Disclaimer: all code snippets below\u00a0require\u00a0Docker 1.13+ TL;DR Docker 1.13 simplifies deployment of composed applications to a swarm (mode) cluster. And you can do it without creating a new dab (Distribution Application Bundle) file, but just using familiar and well-known docker-compose.yml syntax (with some additions) and the\u00a0&#8211;compose-file option.\u00a0Read about this exciting feature, create a free &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/\">Read more<\/a><\/p>\n","protected":false},"author":28,"featured_media":1341,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[14,24,45,50,52],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Deploy Docker Compose (v3) to Swarm (mode) Cluster | Codefresh<\/title>\n<meta name=\"description\" content=\"Docker 1.13 simplifies deployment of composed application to a swarm (mode) cluster, by using familiar and well-known `docker-compose.yml` syntax.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Deploy Docker Compose (v3) to Swarm (mode) Cluster\" \/>\n<meta property=\"og:description\" content=\"Docker 1.13 simplifies deployment of composed application to a swarm (mode) cluster, by using familiar and well-known `docker-compose.yml` syntax.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2016-12-22T22:12:50+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-24T20:41:35+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png\" \/>\n\t<meta property=\"og:image:width\" content=\"900\" \/>\n\t<meta property=\"og:image:height\" content=\"460\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@alexeiled\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Alexei Ledenev\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png\",\"width\":900,\"height\":460},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/\",\"name\":\"Deploy Docker Compose (v3) to Swarm (mode) Cluster | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#primaryimage\"},\"datePublished\":\"2016-12-22T22:12:50+00:00\",\"dateModified\":\"2022-03-24T20:41:35+00:00\",\"description\":\"Docker 1.13 simplifies deployment of composed application to a swarm (mode) cluster, by using familiar and well-known `docker-compose.yml` syntax.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Deploy Docker Compose (v3) to Swarm (mode) Cluster\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50\"},\"headline\":\"Deploy Docker Compose (v3) to Swarm (mode) Cluster\",\"datePublished\":\"2016-12-22T22:12:50+00:00\",\"dateModified\":\"2022-03-24T20:41:35+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#webpage\"},\"wordCount\":821,\"commentCount\":13,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png\",\"keywords\":[\"docker\",\"Containers\",\"container orchestration\",\"swarm\",\"devops\"],\"articleSection\":[\"Docker Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50\",\"name\":\"Alexei Ledenev\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g\",\"caption\":\"Alexei Ledenev\"},\"description\":\"Alexei is an experienced software architect and HPE distinguished technologist. He currently works at Codefresh as the Chief Researcher, focusing lately on #docker, #golang and #aws. In his spare time, Alexei maintains a couple of Docker-centric open-source projects, writes tech blog posts, and enjoys traveling and playing with his kids. https:\/\/github.com\/gaia-adm\/pumba\",\"sameAs\":[\"https:\/\/medium.com\/@alexeiled\/\",\"https:\/\/twitter.com\/alexeiled\"],\"url\":\"https:\/\/codefresh.io\/author\/alexei\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Deploy Docker Compose (v3) to Swarm (mode) Cluster | Codefresh","description":"Docker 1.13 simplifies deployment of composed application to a swarm (mode) cluster, by using familiar and well-known `docker-compose.yml` syntax.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/","og_locale":"en_US","og_type":"article","og_title":"Deploy Docker Compose (v3) to Swarm (mode) Cluster","og_description":"Docker 1.13 simplifies deployment of composed application to a swarm (mode) cluster, by using familiar and well-known `docker-compose.yml` syntax.","og_url":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2016-12-22T22:12:50+00:00","article_modified_time":"2022-03-24T20:41:35+00:00","og_image":[{"width":900,"height":460,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@alexeiled","twitter_site":"@codefresh","twitter_misc":{"Written by":"Alexei Ledenev","Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png","width":900,"height":460},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/","name":"Deploy Docker Compose (v3) to Swarm (mode) Cluster | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#primaryimage"},"datePublished":"2016-12-22T22:12:50+00:00","dateModified":"2022-03-24T20:41:35+00:00","description":"Docker 1.13 simplifies deployment of composed application to a swarm (mode) cluster, by using familiar and well-known `docker-compose.yml` syntax.","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Deploy Docker Compose (v3) to Swarm (mode) Cluster"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50"},"headline":"Deploy Docker Compose (v3) to Swarm (mode) Cluster","datePublished":"2016-12-22T22:12:50+00:00","dateModified":"2022-03-24T20:41:35+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#webpage"},"wordCount":821,"commentCount":13,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/12\/compose_swarm.png","keywords":["docker","Containers","container orchestration","swarm","devops"],"articleSection":["Docker Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/docker-tutorial\/deploy-docker-compose-v3-swarm-mode-cluster\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/33798ced90c48c116c3a9a59ae74af50","name":"Alexei Ledenev","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/53d5ff05d62acd594ea97300543a62a5?s=96&d=blank&r=g","caption":"Alexei Ledenev"},"description":"Alexei is an experienced software architect and HPE distinguished technologist. He currently works at Codefresh as the Chief Researcher, focusing lately on #docker, #golang and #aws. In his spare time, Alexei maintains a couple of Docker-centric open-source projects, writes tech blog posts, and enjoys traveling and playing with his kids. https:\/\/github.com\/gaia-adm\/pumba","sameAs":["https:\/\/medium.com\/@alexeiled\/","https:\/\/twitter.com\/alexeiled"],"url":"https:\/\/codefresh.io\/author\/alexei\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1340"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/28"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=1340"}],"version-history":[{"count":4,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1340\/revisions"}],"predecessor-version":[{"id":21979,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1340\/revisions\/21979"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/1341"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=1340"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=1340"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=1340"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}