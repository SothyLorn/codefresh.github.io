{"id":13501,"date":"2019-05-13T21:36:31","date_gmt":"2019-05-13T21:36:31","guid":{"rendered":"http:\/\/codefresh.io\/?p=13301"},"modified":"2020-01-27T01:12:08","modified_gmt":"2020-01-27T09:12:08","slug":"ci-cd-pipelines-microservices","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/","title":{"rendered":"CI\/CD Pipelines for Microservices"},"content":{"rendered":"<p>Moving from monoliths to microservices and from Virtual Machines to Kubernetes clusters are two closely related migration paths. Using Kubernetes clusters enables the easy deployment of microservices, and adopting microservices becomes a lot easier when containers are used for the packaged delivery.<\/p>\n<p>If you look at <a href=\"https:\/\/codefresh.io\/features\/\">our features page<\/a>, it is very easy to understand why Codefresh is the first (and only) CI\/CD platform for containers and Kubernetes. Currently, Codefresh is the only solution that includes:<\/p>\n<ul>\n<li><a href=\"https:\/\/codefresh.io\/docs\/docs\/docker-registries\/codefresh-registry\/\">A system-wide Docker registry<\/a><\/li>\n<li>A system-wide Helm repository<\/li>\n<li><a href=\"https:\/\/codefresh.io\/docs\/docs\/docker-registries\/metadata-annotations\/\">Custom Docker annotations<\/a><\/li>\n<li><a href=\"https:\/\/codefresh.io\/docs\/docs\/deploy-to-kubernetes\/manage-kubernetes\/\">Dedicated Kubernetes dashboard<\/a><\/li>\n<li><a href=\"https:\/\/codefresh.io\/docs\/docs\/new-helm\/add-helm-repository\/\">A Helm releases dashboard<\/a><\/li>\n<li><a href=\"https:\/\/codefresh.io\/docs\/docs\/new-helm\/helm-releases-management\/\">A Helm deployments dashboard<\/a><\/li>\n<li><a href=\"https:\/\/codefresh.io\/helm-tutorial\/kanban-promotion-boards\/\">A Helm environments dashboard.<\/a><\/li>\n<\/ul>\n<p>All these features show clearly that Codefresh is the perfect solution for CI\/CD if you have already adopted containers and Kubernetes. However, they don\u2019t tell the story of the monolith-to-microservice adoption.<\/p>\n<p>In this article, we will see how microservices change the way CI\/CD pipelines are organized and why Codefresh is specifically designed with microservices in mind.<\/p>\n<h2>Organizing pipelines for monolithic applications<\/h2>\n<p>In the past, pipelines for monolithic applications tended to share the same characteristics of the application they were building. Each project had a single pipeline which was fairly complex and different projects had completely different pipelines. Each pipeline was almost always connected to a single GIT repository.<\/p>\n<figure id=\"attachment_13304\" aria-describedby=\"caption-attachment-13304\" style=\"width: 771px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/monolithic-pipelines.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/monolithic-pipelines.png\" alt=\"Pipelines for monolithic applications\" class=\"size-full wp-image-13304\" width=\"771\" height=\"593\"><\/a><figcaption id=\"caption-attachment-13304\" class=\"wp-caption-text\">Pipelines for monolithic applications<\/figcaption><\/figure>\n<p>The complexity of each pipeline was detrimental to easy maintenance. Pipelines were typically controlled by a small team of gurus who are familiar with both the internals of the application as well as the deployment environment.<\/p>\n<p>For each software project, operators are taking care of the pipeline structure while the developers are only working with the source code (going against the DevOps paradigm where all teams should share responsibility for common infrastructure and collaborate on shared problems).<\/p>\n<p>Pipeline size and complexity is often a huge pain point. Even though several tools exist for the continuous integration part of a monolithic application, continuous deployment is a different matter completely which forced a lot of companies to create their own custom in-house scripts for taking care of deployment.<\/p>\n<p>As the number of applications evolved within an organization, the management of pipelines became a bigger issue as well. Usually, most pipelines end up as a spaghetti mix of python scripts, configuration management tools (e.g. Puppet and Chef) sprinkled with some bash scripting all over the place.<\/p>\n<p>This messy situation is very common within organizations that have not adopted microservices yet and the only reason that it endures is that most developers are still working on a single application so they never feel the pain of pipeline maintenance. That job falls on the operators who are typically spending most of their time fixing pipelines (and creating new ones for new projects) assuming that this is the status quo.<\/p>\n<h2>Scalability issues with microservice pipelines<\/h2>\n<p>Microservices have of course several advantages regarding deployment and development, but they also come with their own challenges. Management of microservice repositories and pipelines becomes much harder as the number of applications grows.<\/p>\n<p>While a company might have to deal with 1-5 pipelines in the case of monolith applications (assuming 1-5 projects), the number quickly jumps to 25 if each monolith is divided into 5 microservices.<\/p>\n<p>These numbers are different per organization. It is perfectly normal for an application to have 10 microservices. So at a big organization that has 50 applications, the operator team is suddenly tasked with the management of 500+ pipelines.<\/p>\n<figure id=\"attachment_13306\" aria-describedby=\"caption-attachment-13306\" style=\"width: 986px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/moving-to-microservices.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/moving-to-microservices.png\" alt=\"Moving to microservices\" class=\"size-full wp-image-13306\" width=\"986\" height=\"713\"><\/a><figcaption id=\"caption-attachment-13306\" class=\"wp-caption-text\">Moving to microservices<\/figcaption><\/figure>\n<p>This sudden explosion in numbers prohibits working manually with pipelines anymore. Several CI solutions are not even prepared to work with such a high number of pipelines.<\/p>\n<p>Here is where we reach the biggest pitfall regarding pipeline management in the era of microservices. Several companies tried to solve the problem of microservice pipelines using shared pipeline segments.<\/p>\n<figure id=\"attachment_13307\" aria-describedby=\"caption-attachment-13307\" style=\"width: 974px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/shared-pipelines.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/shared-pipelines.png\" alt=\"Shared pipelines are complex\" class=\"size-full wp-image-13307\" width=\"974\" height=\"555\"><\/a><figcaption id=\"caption-attachment-13307\" class=\"wp-caption-text\">Shared pipelines are complex<\/figcaption><\/figure>\n<p>In theory, this sounds like a good idea:<\/p>\n<ol>\n<li>Operators are locating the common parts of pipelines with applications<\/li>\n<li>A shared pipeline segment registry is created that holds all those common parts<\/li>\n<li>Pipelines in existing projects are re-engineered to depend on the common segments<\/li>\n<li>New projects must first examine the library of common pipeline segments and choose what is already there<\/li>\n<\/ol>\n<p>The final result is that a single pipeline is actually composed of two types of steps, those common to other pipelines and those that are specific to that project only.<\/p>\n<p>This has lead to the development of several solutions which attempt to centralize common pipeline parts and re-use them in the form of \u201clibraries\u201d within software projects. The issue here is that this approach requires a very large time investment as well as a disciplined team that can communicate and cooperate on the following factors:<\/p>\n<ol>\n<li>Detecting which pipeline segments are indeed common,<\/li>\n<li>Keeping the library of common pipeline segments up-to-date,<\/li>\n<li>Disallowing copy-pasting of pipelines,<\/li>\n<li>Development of brand new pipelines when needed,<\/li>\n<li>Initial setup and pipeline bootstrap for each new project created.<\/li>\n<\/ol>\n<p>Unfortunately, in practice, as the number of microservice applications grows, teams find it very hard to keep all these principles in mind when creating new projects.<\/p>\n<h2>Reusing pipelines for Microservice applications<\/h2>\n<p>Codefresh is the first CI\/CD solution for microservices and containers. Because we are not burdened with any legacy decisions, we are free to define a new model for Codefresh pipelines which is focused specifically on microservices.<\/p>\n<p>The basic idea is that all microservices of a single application have almost always the same life-cycle. They are compiled, packaged and deployed in a similar manner. Once this realization is in place we can see that instead of having multiple pipelines for each microservice (where each one is tied to a GIT repository), we have instead a single pipeline shared by all microservices.<\/p>\n<figure id=\"attachment_13308\" aria-describedby=\"caption-attachment-13308\" style=\"width: 962px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/microservice-pipelines.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/microservice-pipelines.png\" alt=\"Monolith split to microservices\" class=\"size-full wp-image-13308\" width=\"962\" height=\"427\"><\/a><figcaption id=\"caption-attachment-13308\" class=\"wp-caption-text\">Monolith split to microservices<\/figcaption><\/figure>\n<p>The impact of this design cannot be understated. First of all, it should be clear that there is no need for sharing pipeline segments anymore. The whole pipeline is essentially the re-usable unit.<\/p>\n<p>This makes pipeline construction very simple.<\/p>\n<p>The biggest advantage, however, is the way new projects are created. When a new microservice is added in an application, the pipeline is already there and only a new trigger is added for that microservice. Notice that the pipeline is not connected to any specific git repository anymore. All information for a repository is coming from the git trigger that started this pipeline.<\/p>\n<p>This is exactly what our <a href=\"https:\/\/codefresh.io\/codefresh-news\/pipeline-next-gen\/\">recent feature launch<\/a> was based on. As an operator you can bootstrap a new project by quickly adding a new trigger on an existing pipeline:<\/p>\n<figure id=\"attachment_13309\" aria-describedby=\"caption-attachment-13309\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/single-pipeline.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/single-pipeline-1024x557.png\" alt=\"Sharing a single CI\/CD pipeline \" class=\"size-large wp-image-13309\" width=\"1024\" height=\"557\"><\/a><figcaption id=\"caption-attachment-13309\" class=\"wp-caption-text\">Sharing a single CI\/CD pipeline<\/figcaption><\/figure>\n<p>This is the fastest way possible to bootstrap a new project. As the number of microservices is growing, the only thing that is growing is the list of triggers. All pipelines are exactly the same.<\/p>\n<p>Creating a new pipeline is needed only if the whole deployment process is different for a new project. This is an extreme scenario however, as with containers this will happen very rarely. Once you package an application in a Docker image, the underlying implementation is not really important anymore. Docker images from different programming languages can be handled in the same manner.<\/p>\n<h2 id=\"codefresh-on-codefresh\">Case study: Codefresh on Codefresh<\/h2>\n<p>Now that we have explained the theory behind microservice pipelines, we can look at a solid example. And one of the natural examples is Codefresh itself. A very popular question we get from our customers is how our own workflow is structured. It shouldn\u2019t be a big surprise that we also use Codefresh internally to manage Codefresh.<\/p>\n<figure id=\"attachment_13310\" aria-describedby=\"caption-attachment-13310\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/codefresh-on-codefresh.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/codefresh-on-codefresh-1024x541.png\" alt=\"Codefresh running on Codefresh\" class=\"size-large wp-image-13310\" width=\"1024\" height=\"541\"><\/a><figcaption id=\"caption-attachment-13310\" class=\"wp-caption-text\">Codefresh running on Codefresh<\/figcaption><\/figure>\n<p>The Codefresh platform is itself a set of microservices that run on Kubernetes. We have about 25 microservices, but they are easily managed by a handful of pipelines.<\/p>\n<p>In fact, most of the heavy work is done by two pipelines:<\/p>\n<ul>\n<li>A pipeline called \u201cCI\u201d which packages each microservice.<\/li>\n<li>A pipeline called \u201cCD\u201d which deploys each microservice.<\/li>\n<\/ul>\n<p>That\u2019s it! Even if tomorrow our platform has 50, 500, or 5000 microservices the number of pipelines will still be 2. Every new microservice will be handled by simply adding a new trigger to those pipelines.<\/p>\n<p>By the way, our pipelines are <a href=\"https:\/\/github.com\/kostis-codefresh\/codefresh-on-codefresh-pipelines\">public<\/a>, so feel free to adopt them for your own infrastructure (or at least study them and get some ideas on possible workflows).<\/p>\n<p>Let\u2019s see them in order&#8230;<\/p>\n<h2>A CI pipeline for microservices<\/h2>\n<p>First, we have the Continuous Integration pipeline. This pipeline is connected with git triggers to each of our microservices.<\/p>\n<figure id=\"attachment_13313\" aria-describedby=\"caption-attachment-13313\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/ci-pipeline-microservice.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/ci-pipeline-microservice-1024x583.png\" alt=\"CI pipeline for microservices\" class=\"size-large wp-image-13313\" width=\"1024\" height=\"583\"><\/a><figcaption id=\"caption-attachment-13313\" class=\"wp-caption-text\">CI pipeline for microservices<\/figcaption><\/figure>\n<p>The pipeline steps do the following:<\/p>\n<ul>\n<li>Check out the code for each service<\/li>\n<li>Check the software version and whether this is a Pull request or not<\/li>\n<li>Download extra dependencies for testing<\/li>\n<li>Run linting (i.e. syntax checks) on the source code<\/li>\n<li>Run unit tests<\/li>\n<li>Run integration tests using <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/steps\/composition-1\/\">Docker compositions<\/a><\/li>\n<li>Generate <a href=\"https:\/\/codefresh.io\/codefresh-news\/test-reporting\/\">test reports.<\/a><\/li>\n<li>Build deployment docker images<\/li>\n<li>Run security scans using <a href=\"https:\/\/www.twistlock.com\/\">Twistlock <\/a><\/li>\n<li>Push images to the internal <a href=\"https:\/\/codefresh.io\/docs\/docs\/docker-registries\/codefresh-registry\/\">docker registry<\/a><\/li>\n<li>Create <a href=\"https:\/\/codefresh.io\/docs\/docs\/getting-started\/helm-quick-start-guide\/\">Helm packages<\/a><\/li>\n<\/ul>\n<p>The pipeline definition has <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/conditional-execution-of-steps\/\">several conditionals<\/a> so not all steps are running at all builds. Some of them are skipped depending on the nature of the commit.<\/p>\n<p>The pipeline is connected via git triggers to all microservices, so whenever a commit happens it runs automatically and prepares both a Docker image and a Helm chart for each release candidate.<\/p>\n<p>The important point is that this pipeline does NOT refer to any specific git repository, nor it is connected to one. It is a generic CI pipeline that is reused by all microservices depending on the trigger that calls it.<\/p>\n<p>This makes pipeline maintenance very easy, as there is only a single definition to maintain. It also means that all best practices within a company (e.g. security scanning or quality control) are automatically applied to all projects and teams without any extra effort.<\/p>\n<h2>A CD pipeline for microservices<\/h2>\n<p>The next step is to run the Continuous Deployment pipeline for each microservice:<\/p>\n<figure id=\"attachment_13314\" aria-describedby=\"caption-attachment-13314\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/cd-pipeline-microservice.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/cd-pipeline-microservice-1024x583.png\" alt=\"CD pipeline for microservices\" class=\"size-large wp-image-13314\" width=\"1024\" height=\"583\"><\/a><figcaption id=\"caption-attachment-13314\" class=\"wp-caption-text\">CD pipeline for microservices<\/figcaption><\/figure>\n<p>This pipeline is launched automatically as part of a \u201c<a href=\"https:\/\/github.com\/kostis-codefresh\/codefresh-on-codefresh-pipelines\/blob\/master\/promote.yaml\">promotion<\/a>\u201d which takes place when the Codefresh team is making an official release for a microservice. It does the following:<\/p>\n<ul>\n<li>Checks that no other deployments are happening in parallel for the same service<\/li>\n<li><a href=\"https:\/\/codefresh.io\/continuous-deployment\/manual-approval\/\">Waits for manual approval<\/a><\/li>\n<li>Installs the previously prepared Helm package (created in CI pipeline)<\/li>\n<li>Commits back to the git repo the dependencies list of the app<\/li>\n<li>Creates a mark in New Relic for monitoring purposes<\/li>\n<li>Sends a message to <a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/notifications\/slack-integration\/\">our Slack channel<\/a> to show the status of the deployment<\/li>\n<\/ul>\n<p>Again, if you read the pipeline definition you will see that it is not tied to any specific git repository. Instead, it is reused for all microservices that need it.<\/p>\n<p>The advantages of using CI\/CD pipelines for microservices in this pattern should now be clear to you. Instead of spending time with a mess of pipelines and a big number of \u201creusable\u201d pipeline segments or shared libraries, with Codefresh you can centralize all the CI\/CD logic in just two pipelines.<\/p>\n<p>The icing on the cake is that if tomorrow we need to add a new microservice in the mix we only need to add a new GIT trigger for it in the existing pipelines. It doesn\u2019t get any easier than this!<\/p>\n<figure id=\"attachment_13315\" aria-describedby=\"caption-attachment-13315\" style=\"width: 662px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/add-new-microservice.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/add-new-microservice.png\" alt=\"Adding a new CI\/CD pipeline for a microservice\" class=\"size-full wp-image-13315\" width=\"662\" height=\"459\"><\/a><figcaption id=\"caption-attachment-13315\" class=\"wp-caption-text\">Adding a new CI\/CD pipeline for a microservice<\/figcaption><\/figure>\n<p>Ready to try Codefresh and start creating your own CI\/CD pipelines for microservices? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=cicdpipelinesmicro\">Create Your Free Account Today<\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"13501\"\/>","protected":false},"excerpt":{"rendered":"<p>\t\t\t\t<![CDATA[]]>\t\t<\/p>\n","protected":false},"author":62,"featured_media":13510,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120,1543,1538],"tags":[15,52,53,59,64,68],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>CI\/CD Pipelines for Microservices | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"CI\/CD Pipelines for Microservices\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2019-05-13T21:36:31+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-01-27T09:12:08+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png\" \/>\n\t<meta property=\"og:image:width\" content=\"670\" \/>\n\t<meta property=\"og:image:height\" content=\"200\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"10 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png\",\"width\":670,\"height\":200},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/\",\"name\":\"CI\/CD Pipelines for Microservices | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#primaryimage\"},\"datePublished\":\"2019-05-13T21:36:31+00:00\",\"dateModified\":\"2020-01-27T09:12:08+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"CI\/CD Pipelines for Microservices\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"CI\/CD Pipelines for Microservices\",\"datePublished\":\"2019-05-13T21:36:31+00:00\",\"dateModified\":\"2020-01-27T09:12:08+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#webpage\"},\"wordCount\":1949,\"commentCount\":10,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png\",\"keywords\":[\"continuous integration\",\"devops\",\"CI\/CD\",\"codefresh\",\"microservices\",\"continuous delivery\"],\"articleSection\":[\"Continuous Deployment\/Delivery\",\"Continuous Integration\",\"DevOps Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"CI\/CD Pipelines for Microservices | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/","og_locale":"en_US","og_type":"article","og_title":"CI\/CD Pipelines for Microservices","og_url":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2019-05-13T21:36:31+00:00","article_modified_time":"2020-01-27T09:12:08+00:00","og_image":[{"width":670,"height":200,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"10 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png","width":670,"height":200},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#webpage","url":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/","name":"CI\/CD Pipelines for Microservices | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#primaryimage"},"datePublished":"2019-05-13T21:36:31+00:00","dateModified":"2020-01-27T09:12:08+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"CI\/CD Pipelines for Microservices"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"CI\/CD Pipelines for Microservices","datePublished":"2019-05-13T21:36:31+00:00","dateModified":"2020-01-27T09:12:08+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#webpage"},"wordCount":1949,"commentCount":10,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/using-Codefresh-on-Codefresh-670x200-1.png","keywords":["continuous integration","devops","CI\/CD","codefresh","microservices","continuous delivery"],"articleSection":["Continuous Deployment\/Delivery","Continuous Integration","DevOps Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-deployment\/ci-cd-pipelines-microservices\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/13501"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=13501"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/13501\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/13510"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=13501"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=13501"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=13501"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}