{"id":14665,"date":"2019-10-31T12:25:29","date_gmt":"2019-10-31T12:25:29","guid":{"rendered":"http:\/\/codefresh.io\/?p=14665"},"modified":"2019-10-31T12:25:29","modified_gmt":"2019-10-31T12:25:29","slug":"parallel-tests-knapsack-pro","status":"publish","type":"post","link":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/","title":{"rendered":"Run your tests in parallel with Codefresh and Knapsack Pro"},"content":{"rendered":"<p>One of the most well-known problems when it comes to testing applications is the amount of time required by all test suites. Integration tests, in particular, are usually very slow to execute and depending on the type of application, several minutes (or even hours in extreme cases) are needed in order to get the final execution result.<\/p>\n<p>You can reduce the test execution time with several techniques, but one of the most effective methods is running your tests in parallel. Knapsack Pro is a dedicated solution of test parallelization that can cut down the amount of test execution time by spreading test suites into multiple build nodes. Some of the most important features of Knapsack Pro are:<\/p>\n<ul>\n<li>Test parallelization for Ruby and Javascript applications (more languages coming)<\/li>\n<li>Support for popular test runners (rspec, cucumber, cypress, jest etc)<\/li>\n<li>Dynamic allocation of tests to build nodes (a.k.a. Queue mode)<\/li>\n<li>Support for short-lived build nodes (such as preemptible VMs on cloud providers)<\/li>\n<li>Fallback mode (run tests even when Knapsack API is not available)<\/li>\n<\/ul>\n<p>It is very easy to use Knapsack Pro with Codefresh and split your tests in as many build nodes as you want:<\/p>\n<figure id=\"attachment_14668\" aria-describedby=\"caption-attachment-14668\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/parallel-tests.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/parallel-tests-1024x534.png\" alt=\"\" width=\"1024\" height=\"534\" class=\"size-large wp-image-14668\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/parallel-tests-1024x534.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/parallel-tests-300x157.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/parallel-tests-768x401.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/parallel-tests.png 1437w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-14668\" class=\"wp-caption-text\">Parallel tests<\/figcaption><\/figure>\n<p>In the example above we have used 5 parallel build executions to parallelize the test phase of the project.<\/p>\n<h2>Split your test executions in Codefresh pipelines<\/h2>\n<p>Codefresh already supports <a href=\"https:\/\/codefresh.io\/codefresh-news\/parallel-pipelines\/\">parallel pipeline steps<\/a> out of the box. But we have recently added two new enhancements to the Codefresh YAML syntax that can make parallel pipelines even easier. These are the <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/advanced-workflows\/#implicit-parallel-steps\">scale and matrix keywords<\/a>.<\/p>\n<p>The \u201cscale\u201d syntax can be easily used when you have multiple parallel steps that are mostly similar and only differ in one or more properties. The \u201cmatrix\u201d syntax is the familiar way of creating matrix pipelines where you define all environment parameters and Codefresh will automatically create all possible combinations. For example, the following pipeline runs with 3 different versions of GO and 2 versions of the CGO switch.<\/p>\n<pre>\nversion: '1.0'\nstages:\n  - prepare\n  - test\nsteps:\n  main_clone:\n    title: Cloning main repository...\n    type: git-clone\n    repo: 'codefreshdemo\/cf-example-unit-test'\n    revision: 'master'\n    git: github\n    stage: prepare\n  run_my_tests_before_build:\n    stage: test\n    working_directory: '.\/golang-app-A'\n    commands:\n     - go test -v\n    matrix:\n      image:\n        - golang:1.11\n        - golang:1.12\n        - golang:1.13\n      environment:\n        - [CGO_ENABLED=1]\n        - [CGO_ENABLED=0]     \n<\/pre>\n<p>The resulting pipeline will have 6 parallel steps for all the possible combinations.<\/p>\n<p>Knapsack Pro can take advantage of this functionality by leveraging its API which only needs two parameters:<\/p>\n<ul>\n<li><code>KNAPSACK_PRO_CI_NODE_TOTAL<\/code><\/li>\n<li><code>KNAPSACK_PRO_CI_NODE_INDEX<\/code><\/li>\n<\/ul>\n<p>The first parameter is needed only once in a pipeline and defines how many build nodes will be used to split tests. The second parameter should be declared for each node and contains a number that defines which node is that (0, 1, 2, 3 and so on).<\/p>\n<p>By using these two parameters Knapsack Pro will automatically split your tests between nodes. There are two modes for the split. The Regular\/Standard mode splits tests in a static manner by measuring how much time each test file takes by looking at the previous builds. The static set of tests is allocated only once to each parallel node before starting tests.<\/p>\n<p>The dynamic\/queue mode gives to each node only a subset of the tests and then monitors their execution within the same build before asking for another set of tests from the queue. A fast node (that finishes tests quickly) will then fetch more tests while a slow node will get fewer tests. This mode is great if the build nodes are not equal in resources or you have test files that sometimes take more or less time (often end to end tests can vary in time execution).<\/p>\n<p>Codefresh supports both Knapsack Pro modes. Here is a full example that brings all this together:<\/p>\n<pre>\nversion: \"1.0\"\n\nstages:\n  - \"clone\"\n  - \"build\"\n  - \"tests\"\n\nsteps:\n  main_clone:\n    type: \"git-clone\"\n    description: \"Cloning main repository...\"\n    repo: \"${{CF_REPO_OWNER}}\/${{CF_REPO_NAME}}\"\n    revision: \"${{CF_BRANCH}}\"\n    stage: \"clone\"\n  BuildTestDockerImage:\n    title: Building Test Docker image\n    type: build\n    arguments:\n      image_name: \"${{CF_ACCOUNT}}\/${{CF_REPO_NAME}}-test\"\n      tag: \"${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}\"\n      dockerfile: Test.Dockerfile\n    stage: \"build\"\n\n  run_tests:\n    stage: \"tests\"\n    image: \"${{BuildTestDockerImage}}\"\n    working_directory: \/src\n    fail_fast: false\n    environment:\n      # set how many parallel jobs you want to run\n      - KNAPSACK_PRO_CI_NODE_TOTAL=2\n    matrix:\n      environment:\n        # please ensure you have here listed N-1 indexes\n        # where N is KNAPSACK_PRO_CI_NODE_TOTAL\n        - KNAPSACK_PRO_CI_NODE_INDEX=0\n        - KNAPSACK_PRO_CI_NODE_INDEX=1\n    commands:\n      # run http server in the background (silent mode)\n      # we did && echo on purpose to ensure Codefresh does not fail\n      # when we pass npm process to background with & sign\n      - (npm run start:ci &) && echo \"start http server in the background\"\n      - $(npm bin)\/knapsack-pro-cypress\n<\/pre>\n<p>This pipeline splits Cypress tests into two nodes:<\/p>\n<figure id=\"attachment_14670\" aria-describedby=\"caption-attachment-14670\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/simple-knapsack.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/simple-knapsack-1024x469.png\" alt=\"\" width=\"1024\" height=\"469\" class=\"size-large wp-image-14670\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/simple-knapsack-1024x469.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/simple-knapsack-300x137.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/simple-knapsack-768x352.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/simple-knapsack.png 1663w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-14670\" class=\"wp-caption-text\">Knapsack parallel tests<\/figcaption><\/figure>\n<p>Notice the values for <code>KNAPSACK_PRO_CI_NODE_TOTAL <\/code>and <code>KNAPSACK_PRO_CI_NODE_INDEX<\/code>. In order to run this pipeline in Codefresh, you also need a Knapsack Pro token that you can get after <a href=\"https:\/\/knapsackpro.com\/\">creating an account<\/a>.<\/p>\n<p>For more details see the <a href=\"https:\/\/docs.knapsackpro.com\/integration\/\">integration page<\/a> of Knapsack. Knapsack Pro tests also work great with <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/service-containers\/\">service containers<\/a> for <a href=\"https:\/\/codefresh.io\/continuous-integration\/service-container-testing\/\">running tests against databases<\/a> or other external services. Here you can find articles dedicated to Knapsack Pro configuration for <a href=\"https:\/\/docs.knapsackpro.com\/2019\/how-to-use-codefresh-ci-parallel-steps-to-run-rspec-a-few-times-faster-for-rails-project\">Ruby on Rails project on Codefresh<\/a> and for <a href=\"https:\/\/docs.knapsackpro.com\/2019\/how-to-run-cypress-parallel-tests-on-codefresh-ci-server\">Cypress end to end test runner<\/a>.<\/p>\n<p>Ready to try Codefresh, the CI\/CD platform for Docker\/Kubernetes\/Helm? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&#038;utm_medium=Post&#038;utm_campaign=knapsackpro\">Create Your Free Account Today!<\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"14665\"\/>","protected":false},"excerpt":{"rendered":"<p>One of the most well-known problems when it comes to testing applications is the amount of time required by all test suites. Integration tests, in particular, are usually very slow to execute and depending on the type of application, several minutes (or even hours in extreme cases) are needed in order to get the final &hellip; <a href=\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":14667,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120,41,1543,1538,6],"tags":[15,52,53,59,65,66,67,4017],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Run your tests in parallel with Codefresh and Knapsack Pro | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Run your tests in parallel with Codefresh and Knapsack Pro\" \/>\n<meta property=\"og:description\" content=\"One of the most well-known problems when it comes to testing applications is the amount of time required by all test suites. Integration tests, in particular, are usually very slow to execute and depending on the type of application, several minutes (or even hours in extreme cases) are needed in order to get the final &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2019-10-31T12:25:29+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1614\" \/>\n\t<meta property=\"og:image:height\" content=\"509\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png\",\"width\":1614,\"height\":509},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#webpage\",\"url\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/\",\"name\":\"Run your tests in parallel with Codefresh and Knapsack Pro | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#primaryimage\"},\"datePublished\":\"2019-10-31T12:25:29+00:00\",\"dateModified\":\"2019-10-31T12:25:29+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Run your tests in parallel with Codefresh and Knapsack Pro\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Run your tests in parallel with Codefresh and Knapsack Pro\",\"datePublished\":\"2019-10-31T12:25:29+00:00\",\"dateModified\":\"2019-10-31T12:25:29+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#webpage\"},\"wordCount\":696,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png\",\"keywords\":[\"continuous integration\",\"devops\",\"CI\/CD\",\"codefresh\",\"testing\",\"user acceptance testing\",\"unit testing\",\"parallel\"],\"articleSection\":[\"Continuous Deployment\/Delivery\",\"Codefresh News\",\"Continuous Integration\",\"DevOps Tutorials\",\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Run your tests in parallel with Codefresh and Knapsack Pro | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/","og_locale":"en_US","og_type":"article","og_title":"Run your tests in parallel with Codefresh and Knapsack Pro","og_description":"One of the most well-known problems when it comes to testing applications is the amount of time required by all test suites. Integration tests, in particular, are usually very slow to execute and depending on the type of application, several minutes (or even hours in extreme cases) are needed in order to get the final &hellip; Read more","og_url":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2019-10-31T12:25:29+00:00","og_image":[{"width":1614,"height":509,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png","width":1614,"height":509},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#webpage","url":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/","name":"Run your tests in parallel with Codefresh and Knapsack Pro | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#primaryimage"},"datePublished":"2019-10-31T12:25:29+00:00","dateModified":"2019-10-31T12:25:29+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Run your tests in parallel with Codefresh and Knapsack Pro"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Run your tests in parallel with Codefresh and Knapsack Pro","datePublished":"2019-10-31T12:25:29+00:00","dateModified":"2019-10-31T12:25:29+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#webpage"},"wordCount":696,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/10\/codefresh-knapsack.png","keywords":["continuous integration","devops","CI\/CD","codefresh","testing","user acceptance testing","unit testing","parallel"],"articleSection":["Continuous Deployment\/Delivery","Codefresh News","Continuous Integration","DevOps Tutorials","How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/howtos\/parallel-tests-knapsack-pro\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/14665"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=14665"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/14665\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/14667"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=14665"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=14665"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=14665"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}