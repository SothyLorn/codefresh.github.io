{"id":15588,"date":"2020-05-08T09:05:30","date_gmt":"2020-05-08T17:05:30","guid":{"rendered":"http:\/\/codefresh.io\/?p=15588"},"modified":"2021-11-09T17:12:58","modified_gmt":"2021-11-09T17:12:58","slug":"15588","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-deployment\/15588\/","title":{"rendered":"13 Key Features Every Modern CI\/CD Tool Should Contain"},"content":{"rendered":"<p><span style=\"font-weight: 400\">DevOps methodologies have become a huge staple of the Software Development Lifecycle.\u00a0 As such, more and more companies have been adopting the need for Continuous Integration\/Continuous Delivery (CI\/CD) tools.\u00a0 Building a successful CI\/CD workflow can be a tedious process that requires your team to participate in a large amount of preparation and planning &#8212; but it doesn\u2019t have to be that way.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">There are a growing number of CI\/CD tools available on the market today, so much that your team may be overwhelmed in narrowing down what to use.\u00a0 In this blog post, we hope to help simplify your choices by breaking down the 13 key features every modern CI\/CD tool should contain:<\/span><\/p>\n<ol>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Docker-based Architecture Right From the Start<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Cloud and Version Control Agnosticism<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Pipeline Creation with Standardized Definitions<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Graphical Pipeline View<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Parallel Steps<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Standardized Plugin Mechanism (Docker-based)<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Configuration Options Through Both Code and UI<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Reusable Pipelines for Microservices<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Live Pipeline Debugging with Breakpoints<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Native Support for Kubernetes, Helm, and Docker<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Saas, On-prem, and Hybrid Installation Methods<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Zero Config, Distributed Caching<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Monorepo Support<\/span><\/li>\n<\/ol>\n<h2><strong>Docker-based Architecture Right From the S<\/strong><strong style=\"font-size: 2.5rem\">tart<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">A modern CI\/CD tool should have Docker-based architecture since its inception.\u00a0 Many people consider \u201cDocker-based\u201d to mean the usage of Docker as a deployment package, but the usage of Docker-based in this sense means using Docker for the build tooling itself.\u00a0 Traditionally, in VM-based CI\/CD tools, you had to make sure all of your build tooling (and correct versions) were pre-installed on the virtual machine in order to run the pipeline.\u00a0 Tools were static and used for all pipelines.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">With Docker-based CI\/CD tooling, only Docker needs to be pre-installed on your build nodes &#8212; nothing else.\u00a0 Your build tools are now isolated to each pipeline, and you can dynamically pop them in or out based on your needs. <\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\">Dockerizing the CI\/CD architecture itself allows your team to create and reuse building blocks to make pipeline creation much faster and easier, cutting the amount of time and cost it takes to get your CI\/CD builds up and running:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Docker is the de-facto standard for delivery and not tied to any vendor<\/span>\n<ul>\n<li style=\"font-weight: 400\">Build, share, and run your steps\/images across any cloud provider, OS, language\/framework<\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Any Docker image is a potential step for a pipeline<\/span>\n<ul>\n<li style=\"font-weight: 400\">As long as you have a Docker image, you can use it as a part of your pipeline tooling<\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Create pipelines quickly from existing images<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Extending a pipeline step requires Docker knowledge and nothing more<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\"><span style=\"font-weight: 400\">No need for Dev teams to understand the underlying infrastructure<\/span><\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">While a number of tools have strategically shifted to a \u201cDocker-based\u201d approach, Codefresh offered this functionality right from the start from the heart of its architecture.\u00a0 All Codefresh pipelines use Docker images in one form or another, whether it be by using them as runtime tools, or creating them as deployment artifacts.\u00a0 Codefresh has always required that all tools used in a pipeline be Dockerized, and each step in the pipeline runs in the context of its own Docker image:<\/span><\/p>\n<p><img class=\"wp-image-15590 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-May-06-13-22-13-1024x597.png\" alt=\"\" width=\"690\" height=\"370\" \/><\/p>\n<h2><strong>Cloud and Version Control Agnosticism<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">Many CI\/CD tools limit which providers you can use for both version control and cloud providers.\u00a0 A good CI\/CD tool should be cloud and version control agnostic &#8212; it should:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Play well with any Git or Cloud provider<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Give you a great amount of flexibility on how you choose to version control and deploy your code<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Have no vendor lock-in\u00a0\u00a0<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Many tools do not offer such agnosticism with version control, and are tied to their own version control systems.\u00a0 The same can be said for Cloud agnosticism as well. Some CI\/CD tools from major Cloud Service Providers can be examples of this.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">One of the biggest advantages of Codefresh is the fact that it offers native support (and great documentation!) for <\/span><b>any<\/b> <a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/git-providers\/\"><span style=\"font-weight: 400\">Git<\/span><\/a><span style=\"font-weight: 400\"> or <\/span><a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/git-providers\/\"><span style=\"font-weight: 400\">Cloud<\/span><\/a><span style=\"font-weight: 400\"> provider, giving you a great amount of flexibility on how you build your pipelines.\u00a0 With Codefresh, there is no vendor-lock in and you are free to choose the tools best-suited for your needs.<\/span><\/p>\n<p><img class=\"size-large wp-image-15591 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/agnostic-1024x521.png\" alt=\"\" width=\"1024\" height=\"521\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/agnostic-1024x521.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/agnostic-300x153.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/agnostic-768x391.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/agnostic-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/agnostic.png 1401w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><span style=\"font-weight: 400\">Oftentimes, companies use multiple different cloud and git providers, both on-premise and in the cloud, so offering cloud and git agnosticism is essential.<\/span><\/p>\n<h2><strong>Pipeline Creation with Standardized Definitions<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">Using a standardized YAML approach for programmatic deployments is important.\u00a0 Some tools offer non-standardized approaches, offering pipeline configuration in different modes, such as scripted, procedural Groovy pipelines.\u00a0 Scripted pipelines do not provide a strict and pre-defined structure, which introduces a lot of complexity when it comes to building out your pipelines, making them complicated and hard to manage.\u00a0 In addition, scripted pipelines force operators into learning a full programming language just to pick up and implement the CI\/CD system.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">Codefresh simplifies this by offering only one mode for constructing pipelines: <\/span><a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\"><span style=\"font-weight: 400\">declarative YAML<\/span><\/a><span style=\"font-weight: 400\">.\u00a0 This keeps your pipelines (and the documentation supporting it): <\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Standardized and easy to pick up and implement, speeding up the time it takes to get from source code to deployment.\u00a0\u00a0<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Managed via source file and able to go through a standard PR \/ code review process, meaning the state of your code and your pipeline are always aligned<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Reusable, as YAML can be used as building blocks to distribute to other projects<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">In addition to a one-size-fits-all approach to pipeline configuration, a modern CI\/CD tool should allow for easy, global, one-time authentication\/integrations for Docker registries and Kubernetes clusters.\u00a0 <\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\">With a modern CI\/CD tool, the less manual configurations, the better, as it:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Enables your DevOps team to get up and running, focusing on building out their pipelines as opposed to dealing with messy configuration options<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Reduce the amount of time it takes to administer authentication options within your pipeline<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\"><span style=\"font-weight: 400\">Makes CI\/CD easy for everyone to use without requiring everyone to learn a new language to create pipelines<\/span><\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Codefresh provides this capability automatically to all pipelines.\u00a0 You authenticate one time through your global account settings to Docker registries (without the need to run docker login), Kubernetes clusters (without the need to run kubectl commands), Secret repositories, Helm repositories, and so on &#8212; once you configure this one time, authentication through the pipeline is all handled automatically for you.\u00a0<\/span><\/p>\n<h2><strong>Graphical Pipeline View\u00a0<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">Any modern CI\/CD tool should provide an intuitive user interface, complete with a graphical pipeline view of your workflow.\u00a0 Most CI\/CD tools offer this, but the user interface\/experience can be lacking in critical build information and modern design principles.<\/span><\/p>\n<p><span style=\"font-weight: 400\">At Codefresh, we provide a user-friendly experience when it comes to viewing your pipelines graphically.\u00a0 Your pipeline steps can even be organized into different stages &#8212; they are completely customizable.\u00a0 You define as many stages as you wish, and define what steps are grouped under each stage. Our graphical pipeline view provides:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><b>Any<\/b><span style=\"font-weight: 400\"> sort of stakeholder an overview of your pipeline and what is occurring at each step<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">The YAML, logs, state, and metrics of the build as a whole or as a part of any particular step<\/span><\/li>\n<\/ul>\n<p><img class=\"aligncenter wp-image-15592 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17.png\" alt=\"\" width=\"2474\" height=\"1448\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17.png 2474w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17-300x176.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17-1024x599.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17-768x450.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17-1536x899.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17-2048x1199.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-16-17-20x12.png 20w\" sizes=\"(max-width: 2474px) 100vw, 2474px\" \/><\/p>\n<p><span style=\"font-weight: 400\">Getting a holistic view of your pipeline is extremely important, the larger and more complex your pipeline gets.<\/span><\/p>\n<p><img class=\"aligncenter wp-image-15593 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50.png\" alt=\"\" width=\"2482\" height=\"598\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50.png 2482w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50-300x72.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50-1024x247.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50-768x185.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50-1536x370.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50-2048x493.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-18-17-50-20x5.png 20w\" sizes=\"(max-width: 2482px) 100vw, 2482px\" \/><\/p>\n<p><span style=\"font-weight: 400\">The ability to see the metrics of your pipeline allows you to instantly view bottlenecks and optimize slow build times without any guesswork.<\/span><\/p>\n<h2><strong>Parallel Steps<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">Most common pipeline steps run sequentially, meaning each step in the pipeline is executed individually, one at a time.\u00a0 The ability to run steps in parallel as opposed to sequentially is a very important feature of any modern CI\/CD tool, as it can dramatically decrease the amount of time it takes for your pipeline to complete.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">For example, consider a sequential pipeline with 5 steps, each step running its own set of tests: unit tests, fast tests, slow tests, smoke tests, and integration tests.\u00a0 For simplicity, let\u2019s say each set of tests takes 1 minute to run.\u00a0 In a sequential pipeline, the build time would be a total of 5 minutes.\u00a0 Parallelizing all of these steps would cut the time it takes the pipeline to run down to 1 minute, reducing the time your engineers wait for a build to finish.\u00a0 CI\/CD tools that offer parallelization are beneficial in:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Cost efficiency<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Running steps in parallel makes the cost per step (the amount of time it takes for the entire build process to complete) much lower<\/span><\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">CI\/CD optimization \/ faster feedback<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Run testing steps as soon as a developer pushes a new commit (throughout the entire software development lifecycle), giving your team quick feedback<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Most modern tools offer this capability, but only at a basic level of splitting a single task into parallel tasks\u00a0 Codefresh takes it one step further, by allowing you to create a custom graph of dependencies between parallel steps, giving you maximum flexibility on any complex flow.<\/span><\/p>\n<p><span style=\"font-weight: 400\">For example, at Codefresh, to run steps in parallel, we support two modes: one for parallelizing your entire pipeline, and one for parallelizing only specific portions of it.<\/span><\/p>\n<p><img class=\"size-full wp-image-15594 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/parallel-pipeline-examples.png\" alt=\"\" width=\"716\" height=\"348\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/parallel-pipeline-examples.png 716w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/parallel-pipeline-examples-300x146.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/parallel-pipeline-examples-20x10.png 20w\" sizes=\"(max-width: 716px) 100vw, 716px\" \/><\/p>\n<p><span style=\"font-weight: 400\">The advantage of parallelism within Codefresh is that we offer support for an advanced parallel mode with full step definitions and their explicit dependencies, allowing for complex <\/span><a href=\"https:\/\/codefresh.io\/docs\/docs\/yaml-examples\/examples\/fan-in-fan-out\/\"><span style=\"font-weight: 400\">fan-in, fan-out configurations<\/span><\/a><span style=\"font-weight: 400\"> as seen in the diagram above.<\/span><\/p>\n<h2><strong>Standardized Plugin Mechanism (Docker-based)<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">Many CI\/CD tools support a marketplace of plugins, but the method of creating one is not standardized.\u00a0 A modern CI\/CD tool should have a standardized, Docker-based mechanism for plugin creation.\u00a0 This allows:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Developers to create their own plugins without special knowledge of the CI\/CD tool\u2019s API or specific language used for that platform.\u00a0\u00a0<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Every team member to create plugins in a standardized environment, i.e. solving the issue of \u201cit works on my machine\u201d<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Reuse of existing plugins from other teams<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">The ability to write a plugin in <\/span><b>any<\/b><span style=\"font-weight: 400\"> programming language, as long as it is packaged in a Docker image<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Any public Dockerhub image is a potential pipeline step within your plugin<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">At the base of every plugin, Codefresh uses a Docker image, simplifying the plugin creation process.\u00a0 And, since Codefresh has a Docker-based build architecture from its heart, you can easily plug-and-play with any plugin from our marketplace into your pipelines.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">Take a look at <\/span><a href=\"https:\/\/codefresh.io\/steps\/\"><span style=\"font-weight: 400\">any of our plugins<\/span><\/a><span style=\"font-weight: 400\"> (they are all open-source!) and you will see that they are composed of a Dockerfile, making it easy for developers to extend and add their own, without any background knowledge of our API.\u00a0 In addition, plugins are scoped per pipeline, so you have no dependency hell to monitor between plugins, or a need to monitor which versions are compatible with your platform version.<\/span><\/p>\n<h2><strong>Configuration Options Through Both Code and UI<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">A modern CI\/CD tool should have both Configuration as Code as well as Graphical User Interface options.\u00a0 Many tools offer configuration through code, but lack in UI configurations, or vise versa.\u00a0 Allowing a means of both offers:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Flexibility, in the event you have someone on your team who wants to take a less-technical approach to managing their configurations<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Versioning of changes<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Configuration as code allows configuration to be stored as code in your version control system, allowing you to easily track changes by whom and when\u00a0<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Codefresh offers both types of configurations for many options.\u00a0 For example, we offer an in-line editor you can use directly from the UI to perform dry-runs of your pipeline, and once your pipeline is ready, you can move it to source control and use it from there.\u00a0 The pipeline can even be in a different repository from your application\u2019s source, allowing for maximum flexibility.<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\">Moreover, you can define variables as a part of the YAML itself, or, we give you the flexibility to define these variables as a part of the pipeline settings, through the UI:<\/span><\/p>\n<p><img class=\"aligncenter wp-image-15595 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/variables.png\" alt=\"\" width=\"375\" height=\"367\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/variables.png 375w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/variables-300x294.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/variables-20x20.png 20w\" sizes=\"(max-width: 375px) 100vw, 375px\" \/><\/p>\n<p><span style=\"font-weight: 400\">Developers and beginners tend to work with the GUI, while Ops teams and advanced users tend to work with configuration as code.\u00a0 Offering a means to support both keeps teams happy and is vital to any organization.<\/span><\/p>\n<h2><strong>Reusable Pipelines for Microservices<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">A modern CI\/CD tool should have a mechanism in place to reuse pipelines for Microservice applications.\u00a0 Most microservices have a similar pipeline pattern in place.\u00a0 Since those similarities exist, it should be possible to reuse a single pipeline across many microservices.<\/span><\/p>\n<p><span style=\"font-weight: 400\">One of the ground-breaking features of Codefresh is that pipelines are not bound to specific Git repositories, meaning you can re-use them amongst different microservices by just adding more triggers.\u00a0 This allows for simplified:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Pipeline construction\u00a0<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">You have only one pipeline to build and it acts as one, reusable unit<\/span><\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Project construction\u00a0<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Any time a new microservice is added, you only need to add a new trigger.\u00a0 No need to rebuild the existing pipeline<\/span><\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Pipeline enforcement<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Updating a single pipeline affects all other microservices associated with it, so you don\u2019t have to hunt down which pipeline affected what<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Codefresh offers a variety of triggers, including Git, Dockerhub, Azure, Quay, Artifactory, Cron, and the Codefresh API\/CLI.<\/span><\/p>\n<p><img class=\"size-full wp-image-15596 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/add-new-microservice.png\" alt=\"\" width=\"662\" height=\"459\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/add-new-microservice.png 662w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/add-new-microservice-300x208.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/add-new-microservice-20x14.png 20w\" sizes=\"(max-width: 662px) 100vw, 662px\" \/><\/p>\n<p><span style=\"font-weight: 400\">Take for example, the above diagram.\u00a0 The pipeline process is the same for all microservices, and four microservices already exist (and thus, four triggers).\u00a0 When a new microservice is created, the Ops team simply adds a new trigger to the existing pipeline, and the work is finished.\u00a0 This speeds up the amount of time needed to create a new project, compared to other solutions where bootstrapping a new microservice can take days to complete.<\/span><\/p>\n<h2><strong>Live Pipeline Debugging with Breakpoints<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">The ability to troubleshoot a failed build is absolutely essential when it comes to an efficient CI\/CD tool.\u00a0 Many CI\/CD tools offer simple debugging with SSH,\u00a0 enabling users to debug a failed build from the builder node.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">Codefresh takes a unique approach to pipeline debugging, on the other hand, by being the <\/span><b>first ever <\/b><span style=\"font-weight: 400\">CI\/CD solution to make <\/span><a href=\"https:\/\/codefresh.io\/docs\/docs\/configure-ci-cd-pipeline\/debugging-pipelines\/#using-the-debugger-terminal\"><span style=\"font-weight: 400\">pipeline debugging live<\/span><\/a><span style=\"font-weight: 400\">:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Live debugging is more user-friendly and the way most developers are already accustomed to debugging their code<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">It makes the CI\/CD creation process easier for engineers to test, troubleshoot, and fix their pipelines<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Similar to the way developers debug applications live in their IDEs, you can place breakpoints within your pipeline steps to inspect the live states of your build.\u00a0\u00a0<\/span><\/p>\n<p><img class=\"size-full wp-image-15597 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/breakpoint.png\" alt=\"\" width=\"449\" height=\"248\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/breakpoint.png 449w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/breakpoint-300x166.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/breakpoint-20x11.png 20w\" sizes=\"(max-width: 449px) 100vw, 449px\" \/><\/p>\n<p><span style=\"font-weight: 400\">Once the pipeline pauses at your breakpoint, you have the ability to run any commands you wish to understand the state of your container, making creating, modifying, and testing your pipelines much easier.<\/span><\/p>\n<h2><strong>Native Support for Kubernetes, Helm, and Docker<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">This is a growing area of interest, as many companies wish to adopt cloud native approaches.\u00a0 Many tools offer integrations with Kubernetes, Helm, and Docker through the use of plugins, but few have native support for all three.\u00a0 In fact, Codefresh works out-of-the-box with Kubernetes, Helm, and Docker, without the need of any special plugins or configurations.\u00a0 It is the only CI\/CD solution that provides native Kubernetes, Helm, and Docker dashboards.\u00a0\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">With our Kubernetes dashboard, you get:\u00a0<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Full traceability into your clusters, as you can monitor what images are currently running, and trace them all the way back to an individual commit.<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">The ability to create and edit services, deployments, and more<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Visibility across clusters all in one place, along with their state, status, and any errors<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><img class=\"aligncenter wp-image-15598 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24.png\" alt=\"\" width=\"2234\" height=\"1130\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24.png 2234w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24-300x152.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24-1024x518.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24-768x388.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24-1536x777.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24-2048x1036.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-40-24-20x10.png 20w\" sizes=\"(max-width: 2234px) 100vw, 2234px\" \/><\/p>\n<p style=\"text-align: center\"><i><span style=\"font-weight: 400\">Kubernetes dashboard with full traceability into your clusters.<br \/>\n<\/span><\/i><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">With our Helm dashboards, you get:<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">A built-in Codefresh-hosted chart repository with built-in, one-click installation<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">View the status of currently deployed releases<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">One-click rollbacks of your production Kubernetes cluster<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">A rolling version history (with diffs) of various chart versions<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Drag-and-drop Helm release promotions to different environments<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><img class=\"aligncenter wp-image-15599 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34.png\" alt=\"\" width=\"2246\" height=\"872\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34.png 2246w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34-300x116.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34-1024x398.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34-768x298.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34-1536x596.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34-2048x795.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-56-34-20x8.png 20w\" sizes=\"(max-width: 2246px) 100vw, 2246px\" \/><\/p>\n<p style=\"text-align: center\"><i><span style=\"font-weight: 400\">Built-in Helm chart repository view, with one-click installation methods.<\/span><\/i><\/p>\n<p><img class=\"aligncenter wp-image-15602 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22.png\" alt=\"\" width=\"2250\" height=\"1230\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22.png 2250w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22-300x164.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22-1024x560.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22-768x420.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22-1536x840.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22-2048x1120.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-57-22-20x11.png 20w\" sizes=\"(max-width: 2250px) 100vw, 2250px\" \/><\/p>\n<p style=\"text-align: center\"><i><span style=\"font-weight: 400\">Helm release dashboard, where you can view the status of currently deployed releases.<\/span><\/i><\/p>\n<p><img class=\"aligncenter wp-image-15603 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24.png\" alt=\"\" width=\"2264\" height=\"976\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24.png 2264w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24-300x129.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24-1024x441.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24-768x331.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24-1536x662.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24-2048x883.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-13-58-24-20x9.png 20w\" sizes=\"(max-width: 2264px) 100vw, 2264px\" \/><\/p>\n<p style=\"text-align: center\"><i><span style=\"font-weight: 400\">Helm promotion dashboard, giving you an overview of where each release exists in your development lifecycle, and the ability to promote different releases to different environments.<\/span><\/i><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">With our Docker image dashboard, you get:<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Details such as the git branch, commit message, and hash that created it, date of creation as well as any tags<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">You can also select any image and look at its individual metadata<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p style=\"text-align: center\"><img class=\"aligncenter wp-image-15604 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51.png\" alt=\"\" width=\"2262\" height=\"834\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51.png 2262w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51-300x111.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51-1024x378.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51-768x283.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51-1536x566.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51-2048x755.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-08-51-20x7.png 20w\" sizes=\"(max-width: 2262px) 100vw, 2262px\" \/><\/p>\n<p><img class=\"aligncenter wp-image-15605 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53.png\" alt=\"\" width=\"2246\" height=\"964\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53.png 2246w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53-300x129.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53-1024x440.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53-768x330.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53-1536x659.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53-2048x879.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/Screenshot-at-Apr-30-14-10-53-20x9.png 20w\" sizes=\"(max-width: 2246px) 100vw, 2246px\" \/><\/p>\n<p style=\"text-align: center\"><em>Docker Image Dashboard with Meta-data<\/em><\/p>\n<p style=\"text-align: left\"><span style=\"font-weight: 400\">From your first commit to your production deployment, Codefresh offers full traceability of your software development lifecycle.\u00a0 You can view all phases of development within a single, unified platform.\u00a0 With other CI\/CD solutions, you don\u2019t receive the benefit of this holistic view and have to investigate using other platforms just to trace what is going on with a release.<\/span><\/p>\n<p><img class=\"aligncenter wp-image-15606 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/codefresh-single-plane.png\" alt=\"\" width=\"1200\" height=\"675\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/codefresh-single-plane.png 1200w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/codefresh-single-plane-300x169.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/codefresh-single-plane-1024x576.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/codefresh-single-plane-768x432.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/codefresh-single-plane-20x11.png 20w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" \/><\/p>\n<h2><strong>SaaS, On-prem, and Hybrid Installation Methods<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">There is always a debate as to whether or not to host the CI\/CD system yourself, or offload the work to a cloud-based\/SaaS service.\u00a0 There are pros and cons to each approach, namely, offloading the work can be beneficial and faster, as you can access a shared pool of the CI\/CD tool\u2019s hosted resources to run your pipelines.\u00a0 But, with this approach, there are often security concerns around code\/data accessibility and many companies feel safer running their pipelines from their own machines.\u00a0 The downside to this approach is that any and all maintenance is now your responsibility.<\/span><span style=\"font-weight: 400\">\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">Any modern CI\/CD tool should not lock its customers down into one installation method, but give customers flexibility.\u00a0 In fact, to solve the debate between on-prem vs. SaaS solutions, Codefresh offers the best of both worlds, by offering a <\/span><a href=\"https:\/\/codefresh.io\/docs\/docs\/enterprise\/behind-the-firewall\/\"><span style=\"font-weight: 400\">Hybrid installation model<\/span><\/a><span style=\"font-weight: 400\">.\u00a0 With this mode:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">The Codefresh UI runs on the Codefresh infrastructure<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Actual builds happen via the customer\u2019s location (behind the firewall, from a Kubernetes cluster). \u00a0<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">This keeps security concerns at bay, while still leaving all the heavy lifting and maintenance of the platform up to Codefresh.<\/span><\/p>\n<p><img class=\"aligncenter wp-image-15607 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture.png\" alt=\"\" width=\"2320\" height=\"1200\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture.png 2320w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture-300x155.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture-1024x530.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture-768x397.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture-1536x794.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture-2048x1059.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/architecture-20x10.png 20w\" sizes=\"(max-width: 2320px) 100vw, 2320px\" \/><\/p>\n<p><span style=\"font-weight: 400\">With the Hybrid mode, you can take advantage of specific custom infrastructure within Codefresh, such as GPU nodes and other specialized hardware.\u00a0 You can also use SAAS and Hybrid simultaneously, so some pipelines can run in the cloud, while others run behind your firewall.<\/span><\/p>\n<h2><strong>Zero Config, Distributed Caching\u00a0<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">A modern CI\/CD tool should contain a multitude of caching mechanisms that take place as a part of your pipelines.\u00a0 These caching mechanisms should be:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Automatic, and require little to no configuration<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Distributed across all build nodes or pipeline steps<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">This allows for decreased network costs, improved responsiveness, and increased hardware performance &#8212; all in all, reducing your build times.\u00a0 Lengthy build times are bad for your team for various reasons:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Reduction in commit frequency\u00a0<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Due to the cost in time it takes to build, developers will put off building and submit code in larger batches of work, creating a larger surface area for change<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">This leads to more difficult integration and a greater risk for merge conflicts<\/span><\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Small improvements become costly, leading to increased life cycle time overall<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Distributed caching is a great way to mitigate the risks of slow build times, and Codefresh offers several types:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Distributed Docker Image Caching<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">During subsequent runs of a pipeline, Codefresh will automatically fetch Docker images from a shared image cache<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Distributed Docker Layer Caching<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Mimics the way Docker Layer Caching behaves locally on your workstation &#8212; when building images, Docker will cache intermediate layers making future builds much faster<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Docker Layer Caching is distributed, meaning all build nodes in your pipelines share the same cache.\u00a0 Any available node can pick up your next pipeline build, as all of them share access to previously cached Docker layers.<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><img class=\"wp-image-15608 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/distributed-layer-cache.png\" alt=\"\" width=\"742\" height=\"486\" \/><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Traditional Build Caching<\/span>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Many CI solutions make you manually configure what folder you want to cache<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\"><span style=\"font-weight: 400\">Codefresh offers an internal Docker volume, under \/codefresh\/volume that is automatically cached for subsequent builds of the same pipeline<\/span><\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2><strong>Monorepo Support<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">Monorepo-style projects take an approach where:<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Multiple projects are committed to the same repository<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Projects depend upon one another and can share a common codebase<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">When changes are made, only specific projects affected by that change are rebuilt\/retested, as opposed to rebuilding the entire monorepo itself<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">The advantages of monorepos are:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Developers only need to update and check-out one repository<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Single source of truth for all versions of your code and their dependent projects<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Atomic commits: changes to multiple projects can be checked in as one commit<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Merge code only once, as opposed to multiple times across multiple repositories<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Simplification of merge conflict handling<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Monorepo support should be a key feature of any modern CI\/CD tool, as it greatly decreases the amount of builds occuring in your daily development cycles.\u00a0 If you use a CI\/CD tool without monorepo support, you will:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Go through the entire build\/test\/deploy process for the entire repository when any changes are introduced in any one microservice<\/span><\/li>\n<li style=\"font-weight: 400\"><span style=\"font-weight: 400\">Have to create custom in-house tools that mimic the same functionality Codefresh offers out-of-the-box<\/span><span style=\"font-weight: 400\"><br \/>\n<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400\">Transitioning to a monorepo from a multi-repo approach may require you to rethink how you structure your CI\/CD process.\u00a0 You only need to build the artifacts affected by that change, as you are no longer building a single application, i.e. triggering pipelines to execute only when changes happen in specific folders.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">Codefresh simplifies this process for you, by providing easy-to-use monorepo support.\u00a0 In the trigger of each pipeline, you define a glob expression that maps to the project\u2019s files.\u00a0 Only when the expression is matched, will the pipeline execute, meaning you can define pipelines that run a sequence of operations only on the microservices you specify, despite them being located in the same repository.<\/span><\/p>\n<p><span style=\"font-weight: 400\"><img class=\"aligncenter wp-image-15609 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/image2.jpg\" alt=\"\" width=\"538\" height=\"308\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/image2.jpg 538w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/image2-300x172.jpg 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/05\/image2-20x11.jpg 20w\" sizes=\"(max-width: 538px) 100vw, 538px\" \/><\/span><\/p>\n<p><span style=\"font-weight: 400\">In the above diagram, we have four projects in our mono-repo.\u00a0 We create two separate pipelines, that execute on different triggers based on their glob expressions.<\/span><\/p>\n<h2><strong>Conclusion<\/strong><\/h2>\n<p><span style=\"font-weight: 400\">I hope this list was helpful in providing you with the information you need to choose an efficient, modern CI\/CD tool.\u00a0 Obviously, you will need to select a tool that best fits your needs as a team, but the items listed here are what I consider to be a bare-minimum in terms of what your selected product has to offer.\u00a0 Technology moves very fast, and it\u2019s important that your CI\/CD tool of choice is up-to-date and evolves with new development trends and practices.\u00a0\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400\">New to Codefresh?\u00a0 <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=13KeyFeaturesAModernCICDToolShouldContain\">Sign up for a free account today<\/a>!<\/span><\/p>\n<p>&nbsp;<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"15588\"\/>","protected":false},"excerpt":{"rendered":"<p>DevOps methodologies have become a huge staple of the Software Development Lifecycle.\u00a0 As such, more and more companies have been adopting the need for Continuous Integration\/Continuous Delivery (CI\/CD) tools.\u00a0 Building a successful CI\/CD workflow can be a tedious process that requires your team to participate in a large amount of preparation and planning &#8212; but &hellip; <a href=\"https:\/\/codefresh.io\/continuous-deployment\/15588\/\">Read more<\/a><\/p>\n","protected":false},"author":125,"featured_media":20531,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120,1505,1543],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>13 Key Features Every Modern CI\/CD Tool Should Contain | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-deployment\/15588\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"13 Key Features Every Modern CI\/CD Tool Should Contain\" \/>\n<meta property=\"og:description\" content=\"DevOps methodologies have become a huge staple of the Software Development Lifecycle.\u00a0 As such, more and more companies have been adopting the need for Continuous Integration\/Continuous Delivery (CI\/CD) tools.\u00a0 Building a successful CI\/CD workflow can be a tedious process that requires your team to participate in a large amount of preparation and planning &#8212; but &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-deployment\/15588\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2020-05-08T17:05:30+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-11-09T17:12:58+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2560\" \/>\n\t<meta property=\"og:image:height\" content=\"1440\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Contributor\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"18 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg\",\"width\":2560,\"height\":1440},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/\",\"name\":\"13 Key Features Every Modern CI\/CD Tool Should Contain | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#primaryimage\"},\"datePublished\":\"2020-05-08T17:05:30+00:00\",\"dateModified\":\"2021-11-09T17:12:58+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/15588\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"13 Key Features Every Modern CI\/CD Tool Should Contain\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\"},\"headline\":\"13 Key Features Every Modern CI\/CD Tool Should Contain\",\"datePublished\":\"2020-05-08T17:05:30+00:00\",\"dateModified\":\"2021-11-09T17:12:58+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#webpage\"},\"wordCount\":3665,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg\",\"articleSection\":[\"Continuous Deployment\/Delivery\",\"Containers\",\"Continuous Integration\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/15588\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\",\"name\":\"Contributor\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"caption\":\"Contributor\"},\"url\":\"https:\/\/codefresh.io\/author\/contributor\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"13 Key Features Every Modern CI\/CD Tool Should Contain | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-deployment\/15588\/","og_locale":"en_US","og_type":"article","og_title":"13 Key Features Every Modern CI\/CD Tool Should Contain","og_description":"DevOps methodologies have become a huge staple of the Software Development Lifecycle.\u00a0 As such, more and more companies have been adopting the need for Continuous Integration\/Continuous Delivery (CI\/CD) tools.\u00a0 Building a successful CI\/CD workflow can be a tedious process that requires your team to participate in a large amount of preparation and planning &#8212; but &hellip; Read more","og_url":"https:\/\/codefresh.io\/continuous-deployment\/15588\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2020-05-08T17:05:30+00:00","article_modified_time":"2021-11-09T17:12:58+00:00","og_image":[{"width":2560,"height":1440,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Contributor","Est. reading time":"18 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg","width":2560,"height":1440},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#webpage","url":"https:\/\/codefresh.io\/continuous-deployment\/15588\/","name":"13 Key Features Every Modern CI\/CD Tool Should Contain | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#primaryimage"},"datePublished":"2020-05-08T17:05:30+00:00","dateModified":"2021-11-09T17:12:58+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-deployment\/15588\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"13 Key Features Every Modern CI\/CD Tool Should Contain"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75"},"headline":"13 Key Features Every Modern CI\/CD Tool Should Contain","datePublished":"2020-05-08T17:05:30+00:00","dateModified":"2021-11-09T17:12:58+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#webpage"},"wordCount":3665,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/15588\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/05\/tools-cesar-carlevarino-aragon-NL_DF0Klepc-unsplash-scaled.jpg","articleSection":["Continuous Deployment\/Delivery","Containers","Continuous Integration"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-deployment\/15588\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75","name":"Contributor","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","caption":"Contributor"},"url":"https:\/\/codefresh.io\/author\/contributor\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/15588"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/125"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=15588"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/15588\/revisions"}],"predecessor-version":[{"id":20536,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/15588\/revisions\/20536"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/20531"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=15588"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=15588"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=15588"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}