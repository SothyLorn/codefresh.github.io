{"id":17868,"date":"2020-10-29T06:44:05","date_gmt":"2020-10-29T14:44:05","guid":{"rendered":"https:\/\/codefresh.io\/?p=17868"},"modified":"2022-01-06T15:52:06","modified_gmt":"2022-01-06T15:52:06","slug":"helm-hooks","status":"publish","type":"post","link":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/","title":{"rendered":"Tutorial: Using Helm Hooks in Your Codefresh Pipeline"},"content":{"rendered":"<p>When getting started with Kubernetes and Helm, the process across the release life cycle can feel like a black-box; having to follow debugging processes to understand what is going on behind the scenes. Helm hooks can help with that.<\/p>\n<p>This post provides an overview of:<\/p>\n<ul>\n<li>Helm hooks, why and how they are used;<\/li>\n<li>An example project that you can follow along with;<br \/>\nand<\/li>\n<li>How you can use Helm hooks in your Codefresh pipeline.<\/li>\n<\/ul>\n<p>If you are new to Helm, we suggest to check-out our <a href=\"https:\/\/codefresh.io\/helm-tutorial\/getting-started-with-helm-3\/\">previous tutorial<\/a> first and then come back to learn more about Helm hooks.<\/p>\n<h3><b>Overview: What are Helm Hooks?<\/b><\/h3>\n<p>Hooks perform a single action at a specified point during the release life cycle. At each stage, hooks can be used to intervene in the release for upgrades, downgrades, and deletion.<\/p>\n<p>For example, Helm hooks help you to manage dependencies. Those could exist outside of the Kubernetes cluster or an external dependency. Hooks allow you to determine when and whether a service, installation, or upgrade is finished before starting a new one. For example, if you want to port user information into your database, you can ensure that new data has successfully been transferred before executing queries.<\/p>\n<h3><b>Hook Annotation Values<\/b><\/h3>\n<p>Hooks are not directly applied to the Kubernetes environment during standard processing. Instead, Hooks run in a separate pod inside of your Kubernetes cluster. The value specified in the helm.sh\/hook annotation determines when the hook should be rendered. This makes it possible to perform operations at specific points during the release life cycle.<\/p>\n<p>Helm hooks have several annotation values that are used to specify when a hook should be executed. One annotation may be used at multiple points during the release. Overall, there are nine places where a hook could be called; an overview is provided in the following table, taken from the official Helm documentation.<\/p>\n<div class=\"table-responsive\"><table>\n<tbody>\n<tr>\n<td><b>Annotation Value<\/b><\/td>\n<td><b>Description<\/b><\/td>\n<\/tr>\n<tr>\n<td>pre-install<\/td>\n<td>Executes after templates are rendered, but before any resources are created in Kubernetes<\/td>\n<\/tr>\n<tr>\n<td>post-install<\/td>\n<td>Executes after all resources are loaded into Kubernetes<\/td>\n<\/tr>\n<tr>\n<td>pre-delete<\/td>\n<td>Executes on a deletion request before any resources are deleted from Kubernetes<\/td>\n<\/tr>\n<tr>\n<td>post-delete<\/td>\n<td>Executes on a deletion request after all of the release&#8217;s resources have been deleted<\/td>\n<\/tr>\n<tr>\n<td>pre-upgrade<\/td>\n<td>Executes on an upgrade request after templates are rendered, but before any resources are updated<\/td>\n<\/tr>\n<tr>\n<td>post-upgrade<\/td>\n<td>Executes on an upgrade after all resources have been upgraded<\/td>\n<\/tr>\n<tr>\n<td>pre-rollback<\/td>\n<td>Executes on a rollback request after templates are rendered, but before any resources are rolled back<\/td>\n<\/tr>\n<tr>\n<td>post-rollback<\/td>\n<td>Executes on a rollback request after all resources have been modified<\/td>\n<\/tr>\n<tr>\n<td>test<\/td>\n<td>Executes when the Helm test subcommand is invoked (<a href=\"https:\/\/helm.sh\/docs\/chart_tests\/\"> view test docs<\/a>)<\/td>\n<\/tr>\n<\/tbody>\n<\/table><\/div>\n<p>The original table can be found in the official <a href=\"https:\/\/helm.sh\/docs\/topics\/charts_hooks\/#the-available-hooks\">Helm documentation<\/a>.<\/p>\n<h3><b>Example using Helm Hooks<\/b><\/h3>\n<p>This tutorial will focus on the install life cycle.<\/p>\n<p>Helm provides two hooks for the install life cycle, \u201cpre-install\u201d and \u201cpost-install\u201d.<\/p>\n<ul>\n<li>\u201cPre-install\u201d is used after templates are rendered and before resources are created in Kubernetes;<\/li>\n<li>\u201cPost-install\u201d is used after all resources are loaded in Kubernetes. Thus, it could be used to invoke a series of checks.<\/li>\n<\/ul>\n<p>Let\u2019s get started working with Helm hooks. For the following example, we will use <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/tree\/helm-3-tutorial\">this GitHub repository<\/a>, which is a simple React project to query articles from Hacker News. Please clone the repository to your GitHub account. Alternatively, you can follow with your own project or start a new React application with \u2018<a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/tree\/helm-3-tutorial\">create-react-app<\/a>\u2019. The decision is yours.<\/p>\n<p>Here is what we are going to do:<\/p>\n<ul>\n<li>Cover Prerequisites<\/li>\n<li>Set-up codefresh.yml file<\/li>\n<li>Add pre-install and post-install hook<\/li>\n<li>Setting up your Codefresh pipeline<\/li>\n<\/ul>\n<h4><b>Prerequisites<\/b><\/h4>\n<p>It is assumed that you already set-up a Kubernetes cluster <a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/kubernetes\/\">with Codefresh<\/a>. This tutorial will not cover the set-up process. You can read more about Kubernetes clusters in Codefresh in the Codefresh documentation on <a href=\"https:\/\/codefresh.io\/docs\/docs\/new-helm\/using-helm-in-codefresh-pipeline\/\">Using Helm in a Codefresh Pipeline<\/a>.<\/p>\n<p>Additionally, please ensure that you:<\/p>\n<ul>\n<li>Have <a href=\"https:\/\/helm.sh\/\">installed Helm<\/a>.<\/li>\n<li>Have a basic Helm Chart setup; to do so you can either <a href=\"https:\/\/codefresh.io\/helm-tutorial\/getting-started-with-helm-3\/\">follow this tutorial<\/a>. Alternatively, the <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/tree\/helm-3-tutorial\">example repo<\/a> provided already has a Helm Chart.<\/li>\n<li>Can <a href=\"https:\/\/docs.docker.com\/get-docker\/\">access Docker<\/a> in your terminal and that your project already has a Dockerfile. Build your Docker image and use the same repository in your Helm Chart. By using the example repository, this is already done for you. However, you can also <a href=\"https:\/\/codefresh.io\/helm-tutorial\/getting-started-with-helm-3\/\">follow this tutorial<\/a> to set it up in your project.<\/li>\n<\/ul>\n<h4><b>Set-up codefresh.yml file\u00a0<\/b><\/h4>\n<p>The codefresh.yml file is used to build your Codefresh pipeline and allows you to customize the build steps in your pipeline. There are two ways that you could set-up the codefresh.yml file. Namely,<\/p>\n<ul>\n<li>Create a pipeline file from scratch<\/li>\n<li>Set-up a new Codefresh pipeline and modify it according to your needs. This will create a codefresh.yml file in the Codefresh UI automatically. You can then customize the file in the UI.<\/li>\n<\/ul>\n<p>For the purpose of this tutorial, we will follow the first option and define our codefresh.yml file in our project folder. Note that if you are using the example repository, the codefresh.yml file is already set-up. However, if you are using a different React App or\/and Docker image, please make sure to modify it like described below.<\/p>\n<p>To set-up the codefresh.yml file please run the following command in your main project folder:<\/p>\n<pre>touch codefresh.yml<\/pre>\n<p>Our <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/blob\/master\/codefresh.yml\">codefresh.yml<\/a> file will use the <a href=\"https:\/\/codefresh.io\/docs\/docs\/getting-started\/create-a-basic-pipeline\/\">minimum set-up<\/a> for this project but feel free to <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\">dive deeper<\/a> and add <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/steps\/freestyle\/\">freestyle steps<\/a> in accordance with your needs.<\/p>\n<pre>version: \"1.0\"\n \nstages:\n - \"clone\"\n - \"build\"\n - \"test\"\n - \"deploy\"\n steps:\n clone:\n   title: \"Cloning repository\"\n   type: \"git-clone\"\n   repo: \"anais-codefresh\/react-article-display\"\n   revision: \"${{CF_BRANCH}}\"\n   git: \"github\"\n   stage: \"clone\"\n \n build:\n   title: \"Building Docker image\"\n   type: \"build\"\n   image_name: \"anaisurlichs\/react-article-display\"\n   working_directory: \".\/react-article-display\"\n   tag: \"${{CF_BRANCH_TAG_NORMALIZED}}\"\n   dockerfile: \"Dockerfile\"\n   stage: \"build\"\n \n test:\n   title: \"Running test\"\n   type: \"freestyle\" # Run any command\n   image: \"ubuntu:latest\" # The image in which command will be executed\n   working_directory: \".\/react-article-display\" # Running command where code cloned\n   commands:\n     - \"ls\"\n   stage: \"test\"\n<\/pre>\n<p>Please make sure to adapt the following keys to your project:<\/p>\n<pre>image_name: \"your Docker image name goes here\"\nworking_directory: \"change to your working directory\"\n<\/pre>\n<p>In the next steps, we will add our Helm hooks to our Helm Chart.<\/p>\n<h4><b>Add pre-install and post-install hook<\/b><\/h4>\n<p>At this stage, we have completed the minimum set-up to use Docker, a Codefresh pipeline, and Helm charts. We will now add the Helm pre-install hook to our chart based on the <a href=\"https:\/\/helm.sh\/docs\/topics\/charts_hooks\/\">template<\/a> provided by the official Helm documentation and make modifications as needed.<\/p>\n<p>Hooks are placed inside the \/templates folder of your chart and called with the helm.sh\/hook annotation. If you are looking through the existing files, you can see that a hook is already used in the default template in the <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/blob\/helm-3-tutorial\/charts\/example-chart\/templates\/tests\/test-connection.yaml\">charts\/example-chart\/templates\/test-connection.yaml<\/a> file.<\/p>\n<pre>annotations:\n\n\"helm.sh\/hook\": test-success\n<\/pre>\n<p>First, create a pre-install-job.yaml file in your templates directory inside the charts folder. Next, add the <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/blob\/master\/charts\/example-chart\/templates\/pre-install-job.yaml\">following template<\/a>:<\/p>\n<pre>apiVersion: batch\/v1\nkind: Job\nmetadata:\n name: \"{{ .Release.Name }}\"\n labels:\n   app.kubernetes.io\/managed-by: {{ .Release.Service | quote }}\n   app.kubernetes.io\/instance: {{ .Release.Name | quote }}\n   app.kubernetes.io\/version: {{ .Chart.AppVersion }}\n   helm.sh\/chart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n annotations:\n   # hooks are defined here\n   \"helm.sh\/hook\": pre-install\n   \"helm.sh\/hook-weight\": \"-5\"\n   \"helm.sh\/hook-delete-policy\": hook-succeeded\nspec:\n template:\n   metadata:\n     name: \"{{ .Release.Name }}\"\n     labels:\n       app.kubernetes.io\/managed-by: {{ .Release.Service | quote }}\n       app.kubernetes.io\/instance: {{ .Release.Name | quote }}\n       helm.sh\/chart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n   spec:\n     restartPolicy: Never\n     containers:\n     - name: pre-install-job\n       image: \"{{ .Values.image.repository }}:{{ .Values.image.tag }}\"\n       command: ['sh', '-c', 'echo pre-install Job Pod is Running ; sleep 2']\n<\/pre>\n<p>This annotation section specifies our hook:<\/p>\n<pre>annotations:\n   # hooks are defined here\n   \"helm.sh\/hook\": pre-install\n   \"helm.sh\/hook-weight\": \"-5\"\n   \"helm.sh\/hook-delete-policy\": hook-succeeded\n<\/pre>\n<p>Next, we will do the same for our <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/blob\/master\/charts\/example-chart\/templates\/post-install-job.yaml\">post-install hook<\/a>. Create the post-install-hook.yaml file in the templates directory. It will look pretty much the same as the pre-install hook. The main difference will be the hook annotation.<\/p>\n<pre class=\"\">annotations:\n   # hooks are defined here\n   \"helm.sh\/hook\": post-install\n   \"helm.sh\/hook-weight\": \"3\"\n   \"helm.sh\/hook-delete-policy\": hook-succeeded<\/pre>\n<p>As you can see there are some differences. First, we reference a different hook, second, we changed the hook-weight from \u201c-5\u201d for the pre-install hook to \u201c3\u201d in the post-install hook. The <a href=\"https:\/\/helm.sh\/docs\/topics\/charts_hooks\/\">weight of hooks<\/a> set the execution order of the hooks, which is defined by negative values. Meaning, the lower the number, the higher the weight.<\/p>\n<p>Now it is time to install your chart. Note that normally, you would push the chart to a Helm repository first. <a href=\"https:\/\/codefresh.io\/docs\/docs\/new-helm\/using-helm-in-codefresh-pipeline\/\">Codefresh provides a free Helm repository<\/a> for every account. However, for this tutorial, we will install the chart directly from the filesystem.<\/p>\n<p>To do so run the following command; if your chart path looks different, make sure to change the command accordingly.<\/p>\n<pre>helm install example-hook .\/charts\/example-chart<\/pre>\n<p>The output in your console should look something like this*:<\/p>\n<figure id=\"attachment_17869\" aria-describedby=\"caption-attachment-17869\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helminstall.png\"><img class=\"size-medium wp-image-17869\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helminstall-300x52.png\" alt=\"helm install step\" width=\"300\" height=\"52\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helminstall-300x52.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helminstall-768x133.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helminstall-20x3.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helminstall.png 1015w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-17869\" class=\"wp-caption-text\">This is the helm install step<\/figcaption><\/figure>\n<p>To double-check that your chart is up and running, please use the helm ls command:<\/p>\n<pre>helm ls<\/pre>\n<p>The \u201cSTATUS\u201d section will also display keywords if something went wrong during the installation process. As you can see below, we currently have three pods deployed*:<\/p>\n<figure id=\"attachment_17870\" aria-describedby=\"caption-attachment-17870\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls.png\"><img class=\"size-medium wp-image-17870\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls-300x16.png\" alt=\"helm ls command\" width=\"300\" height=\"16\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls-300x16.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls-1024x56.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls-768x42.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls-20x1.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/helmls.png 1187w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-17870\" class=\"wp-caption-text\">This is the Helm ls command<\/figcaption><\/figure>\n<p>*Note that we are using the namespace \u201cdemo\u201d. Thus, our commands vary slightly.<\/p>\n<h4><b>View Hook Details<\/b><\/h4>\n<p>The pod of the hook will automatically be deleted once the job is finished. To view the details of the post-install hook, follow these steps:<\/p>\n<ol>\n<li>Remove the following line from post-install-job.yaml:\n<pre>\"helm.sh\/hook-delete-policy\": hook-succeeded<\/pre>\n<\/li>\n<li>Install a new chart:\n<pre>helm install second-example-hook .\/charts\/example-chart<\/pre>\n<\/li>\n<li>When you now view the Kubernetes pods, you will see an additional pod:\n<pre>kubectl get pods<\/pre>\n<\/li>\n<li>View the details of the pod:\n<pre>kubectl describe pod<\/pre>\n<\/li>\n<\/ol>\n<figure id=\"attachment_17872\" aria-describedby=\"caption-attachment-17872\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/kubectlccommand.png\"><img class=\"size-medium wp-image-17872\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/kubectlccommand-300x150.png\" alt=\"kubectl command\" width=\"300\" height=\"150\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/kubectlccommand-300x150.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/kubectlccommand-768x384.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/kubectlccommand-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/kubectlccommand.png 941w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-17872\" class=\"wp-caption-text\">kubectl command to view pods<\/figcaption><\/figure>\n<h4><b>Access Application<\/b><\/h4>\n<p>You could now follow the commands in the console output to access your application in the browser. Those are provided by the NOTES.txt file in your templates folder. After running the commands, we will see our application:<\/p>\n<figure id=\"attachment_17873\" aria-describedby=\"caption-attachment-17873\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display.png\"><img class=\"size-medium wp-image-17873\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display-300x193.png\" alt=\"running application\" width=\"300\" height=\"193\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display-300x193.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display-1024x659.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display-768x494.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display-20x13.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/application-display.png 1262w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-17873\" class=\"wp-caption-text\">View the running application<\/figcaption><\/figure>\n<p>In the next section, we will look at adding a deployment step for your Helm chart to your Codefresh Pipeline.<\/p>\n<h4><b>Set-up a Codefresh Pipeline<\/b><\/h4>\n<p>If you have followed the \u201c<b>Set-up codefresh.yml file step<\/b>\u201d in the previous section or you have cloned the <a href=\"https:\/\/github.com\/anais-codefresh\/react-article-display\/tree\/helm-3-tutorial\">example repo<\/a>, you already have the set-up in your codefresh.yml file to create a basic Codefresh pipeline. In this section, we will add one additional step to install the Helm chart.<\/p>\n<p>Please add the following in your codefresh.yml file to install the Helm chart to your cluster:<\/p>\n<pre> deploy:\n   type: \"helm\"\n   working_directory: \".\/react-article-display\"\n   arguments:\n     action: \"install\"\n     chart_name: \"charts\/example-chart\"\n     release_name: \"example-chart\"\n     helm_version: 3.0.2\n     kube_context: \"anais-cluster@codefresh-sa\"\n   stage: \"deploy\"\n<\/pre>\n<p>Make sure that your chart_name is pointing to the chart name in your main repository, in our case this is \u201ccharts\/example-chart\u201d, and that your kube_context states the Kubernetes cluster <a href=\"https:\/\/codefresh.io\/docs\/docs\/deploy-to-kubernetes\/add-kubernetes-cluster\/\">connected to your Codefresh account<\/a> that you will be using. If you do not have a Kubernetes cluster connected to Codefresh, now is the time to do that.<br \/>\nAccount<br \/>\nNext, we will push all of our changes to our GitHub repository. Once this is done, we will set-up our Codefresh pipeline.<\/p>\n<ul>\n<li>In your Codefresh account, select \u201cNew Project\u201d from the top right of your Dashboard in the projects tap:<\/li>\n<\/ul>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project.png\"><img class=\"aligncenter size-large wp-image-17810\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project-1024x426.png\" alt=\"codefresh-new-project\" width=\"1024\" height=\"426\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project-1024x426.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project-300x125.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project-768x319.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project-20x8.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-new-project.png 1219w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<ul>\n<li>Next, follow the instructions to create your project.<\/li>\n<li>Once you created your project, you will be redirected to your project section in your Dashboard:<\/li>\n<\/ul>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard.png\"><img class=\"aligncenter size-large wp-image-17811\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard-1024x580.png\" alt=\"project-dashboard\" width=\"1024\" height=\"580\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard-1024x580.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard-300x170.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard-768x435.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard-20x11.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/project-dashboard.png 1226w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<ul>\n<li>Go ahead and create a pipeline for your project. Assuming that you are connected with your GitHub account to Codefresh, it will ask you to select the repository that you want to create the pipeline for. Once you have provided the information, you will be redirected to the workflow, which displays the auto-generated codefresh.yml file. In our case, we will use the YAML from our repository instead.<\/li>\n<\/ul>\n<figure id=\"attachment_17812\" aria-describedby=\"caption-attachment-17812\" style=\"width: 577px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/inline-yml.png\"><img class=\"size-full wp-image-17812\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/inline-yml.png\" alt=\"inline-yml\" width=\"577\" height=\"408\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/inline-yml.png 577w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/inline-yml-300x212.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/inline-yml-20x14.png 20w\" sizes=\"(max-width: 577px) 100vw, 577px\" \/><\/a><figcaption id=\"caption-attachment-17812\" class=\"wp-caption-text\">Use the YAML from your Repository<\/figcaption><\/figure>\n<ul>\n<li>Hit run at the bottom of the screen; which will direct you to the Codefresh step. You can follow the processing through the command line. Once done, you will see the output of our NOTES.txt file.<\/li>\n<\/ul>\n<figure id=\"attachment_17813\" aria-describedby=\"caption-attachment-17813\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1.png\"><img class=\"size-medium wp-image-17813\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1-300x142.png\" alt=\"codefresh-pipeline\" width=\"300\" height=\"142\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1-300x142.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1-1024x483.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1-768x362.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1-1536x725.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1-20x9.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/codefresh-pipeline-1.png 1600w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-17813\" class=\"wp-caption-text\">You can now see the Codefresh Pipeline of your project<\/figcaption><\/figure>\n<ul>\n<li>Now the Helm chart is deployed to our Kubernetes Cluster using the Codefresh pipeline. To view the Helm Chart, access Helm &gt; Releases within DEVOPS INSIGHTS. You should see something similar to the following. If not, please make sure that you have selected the right Helm version and Kubernetes cluster in the settings.<\/li>\n<\/ul>\n<figure id=\"attachment_17814\" aria-describedby=\"caption-attachment-17814\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart.png\"><img class=\"size-medium wp-image-17814\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart-300x58.png\" alt=\"view-helm-chart\" width=\"300\" height=\"58\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart-300x58.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart-1024x198.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart-768x149.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart-1536x298.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart-20x4.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/view-helm-chart.png 1600w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-17814\" class=\"wp-caption-text\">View the Helm Chart within the Helm Releases section in your account<\/figcaption><\/figure>\n<h3>Summary<\/h3>\n<p>In this tutorial, we have looked at Helm hooks, what they are used for, the different types of hook annotations, and finally, set-up an example project to use the pre-install and post-install hook. If you have followed all steps, you have a project up and running in your Codefresh pipeline that uses Helm to manage Kubernetes resources.<\/p>\n<p>Please let us know in the comments whether this tutorial was helpful, you have any questions, suggestions, or useful links for the community to learn more about Helm hooks.<\/p>\n<p>New to Codefresh? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=helmhooks\">Create Your Free Account today<\/a>!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"17868\"\/>","protected":false},"excerpt":{"rendered":"<p>When getting started with Kubernetes and Helm, the process across the release life cycle can feel like a black-box; having to follow debugging processes to understand what is going on behind the scenes. Helm hooks can help with that. This post provides an overview of: Helm hooks, why and how they are used; An example &hellip; <a href=\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/\">Read more<\/a><\/p>\n","protected":false},"author":82,"featured_media":17816,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2367,5467,1657,6],"tags":[14,44,994,5510,5512,5513,5514,5515],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Tutorial: Using Helm Hooks in Your Codefresh Pipeline<\/title>\n<meta name=\"description\" content=\"In this blog you will learn what are Helm hooks and how you can use them in your Codefresh pipeline.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Tutorial: Using Helm Hooks in Your Codefresh Pipeline\" \/>\n<meta property=\"og:description\" content=\"In this blog you will learn what are Helm hooks and how you can use them in your Codefresh pipeline.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2020-10-29T14:44:05+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-06T15:52:06+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1500\" \/>\n\t<meta property=\"og:image:height\" content=\"750\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@urlichsanais\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Anais Urlichs\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"11 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png\",\"width\":1500,\"height\":750,\"caption\":\"blog-header\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#webpage\",\"url\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/\",\"name\":\"Tutorial: Using Helm Hooks in Your Codefresh Pipeline\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#primaryimage\"},\"datePublished\":\"2020-10-29T14:44:05+00:00\",\"dateModified\":\"2022-01-06T15:52:06+00:00\",\"description\":\"In this blog you will learn what are Helm hooks and how you can use them in your Codefresh pipeline.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Tutorial: Using Helm Hooks in Your Codefresh Pipeline\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487\"},\"headline\":\"Tutorial: Using Helm Hooks in Your Codefresh Pipeline\",\"datePublished\":\"2020-10-29T14:44:05+00:00\",\"dateModified\":\"2022-01-06T15:52:06+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#webpage\"},\"wordCount\":1933,\"commentCount\":1,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png\",\"keywords\":[\"docker\",\"Kubernetes\",\"helm\",\"codefresh pipeline\",\"Helm Chart\",\"Helm Hook\",\"Helm Annotations\",\"tutorial\"],\"articleSection\":[\"Helm Tutorials\",\"Devops\",\"Kubernetes Tutorials\",\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487\",\"name\":\"Anais Urlichs\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g\",\"caption\":\"Anais Urlichs\"},\"description\":\"Ana\u00efs is a Developer Evangelist at Codefresh, the modern, fast, and powerful CI\/CD &amp; GitOps automation platform that streamlines your pipelines. When she is not advocating DevOps best practices, she runs her own YouTube Channel centered around Kubernetes. Before Codefresh, she worked in the blockchain space, contributing to Community Management and Developer Relations of open source projects. Her passion lies in making tools and projects more accessible to developers and community members.\",\"sameAs\":[\"https:\/\/twitter.com\/urlichsanais\"],\"url\":\"https:\/\/codefresh.io\/author\/anais-codefresh\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Tutorial: Using Helm Hooks in Your Codefresh Pipeline","description":"In this blog you will learn what are Helm hooks and how you can use them in your Codefresh pipeline.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/","og_locale":"en_US","og_type":"article","og_title":"Tutorial: Using Helm Hooks in Your Codefresh Pipeline","og_description":"In this blog you will learn what are Helm hooks and how you can use them in your Codefresh pipeline.","og_url":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2020-10-29T14:44:05+00:00","article_modified_time":"2022-01-06T15:52:06+00:00","og_image":[{"width":1500,"height":750,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@urlichsanais","twitter_site":"@codefresh","twitter_misc":{"Written by":"Anais Urlichs","Est. reading time":"11 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png","width":1500,"height":750,"caption":"blog-header"},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#webpage","url":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/","name":"Tutorial: Using Helm Hooks in Your Codefresh Pipeline","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#primaryimage"},"datePublished":"2020-10-29T14:44:05+00:00","dateModified":"2022-01-06T15:52:06+00:00","description":"In this blog you will learn what are Helm hooks and how you can use them in your Codefresh pipeline.","breadcrumb":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Tutorial: Using Helm Hooks in Your Codefresh Pipeline"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487"},"headline":"Tutorial: Using Helm Hooks in Your Codefresh Pipeline","datePublished":"2020-10-29T14:44:05+00:00","dateModified":"2022-01-06T15:52:06+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#webpage"},"wordCount":1933,"commentCount":1,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/10\/blog-background.png","keywords":["docker","Kubernetes","helm","codefresh pipeline","Helm Chart","Helm Hook","Helm Annotations","tutorial"],"articleSection":["Helm Tutorials","Devops","Kubernetes Tutorials","How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/helm-tutorial\/helm-hooks\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487","name":"Anais Urlichs","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g","caption":"Anais Urlichs"},"description":"Ana\u00efs is a Developer Evangelist at Codefresh, the modern, fast, and powerful CI\/CD &amp; GitOps automation platform that streamlines your pipelines. When she is not advocating DevOps best practices, she runs her own YouTube Channel centered around Kubernetes. Before Codefresh, she worked in the blockchain space, contributing to Community Management and Developer Relations of open source projects. Her passion lies in making tools and projects more accessible to developers and community members.","sameAs":["https:\/\/twitter.com\/urlichsanais"],"url":"https:\/\/codefresh.io\/author\/anais-codefresh\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/17868"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/82"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=17868"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/17868\/revisions"}],"predecessor-version":[{"id":20945,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/17868\/revisions\/20945"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/17816"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=17868"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=17868"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=17868"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}