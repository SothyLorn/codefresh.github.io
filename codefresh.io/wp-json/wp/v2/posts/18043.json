{"id":18043,"date":"2020-11-15T01:55:52","date_gmt":"2020-11-15T09:55:52","guid":{"rendered":"https:\/\/codefresh.io\/?p=18043"},"modified":"2021-04-19T03:04:27","modified_gmt":"2021-04-19T11:04:27","slug":"vision-gitops-2-0","status":"publish","type":"post","link":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/","title":{"rendered":"A vision for GitOps 2.0"},"content":{"rendered":"<p>In <a href=\"https:\/\/codefresh.io\/devops\/pains-gitops-1-0\/\">our previous article<\/a>, we explained some of the issues we see with the current generation of GitOps tools (which we call GitOps 1.0). In this article, we will talk about the solution to those issues and what we expect from GitOps 2.0 &#8211; the next generation of GitOps tooling.<\/p>\n<h2>Visibility into the whole software lifecycle<\/h2>\n<p>The current generation of GitOps tools focuses only on the deployment part of an application artifact. The full software life cycle includes several other tasks until that point that deals with the packaging of the artifact, the unit tests, security scanning, etc. And even post-deployment there are several actions (such as running smoke tests) that are not covered by today&#8217;s GitOps tools.<\/p>\n<p>This means that if you decide to adopt GitOps, you already need to have an existing CI setup which works effectively and produces the artifacts that your GitOps tool will use. This approach works well for small setups, but having to look in two different places (your CI system for the artifact and your GitOps solution for the deployment) does not scale well for large organizations with multiple applications.<\/p>\n<p>Ideally, you would want a single deployment platform that follows the full journey of each code change, from commit to deployment. This way you will have full traceability on each production change and can also easily answer critical DevOps metrics such as lead time (the time it takes from a commit to reach production).<\/p>\n<h2>Observability and business metrics<\/h2>\n<p>As an extension to the previous point, we believe that GitOps is a process that affects not just developers\/operators but also the business stakeholders (i.e. product owners and project managers). Gaining visibility into the full software lifecycle is vital for everyone involved in software delivery and not just those who handle source code.<\/p>\n<p>As we explained in the <a href=\"https:\/\/codefresh.io\/devops\/pains-gitops-1-0\/\">GitOps 1.0 article<\/a>, some of the most important questions a software team should consider are::<\/p>\n<ul>\n<li>Does our production environment contain feature X?<\/li>\n<li>Has feature X cleared our staging environment?<\/li>\n<li>Are bugs X, Y only present in staging or also in production?<\/li>\n<li>What percentage of deployments to environment X were successful and what had to be rolled back?<\/li>\n<li>How many features exist in environment X but are not in environment Y yet?<\/li>\n<\/ul>\n<p>These questions cannot be easily answered by GitOps tools today (in fact not even traditional non-GitOps deployment platforms can answer them). Having a GitOps solution in place that not only cares about Git hashes but also offers full visibility on the high-level metrics of each deployment will allow all stakeholders to monitor the deployment process and gain insights on what happens with each environment.<\/p>\n<p>A very big gap today is the discrepancy between source code changes (i.e. Git commits) and business level features (i.e. issues from the ticket system such as JIRA) as they are typically handled by different systems. In order to create a correlation between them, developers often have to build additional cruft on top of the deployment platform and ever resort to custom low-level scripts that tie them together.<\/p>\n<p>It is always important to remember that while on the surface a software project might seem like a series of code changes\/commits, the visible value comes from business features that are getting shipped. Current GitOps tools can easily answer what Git hash is now deployed into a cluster, but more useful information like what features are present in that environment (and what features are waiting in another environment) is often missing or considered secondary knowledge.<\/p>\n<p>Additionally, some of <a href=\"https:\/\/cloud.google.com\/blog\/products\/devops-sre\/using-the-four-keys-to-measure-your-devops-performance\">the classic DevOps metrics<\/a> are very hard to monitor with current GitOps tools. Especially the lead time (time it takes for a commit to reach production) cannot be measured easily if your deployment is handled by multiple tools and custom glue code (a very common occurrence in companies of all sizes).<\/p>\n<p>It should be clear that we need dedicated tools for all these questions. Ideally a GitOps solution should have native support for measuring and storing historical data for:<\/p>\n<ul>\n<li>Business features implemented in each release<\/li>\n<li>The journey of each software release from start to finish<\/li>\n<li>Correlation between git hashes, features, rollbacks and environments<\/li>\n<li>Several deployment metrics (i.e. lead time)<\/li>\n<\/ul>\n<p>Right now it is very hard to get all these features in a single overview.<\/p>\n<h2>Promotion among different environments<\/h2>\n<p>Promoting a released artifact between different environments is arguably the biggest challenge with GitOps tools right now. The model of using a Pull request which triggers a deployment once it is merged works great for a single environment but breaks completely when it comes to different environments.<\/p>\n<p>Promotion of a release can take many forms, such as a linear progression to increasingly more critical environments (such as dev -&gt; qa -&gt; staging -&gt; production) or as a parallel deployment to equally significant but slightly different environments (e.g. deploying a release to different geolocations). Neither scenario is covered sufficiently today by the current GitOps tools.<br \/>\nPromotion between environments should be considered an integral part of any deployment solution. In the case of GitOps tooling, we can handle the promotion mechanism in a different number of ways, such as introducing an automation mechanism for Pull Requests (more on this in the next section) or even creating a higher-level abstraction layer for specifying different environments.<\/p>\n<p>The end result should be that for any GitOps project a project stakeholder:<\/p>\n<ul>\n<li>clearly sees the releases present on a current environments (including temporary dynamic environments)<\/li>\n<li>can easily move a release to the next environment (e.g. staging to production)<\/li>\n<li>can easily move a release to a previous environment (e.g. production to QA in order to examine a bug)<\/li>\n<li>has a configuration mechanism in place to define multiple version of the same environment (i.e. for different geographical regions)<\/li>\n<\/ul>\n<p>Promotion of environments should always be possible to automate via a CLI (i.e. a graphical dashboard is not enough for all use cases).<\/p>\n<h2>Achieving Continuous deployment and full Git automation<\/h2>\n<p>As we explained in <a href=\"https:\/\/codefresh.io\/continuous-deployment\/heck-continuous-integration-ci-delivery-cd-deployment-cdp\/\">our CI\/CD\/CDP article<\/a>, Continuous Delivery is the process where each developer commit results in a release candidate that is ready to be sent to production. GitOps and Continuous Delivery are a perfect match, as the Pull Request process dictated by GitOps can function as a quality gate that approves\/rejects the release candidate.<\/p>\n<p>Continuous Deployment is the practice where every commit (that complies with the organization requirements) is automatically sent to production without any human intervention. This is the ultimate form of a deployment pipeline, as it takes manual steps completely out of the equation.<\/p>\n<p>Using Continuous Deployment and GitOps is an open question right now, as a Pull Request is for all intents and purposes a manual process. There is no best practice on how to practice Continuous Deployment using GitOps.<\/p>\n<p>Pull Requests (like all other Git actions) can be fully automated. At the time of writing, there is no GitOps tool that does that. To achieve continuous deployment with GitOps we would need a GitOps solution which not only passively handles the opening and closing of Pull Requests but also opens\/closes Pull Requests on its own in an unattended manner.<\/p>\n<p>Automating Pull Requests might sound like an easy task, but in order to give plenty of visibility on what is happening at any point in time, we need a deployment solution that treats Pull Requests as a first-class citizen, instead of simply responding to Pull Request events like most tools do right now.<\/p>\n<h2>Built-in handling for rollbacks and secrets<\/h2>\n<p>We explained in the first point of this article that current GitOps tools focus only on the deployment part of the release cycle and ignore all other associated tasks. You could argue that this is their primary focus and they don\u2019t have to provide anything else regarding the software lifecycle.<\/p>\n<p>Even if this was true, I consider secret management and automatic rollbacks an integral part of the deployment process. Unfortunately, both areas are currently left as an exercise to the reader if you try to adopt any of the existing GitOps tools.<\/p>\n<p>We need a GitOps solution that handles secrets on its core offering. Secret management is also deeply connected with the problem of multi-environment installations that we already covered. A GitOps solution should not only offer a secure storage mechanism for all secrets, but also a comprehensive way on how to group them according to each environment and how to pass them in the respective cluster.<\/p>\n<p>The underlying mechanism is not that critical. There is a common pattern that if you plan to use GitOps you must also store secrets in Git. I don\u2019t see this as an essential requirement for handling secrets in GitOps if there is a better proposal.<\/p>\n<p>On the topic of rollbacks, the ideal GitOps tool should be able to perform the following:<\/p>\n<ol>\n<li>Deploy the latest Git hash to the cluster<\/li>\n<li>Get information from metrics regarding the success of the deployment<\/li>\n<li>If metrics are ok, mark the deployment as finished<\/li>\n<li>If metrics show failures, then <strong>automatically <\/strong>rollback to the previous version<\/li>\n<li>Update the Git repository with the new information so that the latest Git commit matches again what is deployed in the cluster.<\/li>\n<\/ol>\n<p>Today to achieve this workflow, you need to write custom glue code in addition to adopting a GitOps tool.<\/p>\n<h2>Running GitOps at scale<\/h2>\n<p>The last critical component of our vision for GitOps 2.0 is running GitOps at scale. Working with a small number of environments might seem easy, but in several real-world scenarios, the number of pipelines, projects, deployments, and environment configuration within a company can quickly get out of control.<\/p>\n<p>Scalability is important not only in regards to technical capacity but also in regards to visibility and observability as explained in the previous sections. Different environments will exist at different sync states, with multiple pull requests in flight and with multiple business features getting shipped.<\/p>\n<p>We need a way to present all this information in both high-level and low-level representations. On one hand, we need a way to provide a bird\u2019s eye view of the whole company\/department deployments to all stakeholders who need an easy and understandable dashboard for monitoring deployments along with their associated metrics.<\/p>\n<p>On the other hand, anybody should be able to drill down and look at a specific deployment and the business value it contains, along with the exact status of each business feature it expects.<\/p>\n<h2>Making the vision for GitOps 2.0 a reality<\/h2>\n<p>In this article, we described a vision for the next generation of GitOps tools. We have also described extensively the <a href=\"https:\/\/codefresh.io\/devops\/pains-gitops-1-0\/\">gaps of the existing GitOps tools<\/a> in our previous article.<\/p>\n<p>At Codefresh, we believe that this vision is the next big thing for deployments and this is why we think it <a href=\"https:\/\/codefresh.io\/devops\/launching-future-devops-gitops-2-0\/\">deserves the name of GitOps 2.0<\/a>.<\/p>\n<p>As you might imagine we have already started working on an exciting new platform that will fulfill all these requirements and will expand the capabilities and focus of GitOps tools.<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"18043\"\/>","protected":false},"excerpt":{"rendered":"<p>In our previous article, we explained some of the issues we see with the current generation of GitOps tools (which we call GitOps 1.0). In this article, we will talk about the solution to those issues and what we expect from GitOps 2.0 &#8211; the next generation of GitOps tooling. Visibility into the whole software &hellip; <a href=\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":18026,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5467,5703],"tags":[4322],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>A vision for GitOps 2.0 | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"A vision for GitOps 2.0\" \/>\n<meta property=\"og:description\" content=\"In our previous article, we explained some of the issues we see with the current generation of GitOps tools (which we call GitOps 1.0). In this article, we will talk about the solution to those issues and what we expect from GitOps 2.0 &#8211; the next generation of GitOps tooling. Visibility into the whole software &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-15T09:55:52+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-19T11:04:27+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1222\" \/>\n\t<meta property=\"og:image:height\" content=\"406\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"9 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\",\"width\":1222,\"height\":406},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#webpage\",\"url\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/\",\"name\":\"A vision for GitOps 2.0 | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#primaryimage\"},\"datePublished\":\"2020-11-15T09:55:52+00:00\",\"dateModified\":\"2021-04-19T11:04:27+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"A vision for GitOps 2.0\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"A vision for GitOps 2.0\",\"datePublished\":\"2020-11-15T09:55:52+00:00\",\"dateModified\":\"2021-04-19T11:04:27+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#webpage\"},\"wordCount\":1829,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\",\"keywords\":[\"GitOps\"],\"articleSection\":[\"Devops\",\"GitOps\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"A vision for GitOps 2.0 | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/","og_locale":"en_US","og_type":"article","og_title":"A vision for GitOps 2.0","og_description":"In our previous article, we explained some of the issues we see with the current generation of GitOps tools (which we call GitOps 1.0). In this article, we will talk about the solution to those issues and what we expect from GitOps 2.0 &#8211; the next generation of GitOps tooling. Visibility into the whole software &hellip; Read more","og_url":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2020-11-15T09:55:52+00:00","article_modified_time":"2021-04-19T11:04:27+00:00","og_image":[{"width":1222,"height":406,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"9 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","width":1222,"height":406},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#webpage","url":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/","name":"A vision for GitOps 2.0 | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#primaryimage"},"datePublished":"2020-11-15T09:55:52+00:00","dateModified":"2021-04-19T11:04:27+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"A vision for GitOps 2.0"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"A vision for GitOps 2.0","datePublished":"2020-11-15T09:55:52+00:00","dateModified":"2021-04-19T11:04:27+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#webpage"},"wordCount":1829,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","keywords":["GitOps"],"articleSection":["Devops","GitOps"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/about-gitops\/vision-gitops-2-0\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18043"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=18043"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18043\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/18026"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=18043"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=18043"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=18043"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}