{"id":18046,"date":"2020-11-15T02:42:17","date_gmt":"2020-11-15T10:42:17","guid":{"rendered":"https:\/\/codefresh.io\/?p=18046"},"modified":"2021-04-19T03:04:49","modified_gmt":"2021-04-19T11:04:49","slug":"entering-gitops-2-0","status":"publish","type":"post","link":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/","title":{"rendered":"Entering GitOps 2.0 with Codefresh and ArgoCD"},"content":{"rendered":"<p>In our previous article, we explained the <a href=\"https:\/\/codefresh.io\/devops\/vision-gitops-2-0\/\">vision behind GitOps 2.0<\/a> and the features we expect to be covered by GitOps 2.0 tools.<\/p>\n<p>In this article, we will see how the <a href=\"https:\/\/codefresh.io\/devops\/launching-future-devops-gitops-2-0\/\">new Codefresh GitOps dashboard<\/a> is the first step towards this vision and more specifically in the area of observability and traceability.<\/p>\n<h2>Getting visibility into deployments<\/h2>\n<p>Deploying a new release into production is an important milestone for all project stakeholders. The developers write the code, the operators deploy the new artifact and product owners can finally mark a feature as \u201cshipped\u201d.<\/p>\n<p>Current deployment tools however do not give the same attention to the needs of all team members that take part in a release. Most deployment tools today fall under the following categories:<\/p>\n<ol>\n<li>Really low-level tools that are mostly useful to developers. They are full of build logs, Git hashes, and deployments events that mean nothing to product owners or business analysts.<\/li>\n<li>High-level \u201cdeployment\u201d tools that are actually a fancy UI layer on top of a low-level tool exposing only a minimal amount of information. These tools treat a deployment as a black box (as the actual deployment process is handled behind the scenes from another entity) and never give enough information on what went wrong if a deployment happened.<\/li>\n<\/ol>\n<p>The reason behind this dichotomy is probably that each role needs access to different information. This might be true in a historical context but goes against the ideas and principles of DevOps (bringing all team members together).<\/p>\n<p>Ideally, deploying a release should be so easy to perform\/monitor\/rollback that any team member can handle a deployment event and still have access to all critical information such as which Git commit was deployed and what new features are now available.<\/p>\n<h2>Deployment value comes from features and not Git hashes<\/h2>\n<p>In <a href=\"https:\/\/codefresh.io\/devops\/launching-future-devops-gitops-2-0\/\">the GitOps 2.0 article<\/a>, we outlined the gap that exists today between the low-level deployment information (i.e. the Git hash) and the value it brings after a deployment (i.e the actual features).<\/p>\n<p>Product value is not measured in Git hashes, but instead in the number and significance of new features that are deployed to production. New features are typically recorded in an issue management system (e.g. JIRA) and have their own lifecycle according to what the organization desires.<\/p>\n<p>As a first step towards the vision of GitOps, we have decided to address this information gap and solve the observability problem by combining these two kinds of information (git hashes and features) in a single cohesive view.<\/p>\n<p>You can now use the new Codefresh dashboard and correlate extra information on top of a single Git hash.<\/p>\n<h2>The new Codefresh GitOps dashboard<\/h2>\n<p>Our new GitOps dashboard provides a single pane where instead of looking for simple Git hashes, you can now see:<\/p>\n<ul>\n<li>The feature(s) implemented by this Git hash (i.e. JIRA issues)<\/li>\n<li>The Pull Request that was created for this feature<\/li>\n<li>The committer of the feature<\/li>\n<li>The timeline of deployment for this feature and if the deployment was successful or not<\/li>\n<li>The pipeline(s) that were used for building the container image and deploying it<\/li>\n<li>The Kubernetes images that were affected<\/li>\n<li>The Kubernetes services\/deployments that were affected<\/li>\n<\/ul>\n<figure id=\"attachment_18047\" aria-describedby=\"caption-attachment-18047\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1.png\"><img class=\"size-large wp-image-18047\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1-1024x765.png\" alt=\"Codefresh GitOps dashboard\" width=\"1024\" height=\"765\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1-1024x765.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1-300x224.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1-768x574.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1-1536x1148.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1-20x15.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/gitops-dashboard-1.png 1921w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-18047\" class=\"wp-caption-text\">Codefresh GitOps dashboard<\/figcaption><\/figure>\n<p>With our new GitOps 2.0 dashboard, we are addressing the visibility and observability problems that plague existing GitOps tools.<\/p>\n<p>Now you can finally get an overview of GitOps deployments in the context of features instead of just Git hashes. In addition, you can rollback to a specific feature (and\/or pull request) in addition to a Git hash.<\/p>\n<p>Using the dashboard you will be able to answer questions such as:<\/p>\n<ul>\n<li>Which feature was implemented by Pull Request 432?<\/li>\n<li>When was JIRA issue 5612 deployed in our QA environment?<\/li>\n<li>Is JIRA issue 2356 deployed in production now?<\/li>\n<li>Can we rollback the staging environment to just before JIRA-issue 2167 was shipped?<\/li>\n<li>Which pipelines were used for handling Pull Request number 156?<\/li>\n<li>Who pushed to our production (by committing into Git) last Friday afternoon?<\/li>\n<li>What JIRA features entered our staging environment this morning?<\/li>\n<li>What container images were rebuilt as a result of merging Pull Request 475?<\/li>\n<li>Which Kubernetes services were affected by JIRA issue 5923?<\/li>\n<\/ul>\n<p>These are just a few examples of the capabilities you gain with the new GitOps 2.0 dashboard in its initial release. We have several other enhancements on our roadmap and we also welcome any additional feedback that you have regarding the structure and functionality of the dashboard.<\/p>\n<h2>Argo CD Integration<\/h2>\n<p>Instead of re-inventing the wheel, the new GitOps dashboard is powered by Argo CD, the popular deployment solution that can manage Kubernetes applications using a pull mechanism.<\/p>\n<p>To take advantage of the Argo integration, you simply install our agent in the same namespace as the Argo services. Installation is as simple as running a single command via the Codefresh CLI:<\/p>\n<figure id=\"attachment_18048\" aria-describedby=\"caption-attachment-18048\" style=\"width: 690px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/installation.png\"><img class=\"size-full wp-image-18048\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/installation.png\" alt=\"Argo agent installation\" width=\"690\" height=\"334\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/installation.png 690w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/installation-300x145.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/installation-20x10.png 20w\" sizes=\"(max-width: 690px) 100vw, 690px\" \/><\/a><figcaption id=\"caption-attachment-18048\" class=\"wp-caption-text\">Argo agent installation<\/figcaption><\/figure>\n<p>Once the agent is installed, Codefresh has two-way communication with Argo CD via its API. For example, Codefresh will automatically mark an application as out-of-sync if the cluster configuration no longer matches the Git repository, which holds the manifests file that describes the application.<\/p>\n<figure id=\"attachment_18049\" aria-describedby=\"caption-attachment-18049\" style=\"width: 672px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/out-of-sync.png\"><img class=\"size-full wp-image-18049\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/out-of-sync.png\" alt=\"Out of sync\" width=\"672\" height=\"198\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/out-of-sync.png 672w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/out-of-sync-300x88.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/out-of-sync-20x6.png 20w\" sizes=\"(max-width: 672px) 100vw, 672px\" \/><\/a><figcaption id=\"caption-attachment-18049\" class=\"wp-caption-text\">Out of sync<\/figcaption><\/figure>\n<p>With the Argo CD integration in place, you can also define GitOps application right inside the Codefresh UI, with the same options available to Argo CD<\/p>\n<figure id=\"attachment_18050\" aria-describedby=\"caption-attachment-18050\" style=\"width: 210px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argocd-provision-app.png\"><img class=\"size-medium wp-image-18050\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argocd-provision-app-210x300.png\" alt=\"Provision app\" width=\"210\" height=\"300\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argocd-provision-app-210x300.png 210w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argocd-provision-app-716x1024.png 716w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argocd-provision-app-14x20.png 14w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argocd-provision-app.png 740w\" sizes=\"(max-width: 210px) 100vw, 210px\" \/><\/a><figcaption id=\"caption-attachment-18050\" class=\"wp-caption-text\">Provision app<\/figcaption><\/figure>\n<p>It is important to notice that at all times you can still use the Argo CD user interface in addition to the Codefresh UI.<\/p>\n<figure id=\"attachment_18051\" aria-describedby=\"caption-attachment-18051\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui.png\"><img class=\"size-large wp-image-18051\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui-1024x387.png\" alt=\"Argo CD UI\" width=\"1024\" height=\"387\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui-1024x387.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui-300x114.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui-768x291.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui-20x8.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-ui.png 1443w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-18051\" class=\"wp-caption-text\">Argo CD UI<\/figcaption><\/figure>\n<p>All changes that you do in one place will be mirrored in the other.<\/p>\n<h2>CI\/CD pipelines with Codefresh<\/h2>\n<p>With the Integration of Codefresh and Argo, you now have a full CI\/CD solution at your disposal.<br \/>\nArgo CD is a great deployment tool on its own, but it can only handle the last step in a pipeline created for GitOps deployment (the sync part).<\/p>\n<p>A full deployment platform also needs the ability to compile applications, run unit tests, perform security scans, etc. These capabilities are out of scope for Argo, but are perfectly possible with Codefresh.<\/p>\n<p>On the other hand, Codefresh already has strong CD foundations, but they are based on the push-model (deploying Helm packages on a cluster). With the addition of Argo, our customers can now create GitOps pipelines if they prefer.<\/p>\n<p>This means that one can now create complete GitOps pipelines that are not possible by using Argo on its own.<\/p>\n<p>For example, a very popular pattern for deployments is to have pre-sync and post-sync steps in a deployment pipeline.<\/p>\n<figure id=\"attachment_18052\" aria-describedby=\"caption-attachment-18052\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline.png\"><img class=\"size-large wp-image-18052\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline-1024x564.png\" alt=\"Sync pipeline\" width=\"1024\" height=\"564\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline-1024x564.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline-300x165.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline-768x423.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline-1536x847.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline-20x11.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/argo-sync-pipeline.png 1669w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-18052\" class=\"wp-caption-text\">Sync pipeline<\/figcaption><\/figure>\n<p>A possible scenario for a pre-sync step is to send a message to your monitoring solution that a deployment is about to take place. This way your monitor solution can place a \u201cmarker\u201d on your time-based metrics to evaluate the health of the deployment (and possibly rollback automatically if the metrics are not healthy).<\/p>\n<p>A possible scenario for a post-sync step is to perform smoke testing on the deployment that was just synced. Codefresh has great support for both <a href=\"https:\/\/codefresh.io\/docs\/docs\/testing\/unit-tests\/\">unit <\/a>and <a href=\"https:\/\/codefresh.io\/docs\/docs\/testing\/integration-tests\/\">integration tests<\/a> both of which require the capabilities of a full CI\/CD platform.<\/p>\n<p>As a more advanced scenario, Codefresh can actually orchestrate a single deployment pipeline that follows the GitOps paradigm as it is possible to automatically perform a Git commit inside a pipeline (as well as a replacement on the manifests).<\/p>\n<figure id=\"attachment_18053\" aria-describedby=\"caption-attachment-18053\" style=\"width: 1412px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline.png\"><img class=\"size-full wp-image-18053\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline.png\" alt=\"Full GitOps pipeline\" width=\"1412\" height=\"634\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline.png 1412w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline-300x135.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline-1024x460.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline-768x345.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/ci-cd-pipeline-20x9.png 20w\" sizes=\"(max-width: 1412px) 100vw, 1412px\" \/><\/a><figcaption id=\"caption-attachment-18053\" class=\"wp-caption-text\">Full GitOps pipeline<\/figcaption><\/figure>\n<p>The example above is a single pipeline that:<\/p>\n<ol>\n<li>Checks out the source code of the application<\/li>\n<li>Builds a Docker image<\/li>\n<li>Records the information for the current pull request what JIRA issue is solved<\/li>\n<li>Creates a commit on the second git repository that holds only the Kubernetes manifests.<\/li>\n<\/ol>\n<p>Of course, a pipeline like this can be easily enriched with additional steps for testing, linting, security scanning, etc.<\/p>\n<p>It is important to note that the existing CD capabilities of Codefresh (and all dashboards such <a href=\"https:\/\/codefresh.io\/helm-tutorial\/kanban-promotion-boards\/\">as the Helm promotion one<\/a>) are still available to companies that wish to continue using them even if you don\u2019t want to follow the GitOps paradigm.<\/p>\n<h2>Getting started with GitOps 2.0<\/h2>\n<p>With the marriage between Argo and Codefresh, you get <a href=\"https:\/\/codefresh.io\/devops\/launching-future-devops-gitops-2-0\/\">a full CI\/CD platform<\/a> that combines the ideas of GitOps, along with an extensible model of pipeline building that can match any possible deployment scenario.<\/p>\n<p>To get started you can now open a <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=gitops2argo\">free account with Codefresh<\/a> and then follow our <a href=\"https:\/\/codefresh.io\/docs\/docs\/ci-cd-guides\/gitops-deployments\/\">documentation guide for GitOps deployments<\/a>.<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"18046\"\/>","protected":false},"excerpt":{"rendered":"<p>In our previous article, we explained the vision behind GitOps 2.0 and the features we expect to be covered by GitOps 2.0 tools. In this article, we will see how the new Codefresh GitOps dashboard is the first step towards this vision and more specifically in the area of observability and traceability. Getting visibility into &hellip; <a href=\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":18026,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5703],"tags":[53,59,4322,5507],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Entering GitOps 2.0 with Codefresh and ArgoCD | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Entering GitOps 2.0 with Codefresh and ArgoCD\" \/>\n<meta property=\"og:description\" content=\"In our previous article, we explained the vision behind GitOps 2.0 and the features we expect to be covered by GitOps 2.0 tools. In this article, we will see how the new Codefresh GitOps dashboard is the first step towards this vision and more specifically in the area of observability and traceability. Getting visibility into &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-15T10:42:17+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-19T11:04:49+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1222\" \/>\n\t<meta property=\"og:image:height\" content=\"406\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\",\"width\":1222,\"height\":406},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#webpage\",\"url\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/\",\"name\":\"Entering GitOps 2.0 with Codefresh and ArgoCD | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#primaryimage\"},\"datePublished\":\"2020-11-15T10:42:17+00:00\",\"dateModified\":\"2021-04-19T11:04:49+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Entering GitOps 2.0 with Codefresh and ArgoCD\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Entering GitOps 2.0 with Codefresh and ArgoCD\",\"datePublished\":\"2020-11-15T10:42:17+00:00\",\"dateModified\":\"2021-04-19T11:04:49+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#webpage\"},\"wordCount\":1436,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png\",\"keywords\":[\"CI\/CD\",\"codefresh\",\"GitOps\",\"ArgoCD\"],\"articleSection\":[\"GitOps\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Entering GitOps 2.0 with Codefresh and ArgoCD | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/","og_locale":"en_US","og_type":"article","og_title":"Entering GitOps 2.0 with Codefresh and ArgoCD","og_description":"In our previous article, we explained the vision behind GitOps 2.0 and the features we expect to be covered by GitOps 2.0 tools. In this article, we will see how the new Codefresh GitOps dashboard is the first step towards this vision and more specifically in the area of observability and traceability. Getting visibility into &hellip; Read more","og_url":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2020-11-15T10:42:17+00:00","article_modified_time":"2021-04-19T11:04:49+00:00","og_image":[{"width":1222,"height":406,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","width":1222,"height":406},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#webpage","url":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/","name":"Entering GitOps 2.0 with Codefresh and ArgoCD | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#primaryimage"},"datePublished":"2020-11-15T10:42:17+00:00","dateModified":"2021-04-19T11:04:49+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Entering GitOps 2.0 with Codefresh and ArgoCD"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Entering GitOps 2.0 with Codefresh and ArgoCD","datePublished":"2020-11-15T10:42:17+00:00","dateModified":"2021-04-19T11:04:49+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#webpage"},"wordCount":1436,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/GitOps-blog.png","keywords":["CI\/CD","codefresh","GitOps","ArgoCD"],"articleSection":["GitOps"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/about-gitops\/entering-gitops-2-0\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18046"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=18046"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18046\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/18026"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=18046"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=18046"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=18046"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}