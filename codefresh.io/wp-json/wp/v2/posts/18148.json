{"id":18148,"date":"2020-12-07T10:07:40","date_gmt":"2020-12-07T18:07:40","guid":{"rendered":"https:\/\/codefresh.io\/?p=18148"},"modified":"2022-03-01T17:09:23","modified_gmt":"2022-03-01T17:09:23","slug":"designing-complex-components-figma-build-record","status":"publish","type":"post","link":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/","title":{"rendered":"Designing Complex Components in Figma: Our Build Record"},"content":{"rendered":"<style type=\"text\/css\">.entry-content img, .entry-content figure {max-width: 100% !important;}<\/style>\n<p><a href=\"https:\/\/www.figma.com\/\">Figma<\/a> is a web-based graphic editor and prototyping tool that is commonly used for UI design. Independent of the size of your organization, it is considered good practice to use design components. This post provides a case study on how we utilize Figma components to manage different states in the Codefresh UI.<\/p>\n<p>Note that this blog post was written before the release of variants and the new auto-layout features. We will update the blog after we update our style guide with these new amazing features.<\/p>\n<h2>Our Build Record<\/h2>\n<p>One of the most complex design <a href=\"https:\/\/help.figma.com\/hc\/en-us\/articles\/360038662654-Guide-to-Components-in-Figma\">components<\/a> in the Codefresh UI is the build record header. There are simply so many variations to each part of it that you could easily lose count trying to connect all the records.<\/p>\n<p>Let me show you how we recently redesigned the header of our build record in Figma. To make it easier to view and modify the different parts, we broke it down into different components.<\/p>\n<figure id=\"attachment_18149\" aria-describedby=\"caption-attachment-18149\" style=\"width: 1232px\" class=\"wp-caption aligncenter\"><img class=\"wp-image-18149 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build-record-one.png\" alt=\"build-record-one\" width=\"1232\" height=\"96\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build-record-one.png 1232w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build-record-one-300x23.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build-record-one-1024x80.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build-record-one-768x60.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build-record-one-20x2.png 20w\" sizes=\"(max-width: 1232px) 100vw, 1232px\" \/><figcaption id=\"caption-attachment-18149\" class=\"wp-caption-text\">Build record overview<\/figcaption><\/figure>\n<p>Let\u2019s start with the top row. This is the event information, which changes for each Git event.<\/p>\n<figure id=\"attachment_18168\" aria-describedby=\"caption-attachment-18168\" style=\"width: 994px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build.gif\"><img class=\"wp-image-18168 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/build.gif\" alt=\"build-record-highlight\" width=\"994\" height=\"99\" \/><\/a><figcaption id=\"caption-attachment-18168\" class=\"wp-caption-text\">Highlighted build record<\/figcaption><\/figure>\n<p>The fields within the header change in accordance with different Git events. We created a component for each section so that we can easily swap them out depending on which Git event we want to demonstrate.<\/p>\n<p>As you can see, each Git event is composed of similar fields with slight variations.<\/p>\n<figure id=\"attachment_18153\" aria-describedby=\"caption-attachment-18153\" style=\"width: 218px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/git-event-fields.png\"><img class=\"wp-image-18153 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/git-event-fields.png\" alt=\"git-event-fields\" width=\"218\" height=\"163\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/git-event-fields.png 218w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/git-event-fields-20x15.png 20w\" sizes=\"(max-width: 218px) 100vw, 218px\" \/><\/a><figcaption id=\"caption-attachment-18153\" class=\"wp-caption-text\">Git Event Field Example<\/figcaption><\/figure>\n<p>The fields differ between:<\/p>\n<ul>\n<li>Plain text<\/li>\n<li>Link<\/li>\n<li>Icons<\/li>\n<li>Avatars<\/li>\n<li>And combinations of the above<\/li>\n<\/ul>\n<p>We call this component a stat item and we use it quite frequently. Here\u2019s how it looks in our design system:<\/p>\n<figure id=\"attachment_18154\" aria-describedby=\"caption-attachment-18154\" style=\"width: 930px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/design-component.png\"><img class=\"wp-image-18154 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/design-component.png\" alt=\"design-component\" width=\"930\" height=\"487\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/design-component.png 930w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/design-component-300x157.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/design-component-768x402.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/design-component-20x10.png 20w\" sizes=\"(max-width: 930px) 100vw, 930px\" \/><\/a><figcaption id=\"caption-attachment-18154\" class=\"wp-caption-text\">Design Components Overview within the Design System<\/figcaption><\/figure>\n<p>We differentiate between two versions; the first one has a label included, and the other one does not. Additionally, there are several variations of the fields displayed. This allows us to standardize components without duplicating them.<\/p>\n<p>In comparison, we could have just created one version with the label and swapped out the internal instance for that stat item. However, this would easily become difficult to follow. Providing two versions is more intuitive to use and utilize in our design system.<\/p>\n<p>For instance, the stat items are nested in a frame with a layout grid:<\/p>\n<figure id=\"attachment_18155\" aria-describedby=\"caption-attachment-18155\" style=\"width: 1207px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid.png\"><img class=\"wp-image-18155 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid.png\" alt=\"layout-grid\" width=\"1207\" height=\"81\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid.png 1207w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid-300x20.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid-1024x69.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid-768x52.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/layout-grid-20x1.png 20w\" sizes=\"(max-width: 1207px) 100vw, 1207px\" \/><\/a><figcaption id=\"caption-attachment-18155\" class=\"wp-caption-text\">Grid Layout<\/figcaption><\/figure>\n<p>The design specifies a grid of six columns, with a gutter of 20 pixels.<\/p>\n<figure id=\"attachment_18156\" aria-describedby=\"caption-attachment-18156\" style=\"width: 237px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/specify-grid-column.png\"><img class=\"wp-image-18156 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/specify-grid-column.png\" alt=\"specify-grid-column\" width=\"237\" height=\"267\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/specify-grid-column.png 237w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/specify-grid-column-18x20.png 18w\" sizes=\"(max-width: 237px) 100vw, 237px\" \/><\/a><figcaption id=\"caption-attachment-18156\" class=\"wp-caption-text\">Specify Grid Column<\/figcaption><\/figure>\n<p>This enables the element to be responsive while maintaining spacing between each item.<\/p>\n<p>In order to achieve this, turn on the layout grid and place each item on the left edge of the grid column. Next, set the alignment for each item to the left.<\/p>\n<figure id=\"attachment_18157\" aria-describedby=\"caption-attachment-18157\" style=\"width: 1580px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/alignment.gif\"><img class=\"wp-image-18157 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/alignment.gif\" alt=\"alignment-gif\" width=\"1580\" height=\"126\" \/><\/a><figcaption id=\"caption-attachment-18157\" class=\"wp-caption-text\">Alignment between components<\/figcaption><\/figure>\n<p>On the second row, going from left to right, we have:<\/p>\n<ol>\n<li>A status indicator<\/li>\n<li>Status details<\/li>\n<li>Additional information with icons<\/li>\n<li>Memory and log information<\/li>\n<li>Action buttons<\/li>\n<\/ol>\n<p>The status indicator and status detail components have several variations. We created a component for each:<\/p>\n<figure id=\"attachment_18158\" aria-describedby=\"caption-attachment-18158\" style=\"width: 489px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/component-overview.png\"><img class=\"wp-image-18158 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/component-overview.png\" alt=\"component-state-overview\" width=\"489\" height=\"374\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/component-overview.png 489w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/component-overview-300x229.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/component-overview-20x15.png 20w\" sizes=\"(max-width: 489px) 100vw, 489px\" \/><\/a><figcaption id=\"caption-attachment-18158\" class=\"wp-caption-text\">Component State Overview<\/figcaption><\/figure>\n<p>Again, having all states defined as components allows for easy switching between them. Similar results could have been reached using overrides but that would force us to do them each time we want to demonstrate a new component, which easily leads to inconsistencies.<\/p>\n<p>The next section displays additional build info:<\/p>\n<figure id=\"attachment_18159\" aria-describedby=\"caption-attachment-18159\" style=\"width: 810px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/additional-build-info.png\"><img class=\"wp-image-18159 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/additional-build-info.png\" alt=\"additional-build-info\" width=\"810\" height=\"158\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/additional-build-info.png 810w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/additional-build-info-300x59.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/additional-build-info-768x150.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/additional-build-info-20x4.png 20w\" sizes=\"(max-width: 810px) 100vw, 810px\" \/><\/a><figcaption id=\"caption-attachment-18159\" class=\"wp-caption-text\">Additional build info<\/figcaption><\/figure>\n<p>The above is built from individual components called build stat items. An example is provided below:<\/p>\n<figure id=\"attachment_18160\" aria-describedby=\"caption-attachment-18160\" style=\"width: 336px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-one.png\"><img class=\"wp-image-18160 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-one.png\" alt=\"individual-component-one\" width=\"336\" height=\"99\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-one.png 336w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-one-300x88.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-one-20x6.png 20w\" sizes=\"(max-width: 336px) 100vw, 336px\" \/><\/a><figcaption id=\"caption-attachment-18160\" class=\"wp-caption-text\">Individual Component<\/figcaption><\/figure>\n<figure id=\"attachment_18161\" aria-describedby=\"caption-attachment-18161\" style=\"width: 236px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-two.png\"><img class=\"wp-image-18161 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-two.png\" alt=\"individual-component-two\" width=\"236\" height=\"137\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-two.png 236w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/individual-component-two-20x12.png 20w\" sizes=\"(max-width: 236px) 100vw, 236px\" \/><\/a><figcaption id=\"caption-attachment-18161\" class=\"wp-caption-text\">Individual Component Designed<\/figcaption><\/figure>\n<p>All of the above are pretty simple components that include an icon (component instance) and a text layer. They are grouped in an auto-layout frame so that we can remove certain items as they do not all appear at the same time.<\/p>\n<p>This is also nested into an additional auto-layout frame with the horizontal alignment set to right.<\/p>\n<figure id=\"attachment_18162\" aria-describedby=\"caption-attachment-18162\" style=\"width: 234px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/constraints.png\"><img class=\"wp-image-18162 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/constraints.png\" alt=\"constraints\" width=\"234\" height=\"123\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/constraints.png 234w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/11\/constraints-20x11.png 20w\" sizes=\"(max-width: 234px) 100vw, 234px\" \/><\/a><figcaption id=\"caption-attachment-18162\" class=\"wp-caption-text\">Constraints<\/figcaption><\/figure>\n<p>What this achieves is that when you remove an element, all the items shift right, instead of the default left.<\/p>\n<p>The rest of the items are pretty simple. They are additional types of components, all nested inside the auto-layout frame.<\/p>\n<h2>Key takeaways:<\/h2>\n<ol>\n<li>Everything should be a component; this allows you to easily swap out elements and keeps your designs consistent and easy to maintain.<\/li>\n<li>Sometimes it&#8217;s worth grouping several items into additional components if they are logically bundled together.<\/li>\n<li>Autolayout is your friend. Use it often and don\u2019t be afraid to wrap frames into additional frames several layers deep.<\/li>\n<li>Using a layout grid allows you to set up more complex responsive elements.<\/li>\n<\/ol>\n<p>We hope this tutorial was helpful and provided you with useful tips on how you can optimize the use of components within your design system. Please share any feedback and ideas you might have in the comments.<\/p>\n<p>If you would like to see the components in action, <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=figmacomponents\">Create Your Free Codefresh Account NOW<\/a>!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"18148\"\/>","protected":false},"excerpt":{"rendered":"<p>Figma is a web-based graphic editor and prototyping tool that is commonly used for UI design. Independent of the size of your organization, it is considered good practice to use design components. This post provides a case study on how we utilize Figma components to manage different states in the Codefresh UI. Note that this &hellip; <a href=\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/\">Read more<\/a><\/p>\n","protected":false},"author":86,"featured_media":18325,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5550,6],"tags":[59,5551,5552,5553,5554,5555,5556,5557,5558],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Designing Complex Components in Figma: Our Build Record | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Designing Complex Components in Figma: Our Build Record\" \/>\n<meta property=\"og:description\" content=\"Figma is a web-based graphic editor and prototyping tool that is commonly used for UI design. Independent of the size of your organization, it is considered good practice to use design components. This post provides a case study on how we utilize Figma components to manage different states in the Codefresh UI. Note that this &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2020-12-07T18:07:40+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-01T17:09:23+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1640\" \/>\n\t<meta property=\"og:image:height\" content=\"624\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Idan Arbel\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png\",\"width\":1640,\"height\":624},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#webpage\",\"url\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/\",\"name\":\"Designing Complex Components in Figma: Our Build Record | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#primaryimage\"},\"datePublished\":\"2020-12-07T18:07:40+00:00\",\"dateModified\":\"2022-03-01T17:09:23+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Designing Complex Components in Figma: Our Build Record\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/a688711d9ad77313d34176a62f4e4a6b\"},\"headline\":\"Designing Complex Components in Figma: Our Build Record\",\"datePublished\":\"2020-12-07T18:07:40+00:00\",\"dateModified\":\"2022-03-01T17:09:23+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#webpage\"},\"wordCount\":879,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png\",\"keywords\":[\"codefresh\",\"design\",\"UX\",\"UI\",\"user experience\",\"user interface\",\"figma\",\"components\",\"header\"],\"articleSection\":[\"Design\",\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/a688711d9ad77313d34176a62f4e4a6b\",\"name\":\"Idan Arbel\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/2b75ef98901e74a047ea8e3ec2e9ac50?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/2b75ef98901e74a047ea8e3ec2e9ac50?s=96&d=blank&r=g\",\"caption\":\"Idan Arbel\"},\"description\":\"Head of UX\",\"url\":\"https:\/\/codefresh.io\/author\/idan-arbel\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Designing Complex Components in Figma: Our Build Record | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/","og_locale":"en_US","og_type":"article","og_title":"Designing Complex Components in Figma: Our Build Record","og_description":"Figma is a web-based graphic editor and prototyping tool that is commonly used for UI design. Independent of the size of your organization, it is considered good practice to use design components. This post provides a case study on how we utilize Figma components to manage different states in the Codefresh UI. Note that this &hellip; Read more","og_url":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2020-12-07T18:07:40+00:00","article_modified_time":"2022-03-01T17:09:23+00:00","og_image":[{"width":1640,"height":624,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Idan Arbel","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png","width":1640,"height":624},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#webpage","url":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/","name":"Designing Complex Components in Figma: Our Build Record | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#primaryimage"},"datePublished":"2020-12-07T18:07:40+00:00","dateModified":"2022-03-01T17:09:23+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Designing Complex Components in Figma: Our Build Record"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/a688711d9ad77313d34176a62f4e4a6b"},"headline":"Designing Complex Components in Figma: Our Build Record","datePublished":"2020-12-07T18:07:40+00:00","dateModified":"2022-03-01T17:09:23+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#webpage"},"wordCount":879,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/figma-header-1.png","keywords":["codefresh","design","UX","UI","user experience","user interface","figma","components","header"],"articleSection":["Design","How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/design\/designing-complex-components-figma-build-record\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/a688711d9ad77313d34176a62f4e4a6b","name":"Idan Arbel","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/2b75ef98901e74a047ea8e3ec2e9ac50?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/2b75ef98901e74a047ea8e3ec2e9ac50?s=96&d=blank&r=g","caption":"Idan Arbel"},"description":"Head of UX","url":"https:\/\/codefresh.io\/author\/idan-arbel\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18148"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/86"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=18148"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18148\/revisions"}],"predecessor-version":[{"id":21731,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18148\/revisions\/21731"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/18325"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=18148"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=18148"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=18148"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}