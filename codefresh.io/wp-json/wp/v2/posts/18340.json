{"id":18340,"date":"2020-12-17T07:33:00","date_gmt":"2020-12-17T15:33:00","guid":{"rendered":"https:\/\/codefresh.io\/?p=18340"},"modified":"2020-12-17T07:33:00","modified_gmt":"2020-12-17T15:33:00","slug":"developers-need-browser-productive-less","status":"publish","type":"post","link":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/","title":{"rendered":"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)"},"content":{"rendered":"<p>What would you say if I would tell you that you can be as productive with the cheapest laptop as with the one you already have? Would you believe me if I would say that there is no need for you to install an IDE, compilers, CLIs, Docker, and whatever else you might have on your laptop? How about having a full development environment created whenever you need it instead of dealing with virtual machines and whatever else might be fulfilling your development needs? What if I say that all you need is a browser and that it doesn&#8217;t matter whether you have a laptop, desktop, Chromebook, or a tablet? On top of all that, I will even claim that you can be more productive without all those things.<\/p>\n<p>Your answer to all those questions might be that you already know all that because you watched <a href=\"https:\/\/youtu.be\/QV1fYt-7SLU\">Gitpod &#8211; Instant Development Environment Setup<\/a>. If you didn&#8217;t, stop reading this article, watch that video, and then come back. Today we&#8217;re going to go beyond the introduction to Gitpod. We are going to combine browser-based development with GitOps and continuous delivery. With a single click, we will configure Argo CD to monitor a Git repository that defines the desired state of our production environment. Similarly, we will get Codefresh pipelines that will handle the orchestration of all the steps required for full automation triggered by pushing changes to application repositories.<\/p>\n<p>Now, you might be thinking that you are already familiar with all that because you watched <a href=\"https:\/\/youtu.be\/vpWQeoaiRM4\">Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes<\/a> and because you are already using Codefresh pipelines. But this is something completely different. What I&#8217;m offering is to get all that and whatever else you might need with a single click of a button and without anything installed, configured, or running on your laptop. If that did not spark interest, nothing will.<\/p>\n<p>The only thing I expect from you is a Kubernetes cluster that we&#8217;ll use to simulate a production environment and Argo CD installed inside the Namespace <code>argocd<\/code>. If it is in a different Namespace, you will have to make changes to the files <code>project.yaml<\/code> and <code>apps.yaml<\/code> in the <code>gitpod-production<\/code> repo we&#8217;ll explore soon.<\/p>\n<p>I&#8217;ll also expect you to be registered in <a href=\"https:\/\/gitpod.io\/\">Gitpod<\/a>, that you already configured it to communicate with your GitHub organization, and that you installed <a href=\"https:\/\/chrome.google.com\/webstore\/detail\/gitpod-dev-environments-i\/dodmmooeoklaejobgleioelladacbeki?hl=en\">Gitpod Chrome Extension<\/a>. I&#8217;m sure that you already have that set up because, as I already mentioned, I&#8217;m sure that you watched <a href=\"https:\/\/youtu.be\/QV1fYt-7SLU\">Gitpod &#8211; Instant Development Environment Setup<\/a> and you understand that browser might be the only tool you need for software development.<\/p>\n<p>With the pleasantries out of the way, let&#8217;s dive into creating a full development environment, including continuous delivery automation based on GitOps principles.<\/p>\n<p>We&#8217;ll start with only a few repositories and end up with our application running in production, and we&#8217;ll do that with only a few clicks.<\/p>\n<p><em>If you already followed some of my previous work, you probably heard me saying that &#8220;UIs are evil, that IDEs are OK, and that almost everything should be defined as code and operated from a terminal.&#8221; If you did hear me saying those things, you are probably thinking that I caught some strange disease that affects my brain. Fear not! My brain is fine or, at least, not any more damaged than it was before. I&#8217;m aware of what I was saying in the past. I am not changing my mind about those subjects. Stating that &#8220;all we need is a browser&#8221; does not mean that I&#8217;m now proposing drag&amp;drop and click-based development; quite the contrary. We&#8217;ll click a button or two, and everything else will be the same or significantly improved.<\/em><\/p>\n<p>Finally, after a short detour into my mental state, let&#8217;s move into the practical parts of this article and start doing stuff instead of debating.<\/p>\n<h2>Creating a Production Development Environment<\/h2>\n<p>Since we want to apply GitOps principles to managing environments, let&#8217;s start by forking a sample repository that contains a definition of a production environment.<\/p>\n<p>Please open the <a href=\"https:\/\/github.com\/vfarcic\/gitpod-production\">vfarcic\/gitpod-production<\/a> repo and <strong>fork it<\/strong>.<\/p>\n<p>Inside the repository, you&#8217;ll find the <em>helm\/templates<\/em> directory with the definitions of the applications we want to have in production. There is only one right now (<em>devops-paradox.yaml<\/em>), but that will change soon.<\/p>\n<p><em>All the commands used from this post are available in the <a href=\"https:\/\/gist.github.com\/4b43a907ca78e59a019e40012ed8edd7\">gitpod.sh<\/a> Gist. Use it to follow the exercises. There is no shame in copy &amp; paste.<\/em><\/p>\n<p>We are about to experience a &#8220;magical&#8221; moment. But, before we do, we&#8217;ll need to provide a bit of help. Gitpod will make a few changes to the cluster and, for that, it will need to be able to access it. We&#8217;ll provide the information it needs through an environment variable.<\/p>\n<p><em>If you are using <strong>GKE<\/strong>, your Kube config might have an absolute path to <code>gcloud<\/code>. As an example, mine is <code>\/usr\/local\/Caskroom\/google-cloud-sdk\/latest\/google-cloud-sdk\/bin\/gcloud<\/code>. If that is your case, please edit the config by replacing the absolute path with <code>gcloud<\/code>. The workspace we are about to create will have <code>gcloud<\/code> included in the <code>PATH<\/code>. If you are not proficient with Kubernetes, the config file is, by default, located in <code>$HOME\/.kube\/config<\/code>.<\/em><\/p>\n<p>Execute the command that follows from your terminal to retrieve the current Kube config.<\/p>\n<pre><code class=\"bash\">kubectl config view --flatten | base64\n<\/code><\/pre>\n<p>Copy the output of the previous command and go to the <a href=\"https:\/\/gitpod.io\/settings\/\">Gitpod settings<\/a> screen. Enter <em>KUBECONFIG_CONTENT<\/em> as the variable name and paste the copied value. Remember to click the <em>confirm<\/em> button on the right-hand side (icon of a checkmark) to persist the variable.<\/p>\n<p>Additionally, if you are using Amazon Elastic Kubernetes Serivce (EKS), you will also need to add variables <em>AWS_ACCESS_KEY_ID<\/em> and <em>AWS_SECRET_ACCESS_KEY<\/em>.<\/p>\n<p>That&#8217;s it. We have a repository that defines our production environment, and we provided Gitpod with the variables it needs. All that&#8217;s left is to go back to the forked repository in GitHub and click the green <em>Gitpod<\/em> button.<\/p>\n<p><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1024x760.png\" alt=\"\" width=\"1024\" height=\"760\" class=\"aligncenter size-large wp-image-18349\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1024x760.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-300x223.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-768x570.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1536x1140.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-20x15.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button.png 1886w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><em>If you do not see the Gitpod button, you probably forgot to install the Chrome extension. If that&#8217;s the case, please head to <a href=\"https:\/\/chrome.google.com\/webstore\/detail\/gitpod-dev-environments-i\/dodmmooeoklaejobgleioelladacbeki?hl=en\">Gitpod Chrome Extension<\/a>. Alternatively, especially if Chrome is not your browser of choice, you can prefix the repository URL with <a href=\"https:\/\/gitpod.io\/#\">https:\/\/gitpod.io\/#<\/a>. In my case, the full URL would be <a href=\"https:\/\/gitpod.io\/#https:\/\/github.com\/devopsparadox\/argocd-production\">https:\/\/gitpod.io\/#https:\/\/github.com\/devopsparadox\/argocd-production<\/a>.<\/em><\/p>\n<p>A few moments later, we should be redirected to the newly created Gitpod workspace with everything we might need to work with that repository.<\/p>\n<p>For example, we can execute the commands that follow in the terminal located at the bottom.<\/p>\n<pre><code class=\"bash\">kubectl --namespace production \\\n    get namespaces\n\nkubectl --namespace production \\\n    get pods\n<\/code><\/pre>\n<p><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-1024x523.png\" alt=\"\" width=\"1024\" height=\"523\" class=\"aligncenter size-large wp-image-18350\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-1024x523.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-300x153.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-768x392.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-1536x785.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-2048x1046.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-kubectl-20x10.png 20w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>Those commands demonstrated that <code>kubectl<\/code> is already installed and that it is configured to communicate with our cluster.<\/p>\n<p>The output of the first command should show the Namespaces in your cluster. What makes it &#8220;special&#8221; is that there is a new Namespace called <code>production<\/code>. That was created for us a few moments ago. Similarly, the latter command should show that the newly created Namespace already has an application deployed. That&#8217;s the one that is defined inside the <em>helm\/templates<\/em> directory in that repository.<\/p>\n<p>We got that application running inside the cluster because the process initiated during the creation of the workspace sent a request to Argo CD to create the app of apps that defines the desired state of the production environment.<\/p>\n<p>We got quite a few other things, but we are not going to comment on them. First of all, we already established that you are familiar with Gitpod because you watched <a href=\"https:\/\/youtu.be\/QV1fYt-7SLU\">Gitpod &#8211; Instant Development Environment Setup<\/a>. Similarly, I am sure that this is not your first contact with Argo CD. I hope you watched <a href=\"https:\/\/youtu.be\/vpWQeoaiRM4\">Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes<\/a> so that I do not need to go through the basics right now.<\/p>\n<p>I encourage you to explore the files <em>.gitpod.yml<\/em> and <em>.gitpod.Dockerfile<\/em>. All the &#8220;magic&#8221; is defined there. But do not do it straight away. Right now, I want us to create a workspace for one of the demo applications. We&#8217;ll use that opportunity to dive a bit deeper into the &#8220;magic&#8221; behind the workspaces I defined.<\/p>\n<h2>Creating an Application Development Environment<\/h2>\n<p>Now that our production environment is defined in the Git repository and that we have a development workspace to do whatever we might need to do in production, we can turn our attention to an application workspace.<\/p>\n<p>Please open <a href=\"https:\/\/github.com\/vfarcic\/gitpod-demo-cf\">vfarcic\/gitpod-demo-cf<\/a> and <strong>fork the repository<\/strong>.<\/p>\n<p>The README.md file of the newly forked repo provides the information we need to create a Gitpod workspace.<\/p>\n<p>Feel free to switch to the <em>edit<\/em> mode, and you&#8217;ll see that the blue <em>Open in Gitpod<\/em> button is just a link to the repository prefixed with <code>https:\/\/gitpod.io\/#<\/code>.<\/p>\n<p>Now, in the case of that application, I assumed that you already have a Codefresh account. If you do not, please visit <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=vfarcic-gitpod\">codefresh.io<\/a> to register. It&#8217;s free (for life), so there&#8217;s nothing to lose and a lot to gain. Also, I assumed that you already set up the integration with Docker Hub and named it <code>docker-hub<\/code>. If you haven&#8217;t, please visit <a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/docker-registries\/docker-hub\/\">Integrate DockerHub in Codefresh pipelines<\/a>.<\/p>\n<p>Finally, we&#8217;ll need a few environment variables. Open <a href=\"https:\/\/gitpod.io\/settings\/\">gitpod.io\/settings<\/a> and create them in the same way as the one we needed for the <em>gitpod-production<\/em> repo. The variables are as follows.<\/p>\n<ul>\n<li><em>CF_TOKEN<\/em> with the Codefresh token (visit <a href=\"https:\/\/codefresh-io.github.io\/cli\/tokens\/create-tokens\/\">Codefresh: Create Tokens<\/a> if you do not have one).<\/li>\n<li><em>GH_TOKEN<\/em> with the GitHub token (visit <a href=\"https:\/\/docs.github.com\/en\/free-pro-team@latest\/github\/authenticating-to-github\/creating-a-personal-access-token\">GitHub: Creating a personal access token<\/a> if you do not have one).<\/li>\n<li><em>DH_USER<\/em> with the Docker Hub username.<\/li>\n<li><em>PROD_REPO<\/em> with the production repository we forked earlier and in the format [USER]\/[REPO] (e.g., <code>devopsparadox\/gitpod-production<\/code>)<\/li>\n<\/ul>\n<p>Now that we have the variables in place, all that&#8217;s left is to go back to the repository we just forked and click the green <em>Gitpod<\/em> button or prefix the repository URL with <code>https:\/\/gitpod.io\/#<\/code> if you do not have the Chrome extension.<\/p>\n<p>A few moments later, we should have a workspace for developing the application defined in that repository. Since we might want to interact with Codefresh pipelines, the <code>codefresh<\/code> CLI is already installed. Moreover, it already created the pipeline that will be triggered every time we push a change to the master branch.<\/p>\n<p>Since the repository contains a Hugo application, a <code>hugo<\/code> server is already running and monitoring changes. It will recompile the app every time we change the source code available in that Gitpod workspace.<\/p>\n<p>We also got a preview of the application opened on the right-hand side of the screen.<\/p>\n<p>Finally, it reconfigured the definition of the Argo CD application that will be used for deploying the app to production.<\/p>\n<p>All in all, we got everything we might need to work on that application. Everything we would usually need when developing on a laptop is already available and configured in that workspace. Nevertheless, the process went further than that. We got a Codefresh pipeline that will perform continuous delivery steps whenever we push changes to GitHub, and we have Argo CD that will ultimately deploy new releases to production. The best thing is that we got all that by forking a few repos and clicking <em>Gitpod<\/em> buttons.<\/p>\n<p>We will soon explore how all that &#8220;magic&#8221; happened. For now, there is one thing missing. The Codefresh pipeline that was created for us needs the value of the variable <em>GITHUB_TOKEN<\/em>. That could have been automated as part of Gitpod workspace creation, but I left it out as a security measure.<\/p>\n<p>Please open <a href=\"https:\/\/g.codefresh.io\/pipelines\/all\/\">Codefresh pipelines<\/a>, select the newly created <em>gitpod-demo-master<\/em> pipeline, add the value of the variable <code>GITHUB_TOKEN<\/code>, and <em>SAVE<\/em> the changes.<\/p>\n<p>That&#8217;s it. Now we are truly finished, and the only thing left is to start working on the application. But, before we do that, let&#8217;s take a quick look at the few files that enable the &#8220;magic&#8221;.<\/p>\n<p>Please go back to the Gitpod workspace.<\/p>\n<p>The UI of the workspace is almost entirely occupied with <a href=\"https:\/\/theia-ide.org\/\">Theia<\/a>. If you are already using Visual Studio Code, you&#8217;ll notice that Theia is very similar. The significant difference between the two is that Theia belongs to Eclipse Foundation, making it vendor-neutral. There are other differences, but from the user&#8217;s perspective, they are almost the same. With Gitpod, we are getting an instance of Theia accessible through the browser in every workspace we create.<\/p>\n<p>By default, we have files on the left-hand side, editor and terminals in the middle, and the preview of the application on the right.<\/p>\n<p><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-1024x524.png\" alt=\"\" width=\"1024\" height=\"524\" class=\"aligncenter size-large wp-image-18351\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-1024x524.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-300x154.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-768x393.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-1536x786.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-2048x1048.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-1-20x10.png 20w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>Everything Gitpod needed to create the workspace is in <em>.gitpod.yml<\/em> and <em>.gitpod.Dockerfile<\/em>.<\/p>\n<p>Please open <em>.gitpod.yml<\/em>, and you should see YAML that follows in the editor.<\/p>\n<pre><code class=\"yaml\">image:\n  file: .gitpod.Dockerfile\n\ntasks:\n  - init: make init\n  - command: hugo server --baseUrl $(gp url 1313) --appendPort=false\n    name: Hugo\n    openMode: tab-before\n  - command: echo \"Make sure to add the GITHUB_TOKEN variable to the Codefresh pipeline devops-toolkit-master\"\n    name: Pending actions!!!\n\nports:\n  - port: 1313\n    onOpen: open-preview\n<\/code><\/pre>\n<p>That YAML file defines what and when should something happen. During the initialization phase, we are running <code>make init<\/code> target that defines all the commands required for setting up the tools we need. Feel free to open <em>Makefile<\/em> and see the target in more detail.<\/p>\n<p>Further on, we are executing <code>hugo server<\/code> that runs and reloads the application that is currently available in the preview window.<\/p>\n<p>Finally, there is an <code>echo<\/code> command reminding us that we should add the <code>GITHUB_TOKEN<\/code> variable to the Codefresh pipeline. We already did that, so we can ignore that message.<\/p>\n<p>Each of the <code>tasks<\/code> is executed in a separate terminal session. That&#8217;s why we can see tabs like <em>Hugo<\/em>, <em>Pending actions!!!<\/em>, and the path of the current context at the bottom. The latter is the session in which the <code>init<\/code> instructions were executed and which we can use to run any other commands we might need during development. We could just as well start additional terminal sessions through the top-hand menu.<\/p>\n<p>All in all, <em>.gitpod.yml<\/em> defines what should be executed depending on the phase of the lifecycle of the workspace. But, for all those <code>tasks<\/code> to be successful, we needed a few tools.<\/p>\n<p>Gitpod workspace is essentially a container running in Cloud, and we can control which image is used to spin it up. The exact definition is in a typical Dockerfile, except that Gitpod assumes that it is named <em>.gitpod.Dockerfile<\/em>. Please open it by double-clicking <em>.gitpod.Dockerfile<\/em> from the list of files available in the left-hand menu.<\/p>\n<p>The content of the file is as follows.<\/p>\n<pre><code>FROM gitpod\/workspace-full\n\nRUN brew install hugo\nRUN mkdir -p \/home\/gitpod\/codefresh\/bin\nRUN curl -L -o codefresh.tar.gz https:\/\/github.com\/codefresh-io\/cli\/releases\/download\/v0.73.22\/codefresh-v0.73.22-linux-x64.tar.gz\nRUN tar -xvzf codefresh.tar.gz -C \/home\/gitpod\/codefresh\/bin\nRUN chmod +x \/home\/gitpod\/codefresh\/bin\/codefresh\nRUN rm codefresh.tar.gz\nENV PATH $PATH:\/home\/gitpod\/codefresh\/bin\n<\/code><\/pre>\n<p>If you already used Dockerfile to define container images, what you see in front should be familiar. The image is based on the &#8220;standard&#8221; Gitpod workspace image (<code>gitpod\/workspace-full<\/code>), which already packs the most commonly used tools (e.g., <code>git<\/code>, <code>zip<\/code>, code completion scrips, <code>jq<\/code>, <code>vim<\/code>, etc.). We are extending that base image with the additional tools we need. Specifically, we added <code>hugo<\/code> and <code>codefresh<\/code> CLIs.<\/p>\n<p>All that&#8217;s left is to simulate development as a way of confirming that everything works as expected.<\/p>\n<h2>Combining Development With Continuous Delivery And GitOps<\/h2>\n<p>Please open <em>config.toml<\/em> file and change the <code>title<\/code> inside the <code>[params.banner]<\/code> section. Make sure to save the changes and click the <em>refresh<\/em> icon in the top-left section of the preview.<\/p>\n<p>Voila! The preview was updated, and the title of the application is whatever you changed it to. In my case, the new title is now <em>Something else<\/em>, as you can see in the screenshot below.<\/p>\n<p><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-1024x523.png\" alt=\"\" width=\"1024\" height=\"523\" class=\"aligncenter size-large wp-image-18352\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-1024x523.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-300x153.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-768x392.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-1536x785.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-2048x1046.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-devops-toolkit-edit-20x10.png 20w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>Now, let&#8217;s imagine that we are finished writing code, previewing changes, unit testing, and doing whatever else we usually do. We&#8217;ll pretend that we finished working on a new feature and push the changes to the GitHub repo.<\/p>\n<pre><code class=\"bash\">git add .\n\ngit commit -m \"New title\"\n\ngit push\n<\/code><\/pre>\n<p>That triggered a Codefresh pipeline, which should clone the application code, build the app and the container image, push it to Docker Hub, and modify the desired state of production by making changes to the <em>gitpod-production<\/em> repo.<\/p>\n<p>We can see the progress of the pipeline by opening <a href=\"https:\/\/codefresh.io\/\">codefresh.io<\/a>, navigating to <em>Builds<\/em> from the left-hand menu, and selecting the latest one.<\/p>\n<p><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-1024x758.png\" alt=\"\" width=\"1024\" height=\"758\" class=\"aligncenter size-large wp-image-18353\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-1024x758.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-300x222.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-768x569.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-1536x1138.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-2048x1517.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/codefresh-devops-toolkit-1-20x15.png 20w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>Once the pipeline build is finished, we should have a new pull request in the <em>gitpod-production<\/em>. That means that we are practicing continuous delivery that results in a release deployable to production and waiting for manual confirmation, which, in this case, consists of merging the PR. If the pipeline pushed changes directly to the mainline, it would be continuous deployment, which would result in a new release running in production without any manual confirmation.<\/p>\n<p>Please go to the forked <em>gitpod-production<\/em> repository, select the <em>Pull requests<\/em> tab, and enter inside the newly created PR.<\/p>\n<p><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-1024x680.png\" alt=\"\" width=\"1024\" height=\"680\" class=\"aligncenter size-large wp-image-18354\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-1024x680.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-300x199.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-768x510.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-1536x1020.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-2048x1360.png 2048w, https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/github-gitpod-production-pr-20x13.png 20w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>Feel free to explore the changes, make comments, and do whatever else you might be doing before merging PRs to the mainline. Merge it once you&#8217;re done &#8220;playing&#8221;, go back to the <em>gitpod-production<\/em> Gitpod workspace, and execute the command that follows.<\/p>\n<pre><code class=\"bash\">kubectl --namespace production \\\n    get pods\n<\/code><\/pre>\n<p>The output should be similar to the one that follows.<\/p>\n<pre><code>NAME                              READY STATUS  RESTARTS AGE\ndevops-paradox-devops-paradox-... 1\/1   Running 0        45m\ndevops-toolkit-devops-toolkit-... 1\/1   Running 0        49s\n<\/code><\/pre>\n<p>If you still see only <em>devops-paradox<\/em>, you might need to give Argo CD a bit more time to detect changes in the repo and synchronize. Wait for a few moments and re-run the previous command.<\/p>\n<p>We can see that Argo CD detected the changes to the production repo and deployed the new application. We closed the circle. We are victorious. Hurray!<\/p>\n<p>All that&#8217;s left is for you to keep &#8220;playing&#8221; inside the two Gitpod workspaces we created. You should be able to explore the details I forgot to mention on your own.<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"18340\"\/>","protected":false},"excerpt":{"rendered":"<p>What would you say if I would tell you that you can be as productive with the cheapest laptop as with the one you already have? Would you believe me if I would say that there is no need for you to install an IDE, compilers, CLIs, Docker, and whatever else you might have on &hellip; <a href=\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/\">Read more<\/a><\/p>\n","protected":false},"author":125,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[6],"tags":[5580,5581,5582,5583,5584,5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600,5601],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>All That Developers Need Is a Browser (or How to Be More Productive by Having Less) | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)\" \/>\n<meta property=\"og:description\" content=\"What would you say if I would tell you that you can be as productive with the cheapest laptop as with the one you already have? Would you believe me if I would say that there is no need for you to install an IDE, compilers, CLIs, Docker, and whatever else you might have on &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2020-12-17T15:33:00+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1024x760.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Contributor\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"15 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button.png\",\"width\":1886,\"height\":1400},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#webpage\",\"url\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/\",\"name\":\"All That Developers Need Is a Browser (or How to Be More Productive by Having Less) | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#primaryimage\"},\"datePublished\":\"2020-12-17T15:33:00+00:00\",\"dateModified\":\"2020-12-17T15:33:00+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\"},\"headline\":\"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)\",\"datePublished\":\"2020-12-17T15:33:00+00:00\",\"dateModified\":\"2020-12-17T15:33:00+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#webpage\"},\"wordCount\":2827,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1024x760.png\",\"keywords\":[\"development environment setup\",\"Gitpod\",\"development environment\",\"developer\",\"productivity\",\"IDE\",\"Theia\",\"development enviorment setup\",\"delevopment enviorment setup\",\"web development environment setup\",\"online ide\",\"gitpod tutorial\",\"gitpod ide\",\"gitpod example\",\"web ide\",\"vscode for web\",\"gitpod examples\",\"gitpod docker\",\"gitpod github\",\"development environment docker\",\"visual studio code\",\"web development\"],\"articleSection\":[\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\",\"name\":\"Contributor\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"caption\":\"Contributor\"},\"url\":\"https:\/\/codefresh.io\/author\/contributor\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"All That Developers Need Is a Browser (or How to Be More Productive by Having Less) | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/","og_locale":"en_US","og_type":"article","og_title":"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)","og_description":"What would you say if I would tell you that you can be as productive with the cheapest laptop as with the one you already have? Would you believe me if I would say that there is no need for you to install an IDE, compilers, CLIs, Docker, and whatever else you might have on &hellip; Read more","og_url":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2020-12-17T15:33:00+00:00","og_image":[{"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1024x760.png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Contributor","Est. reading time":"15 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button.png","width":1886,"height":1400},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#webpage","url":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/","name":"All That Developers Need Is a Browser (or How to Be More Productive by Having Less) | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#primaryimage"},"datePublished":"2020-12-17T15:33:00+00:00","dateModified":"2020-12-17T15:33:00+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75"},"headline":"All That Developers Need Is a Browser (or How to Be More Productive by Having Less)","datePublished":"2020-12-17T15:33:00+00:00","dateModified":"2020-12-17T15:33:00+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#webpage"},"wordCount":2827,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2020\/12\/gitpod-github-button-1024x760.png","keywords":["development environment setup","Gitpod","development environment","developer","productivity","IDE","Theia","development enviorment setup","delevopment enviorment setup","web development environment setup","online ide","gitpod tutorial","gitpod ide","gitpod example","web ide","vscode for web","gitpod examples","gitpod docker","gitpod github","development environment docker","visual studio code","web development"],"articleSection":["How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/howtos\/developers-need-browser-productive-less\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75","name":"Contributor","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","caption":"Contributor"},"url":"https:\/\/codefresh.io\/author\/contributor\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18340"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/125"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=18340"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18340\/revisions"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=18340"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=18340"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=18340"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}