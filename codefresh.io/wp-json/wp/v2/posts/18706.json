{"id":18706,"date":"2021-01-28T08:50:58","date_gmt":"2021-01-28T16:50:58","guid":{"rendered":"https:\/\/codefresh.io\/?p=18706"},"modified":"2021-01-28T08:50:58","modified_gmt":"2021-01-28T16:50:58","slug":"surviving-disaster-identify-bugs-immediately-get-back-track","status":"publish","type":"post","link":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/","title":{"rendered":"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track"},"content":{"rendered":"<p><em><strong>Editor&#8217;s Note: <\/strong><\/em><strong><em>This blog was co-authored by <a href=\"https:\/\/www.rookout.com\/author\/josh-hendrick\">Josh Henrick from Rookout<\/a> and Anais Urlichs from Codefresh. Josh &amp; Anais <\/em><\/strong><em><strong>recorded a webinar on this very topic! <a href=\"https:\/\/codefresh.io\/events\/surviving-disaster-identify-bugs-immediately-get-back-track-rookout-codefresh\/\">Watch the webinar now.<\/a><\/strong><\/em><\/p>\n<p class=\"selectionShareable\">As all developers know, when building software things don\u2019t always go as planned. In fact, most of the time they don\u2019t. With today\u2019s modern distributed architectures it\u2019s more important than ever to have the proper tools in your toolbelt. This allows us to automate as much of the software delivery lifecycle as possible and then be able to immediately triage issues when they arise.<\/p>\n<h4><strong>Automate the Workflow<\/strong>\u200d<\/h4>\n<p class=\"selectionShareable\">In this post, we\u2019ll dive deeper into a\u00a0<a href=\"https:\/\/codefresh.io\/events\/surviving-disaster-identify-bugs-immediately-get-back-track-rookout-codefresh\/\" target=\"_blank\" rel=\"noopener\">hands-on example<\/a>\u00a0of how you can survive potential disasters by having the ability to quickly and easily debug a remote application using Rookout.\u00a0<a href=\"https:\/\/www.rookout.com\/\" target=\"_blank\" rel=\"noopener\">Rookout<\/a>\u00a0is a debugging solution that empowers engineers to solve customer issues faster by allowing them to debug their application quickly and easily in any environment. Additionally, we will be using Codefresh to automate your build and delivery velocity.\u00a0<a href=\"https:\/\/codefresh.io\/\" target=\"_blank\" rel=\"noopener\">Codefresh<\/a> is a CI\/CD platform that makes DevOps extremely easy. With native Docker, Kubernetes, and Helm support, it will allow us to easily deploy a new application.<\/p>\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b4f3b0767efb229e0e_hVs9DyEgqzLahnLlApQL3Lo11T-0qH0IlndoR3he3-Ja9pVqERjJSS3M8tYg96oSvtJckPyPm6SlvmrQVHPqJW8ng3CTB2NcexQOMEP90oqHUj-DcWtcg8e6ZuhN52J7OU-8EW4-.png\" alt=\"\" \/><\/div>\n<h6 class=\"w-richtext-align-center w-richtext-figure-type-image\">Rookout debugger with a non-breaking breakpoint set<\/h6>\n<p class=\"selectionShareable\">In the end, our application will be directly connected to our Rookout account. This will make live debugging a breeze. Additionally, with every git commit, the updated version of our application will be automatically deployed to our Kubernetes cluster through our Codefresh pipeline.<\/p>\n<p class=\"selectionShareable\"><strong>This is what we are going to do:\u00a0<\/strong><\/p>\n<ul role=\"list\">\n<li>Prepare an example application and our Codefresh Environment<\/li>\n<li>Set-up our Rookout environment to connect our application upon deployment with Rookout<\/li>\n<li>Set-up our Codefresh pipeline to automate the process of deploying our application with a custom Helm step<\/li>\n<\/ul>\n<h4><strong>Prepare example application<\/strong><\/h4>\n<p class=\"selectionShareable\">For this example, we are going to be using Rookout\u2019s example todo application that has been written in Python. It will not only provide us with several methods that are running in the backend but also with a visual display of the content. Rookout supports several language families including Java, .NET, Python, Node.js, and Ruby. You can find a set of deployment examples\u00a0<a href=\"https:\/\/github.com\/Rookout\/deployment-examples\" target=\"_blank\" rel=\"noopener\">here<\/a>\u00a0or by language in the\u00a0<a href=\"https:\/\/docs.rookout.com\/docs\/setup-intro\/\" target=\"_blank\" rel=\"noopener\">Rookout documentation<\/a>\u00a0if you would like to set up the SDK in your own application.<\/p>\n<p class=\"selectionShareable\">First, go ahead, and\u00a0<a href=\"https:\/\/github.com\/Rookout\/tutorial-python\/tree\/codefresh-demo\" target=\"_blank\" rel=\"noopener\">fork the repository<\/a>, then clone the application and change to the codefresh-demo branch:<\/p>\n<pre>$ git clone https:\/\/github.com\/anais-codefresh\/tutorial-python.git\n$ git checkout codefresh-demo\n\n<\/pre>\n<p class=\"selectionShareable\">\u200dThis repository uses a\u00a0<a href=\"https:\/\/github.com\/Rookout\/tutorial-python\/tree\/codefresh-demo\/charts\/rookout-example\" target=\"_blank\" rel=\"noopener\">Helm chart<\/a>\u00a0to deploy our application to our Kubernetes cluster. The values at the end of our\u00a0<a href=\"https:\/\/github.com\/Rookout\/tutorial-python\/blob\/codefresh-demo\/charts\/rookout-example\/values.yaml\" target=\"_blank\" rel=\"noopener\">values.yaml<\/a>\u00a0file allows us to connect our running application to Rookout:\u200d<\/p>\n<pre>rookouttoken: \"your_token\"\norigin: \"your_repository\"\ngitcommit: \"your_branch\"\n<\/pre>\n<p class=\"selectionShareable\">Once we run our pipeline, we are going to be passing in those variables. The same variables are going to be reused as environment variables in our \/tempaltes\/deployment.yaml file. If you are using your own application, please ensure that those values can be passed into the application.<\/p>\n<p class=\"selectionShareable\">This is all that we have changed in our Helm Chart. Moving back to the main directory, we can find a file called\u00a0<a href=\"https:\/\/github.com\/Rookout\/tutorial-python\/blob\/codefresh-demo\/codefresh.yml\" target=\"_blank\" rel=\"noopener\">codefresh.yml<\/a>\u00a0which defines our Codefresh pipeline. The pipeline will be needed in the next step.<\/p>\n<h2><strong>Prepare Codefresh account<\/strong><\/h2>\n<p>If you do not have a Codefresh account yet, now is the time to <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=rookout\">create your free account<\/a>!.<\/p>\n<h4>Prerequisites:<\/h4>\n<ul role=\"list\">\n<li>To build the container image of our application and push it to a container registry, we have to connect a\u00a0<a href=\"https:\/\/codefresh.io\/docs\/docs\/integrations\/docker-registries\/\" target=\"_blank\" rel=\"noopener\">Docker Registry to our Codefresh account<\/a>. In our case, we have connected a Dockerhub account to Codefresh.<\/li>\n<li>Once we have connected our container registry, we have to connect to our Kubernetes Cluster. Again, Codefresh allows you to connect to any providers so the decision is yours.\u00a0<a href=\"https:\/\/codefresh.io\/docs\/docs\/deploy-to-kubernetes\/deployment-options-to-kubernetes\/\" target=\"_blank\" rel=\"noopener\">The documentation provides set-up instructions<\/a>\u00a0for the most popular cloud providers.<\/li>\n<\/ul>\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b4cc40cf420216be84_-9WIfKIeasbtPx4hMeQ6kA7_uYFppX6B5WNisc1IwxsbOS2zGhdDRAxJNrFi3U2a0ojOMm-bwG3hrz8n0xTeL8VFoj14ufJowOWb_ELNj68lIniUGlYwH1mM-w1FikxYYq4qnfhr.png\" alt=\"\" \/><\/div>\n<h6 class=\"w-richtext-align-center w-richtext-figure-type-image\">Codefresh Docker Registry Integration within the Account Settings<\/h6>\n<h2><strong>Set-up our Codefresh pipeline<\/strong><\/h2>\n<p class=\"selectionShareable\">Go to the \u2018Project\u2019 section and create a new project:<\/p>\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b582105532cb028959_yAIMrJKVM4ADpFqBNJCIwzPFugcTr2T-dEs2jSL3WLEW2ksTDyVbeNOhe6_1CSN6I46uP7pz1BUTyvrB58tclb2UPUhM5uZBnfkkAA98Zy67sdOsvZAxRbY_ZUeJtie0ddqI_yYY.png\" alt=\"\" \/><\/div>\n<h6 class=\"w-richtext-align-center w-richtext-figure-type-image\">Start screen listing all available Codefresh projects<\/h6>\n<p class=\"selectionShareable\">Once your project is set-up, we can go ahead and create our first pipeline:<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img class=\"\" src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b5231a7d60c4061424_VTCaxgNHH_F0emvbTEt70XtHPSasFE5AJsBybftYePSzl6cvcvF2srrq-Uqr7YombxuFq3ePAuesUgZkv6WpSlWiBFOcES0vDiMIH7B0k1Tebnhsq-NnUI2P1ts-fYcxnfFAaeL6.png\" alt=\"\" width=\"559\" height=\"608\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">Make sure to select the repository of your cloned application.<\/p>\n<p class=\"selectionShareable\">Once you create the pipeline, you will be directed to the inline YAML file. Let\u2019s have a look at our pipeline and the different steps within. In Codefresh, every\u00a0<a href=\"https:\/\/codefresh.io\/docs\/docs\/configure-ci-cd-pipeline\/introduction-to-codefresh-pipelines\/\" target=\"_blank\" rel=\"noopener\">pipeline step is its own container image<\/a>. This makes it possible to run anything that can be run as or within a container image as a pipeline step.<\/p>\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b5f311b828956d4d2d_FXQmJeJpMo3K22qqcj408H4Qp90pgSJtBT5pevryLf3sKF6D7f92jAi_SNwMqYpTF7tZo59MLiplObp_708iDdnjOUnulJzylNO08BRtEU9S7BWMmqFWVI-ZbicG-mdobM_qB8Bp.png\" alt=\"\" \/><\/div>\n<h6 class=\"w-richtext-align-center w-richtext-figure-type-image\">Codefresh pipeline after execution<\/h6>\n<p class=\"selectionShareable\">We are going to replace any content that is currently within our inline YAML with the pipeline below. This is the same pipeline that you can find in the\u00a0<a href=\"https:\/\/github.com\/Rookout\/tutorial-python\/blob\/codefresh-demo\/codefresh.yml\" target=\"_blank\" rel=\"noopener\">git repository<\/a>.<\/p>\n<pre>version: \"1.0\"\nstages:\n   - clone\n   - build\n   - deploy\nsteps:\n  clone:\n      title: Cloning Repository\n      type: git-clone\n      repo: '${{CF_REPO_OWNER}}\/${{CF_REPO_NAME}}'\n      revision: '${{CF_REVISION}}'\n  build_app_image:\n      title: Building Docker Image\n      type: build\n      stage: build\n      registry: \"dockerhub\"\n      image_name: '${{REGISTRY_ACCOUNT}}\/rookout-example'\n      working_directory: \".\/${{CF_REPO_NAME}}\"\n      tag: '1.0.0'\n      dockerfile: Dockerfile\n  deploy:\n      title: Deploying Helm Chart\n      type: helm\n      stage: deploy\n      working_directory: '.\/${{CF_REPO_NAME}}'\n      arguments:\n        action: install\n        chart_name: charts\/rookout-example\n        release_name: my-example-chart\n        helm_version: 3.0.2\n        kube_context: '${{K8S_CLUSTER}}'\n        namespace: testing\n        custom_values:\n          - 'rookouttoken=${{ROOKOUT_TOKEN}}'\n          - 'gitcommit=codefresh-demo'\n          - 'origin=tutorial-python'\n<\/pre>\n<ul role=\"list\">\n<li>The first step \u2018clone\u2019 is responsible for cloning our git repository.<\/li>\n<li>The second step \u2018build\u2019 is responsible for building the container image of our application and pushing it to our container registry.<\/li>\n<li>The last step is a specific Helm step from our step marketplace that will deploy our application to our Kubernetes cluster like specified within our Helm chart.<\/li>\n<\/ul>\n<p class=\"selectionShareable\">You might have already realised that the YAML file contains several variables. These variables make it easy to reuse our pipeline across applications and across accounts. The variables starting with \u2018CF\u2019 are<a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/variables\/\">\u00a0specific Codefresh variables<\/a>\u00a0and will be filled out automatically once our pipeline will run.<\/p>\n<p class=\"selectionShareable\">All other variables, we have to specify in the variables section within the Codefresh UI. Make sure that you replace the values with those applicable to your Rookout and Codefresh set-up. The next section will detail where you can find rookout-specific variables.<\/p>\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b5cc92cc25615801cb_i_cpLuncHEPcHdoNQcGolYpycDtrxbcLXBptRko2Ds-JbWaHH4OM7iOfnJlkzGDNgaSZGyV0AF-alkR4kSrmJM2SS2reuz5JUkk8oQ-eNY2nXl75ToZfm2ePq3nzIg4x_FazO1Xv.png\" alt=\"\" \/><\/div>\n<h6 class=\"w-richtext-align-center w-richtext-figure-type-image\">Variables used within our Codefresh Pipeline<\/h6>\n<p class=\"selectionShareable\">Once filled out, our pipeline is ready to go. Save and Run our codefresh-demo branch. Once the pipeline is finished running, we should be able to see our deployed application in the Kubernetes Dashboard:<\/p>\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b6351629e67493a8c0_C2OxvhHrL6a-nDnvqm1_CVqk331bwyTwMqxbpAQ7qBvVlfr5QxQNrQsX9oxoNckXETEni51i-j85W9fcuPV1Gclc1BEKhyf3Ud1_xwH6MF4i_4RB3Ot1xh9_HuHnF6wHN4Xj6ND4.png\" alt=\"\" \/><\/div>\n<h6 class=\"w-richtext-align-center w-richtext-figure-type-image\">Kubernetes Dashboard in Codefresh<\/h6>\n<p class=\"selectionShareable\">We can go ahead and open our running application. Our application is currently connected to our Rookout account. If anything does not behave as expected, we can go ahead and start debugging.<\/p>\n<h2><strong>Configuring our Application to Use Rookout<\/strong><\/h2>\n<p class=\"selectionShareable\">By configuring the Rookout SDK within our application, we will have the ability to instantly collect data including local variables, stack traces, and tracing information from the running application in, on-demand whenever needed. This helps reduce the mean-time to repair defects within the application and improves the\u00a0<a href=\"https:\/\/www.rookout.com\/blog\/understandability\">understandability<\/a>\u00a0of the code. It also allows developers to reproduce issues directly in the environment in which they occur (even in production) without having to create a separate reproduction environment where the chances of reproducing the bug are lower.<\/p>\n<p class=\"selectionShareable\">As described in the sections above, we\u2019ve deployed the Rookout SDK within our sample application. If you open the\u00a0<em>app.p<\/em>y file and scroll to the bottom you can see we\u2019ve added the following lines to our application:<\/p>\n<pre>\nimport rook\nrook.start()\n\n<\/pre>\n<p class=\"selectionShareable\">This starts the Rookout SDK when the application runs. Rookout can be set up simply by installing the\u00a0<em>rook\u00a0<\/em>python package and then configuring the Rookout\u00a0<a href=\"https:\/\/docs.rookout.com\/docs\/python-setup\/#sdk-api\" target=\"_blank\" rel=\"noopener\">security token<\/a>\u00a0and\u00a0<a href=\"https:\/\/docs.rookout.com\/docs\/projects-labels\/\" target=\"_blank\" rel=\"noopener\">labels<\/a>\u00a0as environment variables. For more details on the Rookout SDK setup, check out the\u00a0<a href=\"https:\/\/docs.rookout.com\/docs\/python-setup\/\" target=\"_blank\" rel=\"noopener\">SDK setup documentation<\/a>.<\/p>\n<h2><strong>Validating the Rookout Installation<\/strong><\/h2>\n<p class=\"selectionShareable\">After installing Rookout in the application and deploying with Codefresh, we\u2019re ready to start debugging the application all while it\u2019s running live in our Kubernetes cluster! Although this example uses Kubernetes, Rookout can debug applications deployed in any environment. After logging into our Rookout organization, we\u2019re presented with a list of servers that are available to debug. In this case, we can see our Python example in the table:<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b6c1e64d672c4dd6a9_AsG_xxEkWfmwe_FYIm5WOBy_veZCjnht5yjgwcEpo-vsNDnloEVZ9bGWXukdJrc6a4sTa-ZLf8jvQhcHpjPrj6uzL8ZrL3y-l6ejJa2FCYkNZk60AJeGrPV14Sje92GBLURu9TkR.png\" alt=\"\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">We can simply click on the row in the table to select it and click \u2018<em>Let\u2019s Go\u2019<\/em>\u00a0to start debugging. If there were multiple servers or microservices that we wanted to debug, we could select more labels to ensure we\u2019re able to get the exact data that we\u2019re looking for.<\/p>\n<h2><strong>Debugging Our Application<\/strong><\/h2>\n<p class=\"selectionShareable\">Once in the debugging view, we\u2019re ready to connect to our source code repository so that we can begin setting data collection points in our code. To connect to your\u00a0<a href=\"https:\/\/docs.rookout.com\/docs\/source-repos\/\" target=\"_blank\" rel=\"noopener\">source code repository<\/a>\u00a0click on the \u201c+\u201d button and choose your repository type from the list.<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b71e8ed85ac4f89007_IvcMnc6BlRmhi15OZxxyQGuD3UMv1uzsJlzAqgxhLjPzW9bvtx4Y4HqqlzDX1QZyoqj-lycLIJ7um2ppLiUb8-R9XQBNhJpVezj2zJrnUNF_JamzA0nEfIt8AcFR8fVijWsJ-S6a.png\" alt=\"\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">In this case, we\u2019re using GitHub, so we\u2019ll choose GitHub and follow the steps to authenticate and select our organization, repository, and branch\/commit:<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b6ddcdf60effae3828_03WLJDxad0lGtPR1INZIwiHKyyjBe7DLONU5YsxzlK5PFPczWlbisXUWUvBLz651m-RdlE4v8bmHqXTRD19Aw2Vyb8bCmQdvD1jZpyugKjOTLrp-kBp__uC5_8cXfmUqk9oalcge.png\" alt=\"\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">It\u2019s important to note that Rookout never receives and is never able to view your source code. Connections to your repository are made directly from your browser to your repository via API calls. In addition, Rookout can be configured to\u00a0<a href=\"https:\/\/docs.rookout.com\/docs\/source-repos\/#automatic-fetching\" target=\"_blank\" rel=\"noopener\">automatically fetch\u00a0<\/a>your source code repository with the correctly deployed branch\/commit to make things even easier.<\/p>\n<p class=\"selectionShareable\">After connecting to the repository, we\u2019re able to click on and open the\u00a0<em>app.py<\/em>\u00a0source code file and start setting data collection points which Rookout refers to as \u201cNon-break breakpoints\u201d to collect data directly from the running application. A non-breaking breakpoint is like a traditional breakpoint except that it doesn\u2019t stop the application, require you to change code, or redeploy. You\u2019ll probably notice the Rookout UI is very similar to an IDE. It\u2019s built with IDE-like functionality to make developers feel at home as they\u2019re using it debug, although it\u2019s not a replacement for your current IDE.<\/p>\n<p class=\"selectionShareable\">In order to set a data collection point on a specific line of code, simply click in the gutter to the left of the line number as shown below:<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b4f3b0767efb229e0e_hVs9DyEgqzLahnLlApQL3Lo11T-0qH0IlndoR3he3-Ja9pVqERjJSS3M8tYg96oSvtJckPyPm6SlvmrQVHPqJW8ng3CTB2NcexQOMEP90oqHUj-DcWtcg8e6ZuhN52J7OU-8EW4-.png\" alt=\"\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">In the screenshot above, we\u2019ve set a non-breaking breakpoint on line 109 of the application in the\u00a0<em>add_todo<\/em>\u00a0function. Now anytime we add a todo item to the list, the\u00a0<em>add_todo<\/em>\u00a0function will execute and we will collect a snapshot of data from the application.<\/p>\n<p class=\"selectionShareable\">To debug any potential application issues, we can go to our application and add an item to the todo list:<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b7c152fa91bd7ac6b0_cL6Q2XN0O-kMnBA8b_Vr3_7CKsZke7wge1Na-oqS6X-K5MocmvUlINpLMgBEmMlAcGuLQ1RSMe7aSuDMORVCmESF8-F13XlSThxYAvwsSv7gLR6xSF4CKs4VhRGdhYSEW1w3jcUc.png\" alt=\"\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">And then navigate back to Rookout to see the collected data:<\/p>\n<figure class=\"w-richtext-align-center w-richtext-figure-type-image\">\n<div><img src=\"https:\/\/assets-global.website-files.com\/5d794055739ddf1e8da11999\/601266b73147a0259751c306_SYtZF5ByBXyIgpAUyeTRGHUiIXE0N5-Bo68y05T4598Gk8p4dxr5tP-MRMxt_QruTJRoE7t55-UmUqq5XmncamB-RkDksd62xZ30Tl4StYFC2CRci_josSF2PU2Vbid6DPNlml7z.png\" alt=\"\" \/><\/div>\n<\/figure>\n<p class=\"selectionShareable\">Rookout collects the following information:<\/p>\n<ul role=\"list\">\n<li>All of the local variables and their values<\/li>\n<li>Server and process-related information including profiling information if enabled<\/li>\n<li>A full stack trace which allows you to also debug code up the stack including 3rd party code<\/li>\n<li>Tracing information from applications using OpenTracing APIs so that you can correlate this transaction back to a specific trace context<\/li>\n<\/ul>\n<p class=\"selectionShareable\">With this information, Rookout allows you to debug potential code or performance-related issues in your prod or pre-prod environments all without stopping your application.<\/p>\n<h2><strong>Looking forward<\/strong><\/h2>\n<p class=\"selectionShareable\">When disasters happen, and they most assuredly do at one time or another, it\u2019s critical that you have the proper tools and processes in place to mitigate them as quickly and efficiently as possible. Automating build and deployment workflows allow code fixes to make their way into production without the inherent risk that is present in manual release processes. This allows developers to focus on what\u2019s important: getting to the bottom of the issue and solving it fast. Having a remote debugging solution in place further allows teams to optimize their workflow and understand what\u2019s happening in their running code in as short of a span as possible.<\/p>\n<p class=\"selectionShareable\">At the end of the day, it\u2019s all about giving your customers a positive experience when using your product. The quicker you can remediate disasters, the quicker your customers will be thanking you for an amazing experience!<\/p>\n<p><strong>Want to see it all in action? <a href=\"https:\/\/codefresh.io\/events\/surviving-disaster-identify-bugs-immediately-get-back-track-rookout-codefresh\/\">Watch the webinar now!<\/a><\/strong><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"18706\"\/>","protected":false},"excerpt":{"rendered":"<p>Editor&#8217;s Note: This blog was co-authored by Josh Henrick from Rookout and Anais Urlichs from Codefresh. Josh &amp; Anais recorded a webinar on this very topic! Watch the webinar now. As all developers know, when building software things don\u2019t always go as planned. In fact, most of the time they don\u2019t. With today\u2019s modern distributed &hellip; <a href=\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/\">Read more<\/a><\/p>\n","protected":false},"author":82,"featured_media":18715,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[46],"tags":[44,3323,4481],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track\" \/>\n<meta property=\"og:description\" content=\"Editor&#8217;s Note: This blog was co-authored by Josh Henrick from Rookout and Anais Urlichs from Codefresh. Josh &amp; Anais recorded a webinar on this very topic! Watch the webinar now. As all developers know, when building software things don\u2019t always go as planned. In fact, most of the time they don\u2019t. With today\u2019s modern distributed &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-01-28T16:50:58+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster-1024x576.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1024\" \/>\n\t<meta property=\"og:image:height\" content=\"576\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@urlichsanais\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Anais Urlichs\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"10 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster.png\",\"width\":3200,\"height\":1800},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#webpage\",\"url\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/\",\"name\":\"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#primaryimage\"},\"datePublished\":\"2021-01-28T16:50:58+00:00\",\"dateModified\":\"2021-01-28T16:50:58+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487\"},\"headline\":\"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track\",\"datePublished\":\"2021-01-28T16:50:58+00:00\",\"dateModified\":\"2021-01-28T16:50:58+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#webpage\"},\"wordCount\":1901,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster.png\",\"keywords\":[\"Kubernetes\",\"automation\",\"debugging\"],\"articleSection\":[\"Webinars\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487\",\"name\":\"Anais Urlichs\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g\",\"caption\":\"Anais Urlichs\"},\"description\":\"Ana\u00efs is a Developer Evangelist at Codefresh, the modern, fast, and powerful CI\/CD &amp; GitOps automation platform that streamlines your pipelines. When she is not advocating DevOps best practices, she runs her own YouTube Channel centered around Kubernetes. Before Codefresh, she worked in the blockchain space, contributing to Community Management and Developer Relations of open source projects. Her passion lies in making tools and projects more accessible to developers and community members.\",\"sameAs\":[\"https:\/\/twitter.com\/urlichsanais\"],\"url\":\"https:\/\/codefresh.io\/author\/anais-codefresh\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/","og_locale":"en_US","og_type":"article","og_title":"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track","og_description":"Editor&#8217;s Note: This blog was co-authored by Josh Henrick from Rookout and Anais Urlichs from Codefresh. Josh &amp; Anais recorded a webinar on this very topic! Watch the webinar now. As all developers know, when building software things don\u2019t always go as planned. In fact, most of the time they don\u2019t. With today\u2019s modern distributed &hellip; Read more","og_url":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-01-28T16:50:58+00:00","og_image":[{"width":1024,"height":576,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster-1024x576.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@urlichsanais","twitter_site":"@codefresh","twitter_misc":{"Written by":"Anais Urlichs","Est. reading time":"10 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster.png","width":3200,"height":1800},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#webpage","url":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/","name":"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#primaryimage"},"datePublished":"2021-01-28T16:50:58+00:00","dateModified":"2021-01-28T16:50:58+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487"},"headline":"Surviving the Disaster: How to Identify Bugs Immediately and Get Back on Track","datePublished":"2021-01-28T16:50:58+00:00","dateModified":"2021-01-28T16:50:58+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#webpage"},"wordCount":1901,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/01\/Black-and-Green-Snow-Natural-Disaster_Emergency-Poster.png","keywords":["Kubernetes","automation","debugging"],"articleSection":["Webinars"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/webinars\/surviving-disaster-identify-bugs-immediately-get-back-track\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487","name":"Anais Urlichs","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g","caption":"Anais Urlichs"},"description":"Ana\u00efs is a Developer Evangelist at Codefresh, the modern, fast, and powerful CI\/CD &amp; GitOps automation platform that streamlines your pipelines. When she is not advocating DevOps best practices, she runs her own YouTube Channel centered around Kubernetes. Before Codefresh, she worked in the blockchain space, contributing to Community Management and Developer Relations of open source projects. Her passion lies in making tools and projects more accessible to developers and community members.","sameAs":["https:\/\/twitter.com\/urlichsanais"],"url":"https:\/\/codefresh.io\/author\/anais-codefresh\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18706"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/82"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=18706"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18706\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/18715"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=18706"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=18706"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=18706"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}