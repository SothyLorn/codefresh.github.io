{"id":18767,"date":"2021-02-09T08:54:36","date_gmt":"2021-02-09T16:54:36","guid":{"rendered":"https:\/\/codefresh.io\/?p=18767"},"modified":"2021-02-09T08:54:36","modified_gmt":"2021-02-09T16:54:36","slug":"comparison-code-analysis-tools","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/","title":{"rendered":"Comparison: Code Analysis Tools"},"content":{"rendered":"<p>Code analysis tools are essential to gain an overview and understanding of the quality of your code. This post is going to cover the following<\/p>\n<ol>\n<li aria-level=\"1\"><a href=\"https:\/\/about.codecov.io\/\">Codecov<\/a>;<\/li>\n<li aria-level=\"1\"><a href=\"https:\/\/coveralls.io\/\">Coveralls<\/a>;<\/li>\n<li aria-level=\"1\">And <a href=\"https:\/\/www.codacy.com\">Codacy<\/a>;<\/li>\n<\/ol>\n<p>While these tools target similar use cases, they differ in their implementation, ease of use, and documentation just to name a few.<\/p>\n<figure id=\"attachment_18768\" aria-describedby=\"caption-attachment-18768\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png\"><img class=\"wp-image-18768 size-medium\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3-300x114.png\" alt=\"code-coverage-comparison\" width=\"300\" height=\"114\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3-300x114.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3-1024x390.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3-768x292.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3-1536x584.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3-20x8.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png 1640w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-18768\" class=\"wp-caption-text\">Code Coverage Tools<\/figcaption><\/figure>\n<p>This post provides an overview of each tool as well as a detailed comparison to help analyse and decide which tool is best suited for your needs.<\/p>\n<h3><b>Overview<\/b><\/h3>\n<p>Code analysis tools make it possible to access, group, and merge analysis reports of your application. Test coverage reports used in combination with code analysis tools provide comprehensive insights on the quality of your code.<\/p>\n<p>This allows developers to know their code quality today and improve it tomorrow. Specifically, to<\/p>\n<ul>\n<li aria-level=\"1\">Improve poorly written code;<\/li>\n<li aria-level=\"1\">Develop robust and secure applications;<\/li>\n<li aria-level=\"1\">Receive insights into the code quality over time;<\/li>\n<li aria-level=\"1\">Ensure test coverage is done throughout the codebase.<\/li>\n<\/ul>\n<p>In the best case, you would want to have all the insights on your code quality in one place. This is made possible by Codacy, Codecov, and Coveralls.<\/p>\n<p>The next sections will compare distinct aspects of each tool with its competitors. We tried all 3 tools with our own project in order to gain a better understanding of how they work. Here is each blog post if you want to see what we did:<\/p>\n<ul>\n<li aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/howtos\/code-coverage-codecov\/\">Codecov<\/a><\/li>\n<li aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/howtos\/code-coverage-reports-using-coveralls-codefresh\/\">Coveralls<\/a><\/li>\n<li aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/howtos\/codacy-coverage-reports\/\">Codacy<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h3><b>Features<\/b><\/h3>\n<p>Now that we discovered that all three tools have the same goals in mind, let\u2019s take a look at the features each tool pursues and the ways they differ.<\/p>\n<p><b>Each tool has been evaluated based on the following criteria<\/b><\/p>\n<div class=\"table-responsive\"><table>\n<tbody>\n<tr>\n<td><b>Feature<\/b><\/td>\n<td><b>Description<\/b><\/td>\n<td><b>Clear Difference<\/b><\/td>\n<\/tr>\n<tr>\n<td><b>Pricing<\/b><\/td>\n<td>The flexibility of the pricing options<br \/>\nand the extent to which those are justified<\/td>\n<td>Coveralls is the only tool of the three that<br \/>\ncharges per repository rather than per user<\/td>\n<\/tr>\n<tr>\n<td><b>Ease of Use<\/b><\/td>\n<td>Whether or not it was intuitive<br \/>\nto get started with the tool<\/td>\n<td>Coveralls was the easiest to<br \/>\nintegrate within our project<\/td>\n<\/tr>\n<tr>\n<td><b>Documentation<\/b><\/td>\n<td>The quality of the overall documentation,<br \/>\nwhether examples were provided,<br \/>\nintegration with CI\/CD providers,<br \/>\nand the clarity of the conveyed information<\/td>\n<td>Codecov had the most comprehensive documentation<br \/>\nthat left little to no room for ambiguity,<br \/>\nmaking it easy set-up and expand the integration with our project<\/td>\n<\/tr>\n<tr>\n<td><b>Dashboard<\/b><\/td>\n<td>The functionality of the Dashboard<br \/>\nand the way information is displayed.<\/td>\n<td>While the Codacy Dashboard is not the easiest to navigate,<br \/>\nit did provide the best data visualisation<\/td>\n<\/tr>\n<tr>\n<td><b>Historical Data<\/b><\/td>\n<td>Whether it is possible to access historical data,<br \/>\nview trends, and analyse code changes<\/td>\n<td>All tools enable this feature in a different format<\/td>\n<\/tr>\n<tr>\n<td><b>CI\/CD Integration<\/b><\/td>\n<td>Ease of automating the process of creating code<br \/>\ncoverage reports and forwarding those to a CI platform<\/td>\n<td>Codecov did not require extensive custom set-up<br \/>\nto integrate with Codefresh<\/td>\n<\/tr>\n<\/tbody>\n<\/table><\/div>\n<h3><b>Pricing<\/b><\/h3>\n<p>Both Codacy and Codecov provide a free version, a pro-version and an on-premises version. In the case of Codecov, all pricing options are <a href=\"https:\/\/about.codecov.io\/pricing\/\">detailed on their website.<\/a> In comparison, <a href=\"https:\/\/www.codacy.com\/pricing\">Codacy does not clearly state<\/a> the service provided with the free version. Additionally, both platforms charge per user, who receives access to an organization\u2019s repository.<\/p>\n<p>Coveralls, on the other hand, has more <a href=\"https:\/\/coveralls.io\/pricing\">segmented pricing options<\/a> with 5 different tiers. Additionally, it provides free analysis for open source. The remaining options are priced depending on the number of repositories that receive coverage reports rather than the number of users, who need access to the platform.<\/p>\n<p>Given the information provided by each tool, we would recommend startups and open-source projects to go with Coveralls. While they currently do not provide extensive support to projects, they clearly state their belief in the open-source ethos and provide a flexible pricing model. Additionally, paying Coveralls per repository provides more predictable pricing. Depending on the size of your team and the number of repositories that have to be covered, Codecov will provide the best option for its price. However, if your company would like to receive additional features, it might be worth looking into the enterprise and on-premises solutions provided by Codecov and Codacy since both provide a few more features than Codecov.<\/p>\n<h3><b>Reports and Analysis<\/b><\/h3>\n<p>All three platforms provide a comprehensive dashboard through which code analysis reports can be accessed. This section will look at the features of each platform before providing a comparison. Note that we uploaded to each platform the same coverage report.<\/p>\n<p>The coverage reports uploaded to each platform were based on a<a href=\"https:\/\/github.com\/codefresh-contrib\/coveralls-sample-app\"> Typescript application<\/a>. Thus, reports had to be in either of the following formats: json, xml, or txt.<\/p>\n<p>Both <a href=\"https:\/\/docs.codecov.io\/docs\/supported-languages\">Codecov<\/a> and <a href=\"https:\/\/docs.coveralls.io\/\">Coveralls<\/a> suggest different testing and coverage report frameworks depending on the language used throughout a comprehensive list of examples. In comparison, Codacy provides <a href=\"https:\/\/docs.codacy.com\/coverage-reporter\/generating-coverage-reports\/\">a list of suggestions<\/a> that are not directly managed by Codacy. This makes it a bit more difficult to understand the potential and implementation of Codacy. Once we have uploaded our coverage report, we can view the information in the respective Dashboards.<\/p>\n<h3><b>Codecov<\/b><\/h3>\n<figure id=\"attachment_18769\" aria-describedby=\"caption-attachment-18769\" style=\"width: 276px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image1-1.png\"><img class=\"size-medium wp-image-18769\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image1-1-276x300.png\" alt=\"Codecov\" width=\"276\" height=\"300\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image1-1-276x300.png 276w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image1-1-768x834.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image1-1-18x20.png 18w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image1-1.png 793w\" sizes=\"(max-width: 276px) 100vw, 276px\" \/><\/a><figcaption id=\"caption-attachment-18769\" class=\"wp-caption-text\">Codecov<\/figcaption><\/figure>\n<p>The Codecov Dashboard is divided into several sections with a top menu bar. Each coverage report is classified in either of the following categories:<\/p>\n<ul>\n<li aria-level=\"1\"><b>hit<\/b> indicates that the source code was executed by the test suite.<\/li>\n<li aria-level=\"1\"><b>partial<\/b> indicates that the source code was not fully executed by the test suite; there are remaining branches that were not executed.<\/li>\n<li aria-level=\"1\"><b>miss<\/b> indicates that the source code was not executed by the test suite.<\/li>\n<\/ul>\n<p>This is visible in the files section of the Dashboard in the form of a street-light system.<\/p>\n<h3><b>Coveralls<\/b><\/h3>\n<figure id=\"attachment_18770\" aria-describedby=\"caption-attachment-18770\" style=\"width: 294px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image4.png\"><img class=\"size-medium wp-image-18770\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image4-294x300.png\" alt=\"Coveralls\" width=\"294\" height=\"300\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image4-294x300.png 294w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image4-768x783.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image4-20x20.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image4.png 920w\" sizes=\"(max-width: 294px) 100vw, 294px\" \/><\/a><figcaption id=\"caption-attachment-18770\" class=\"wp-caption-text\">Coveralls<\/figcaption><\/figure>\n<p>Coveralls follows a unique style throughout its platform. Similar to Codecov, Coveralls uses the percentage of the project covered by tests to analyze its code quality. Furthermore, with every new code coverage upload, Coveralls makes a separate entry into the recent builds section of the Dashboard. This entry includes the coverage percentage of the repository. While a graph for enhanced visualisation of code coverage improvements would be nice, it is not necessary to understand the coverage change over time.<\/p>\n<h3><b>Codacy<\/b><\/h3>\n<figure id=\"attachment_18771\" aria-describedby=\"caption-attachment-18771\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8.png\"><img class=\"size-medium wp-image-18771\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8-300x146.png\" alt=\"Codacy\" width=\"300\" height=\"146\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8-300x146.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8-1024x500.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8-768x375.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8-1536x750.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image8.png 1899w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-18771\" class=\"wp-caption-text\">Codacy<\/figcaption><\/figure>\n<p>Similar to Codecov, Codacy focuses on enhancing its code analysis by connecting coverage reports with the information recorded on your git repository. This includes issues, pull requests and commits. From the main Dashboard, users can access specific information on the repository, such as file coverage. However, Codacy does not provide you with an option to view coverage reports directly. The pro version allows users to set-up security alerts, which is a feature that is unique to Codacy.<\/p>\n<p>Separately, Codacy provides additional tools such as user management, separate configuration for file support, and setting quality standards.<\/p>\n<h4><b>Comparison<\/b><\/h4>\n<ul>\n<li aria-level=\"1\">Coveralls was the most intuitive platform of the three. However, this can be considered a positive side-effect of Coveralls focusing on the core features needed to create curated coverage reports rather than providing too many options that might confuse users.<\/li>\n<li aria-level=\"1\">In contrast, both Codecov and Codacy place more focus on the visualisation of the coverage reports that enhance the Dashboard.<\/li>\n<li aria-level=\"1\">An additional feature worth highlighting is the option to compare branches directly within the Codecov UI.<\/li>\n<li aria-level=\"1\">In the case of Codacy, the complex UI used to accommodate all features was a problem. The Codacy UI has two settings taps with similar features. When setting up the integration, it was not clear which API token should be used. More on this in the integration section.<\/li>\n<li aria-level=\"1\">Overall, there is not much to set-up or to customise within the UI, which results in a similar workflow while using each tool.<\/li>\n<\/ul>\n<h3><b>Historical Trends<\/b><\/h3>\n<p>Historical Trends are necessary to reason between events, changes done to the code base and the results of the code coverage. Depending on the way historical trends are displayed, it becomes easier for developers to identify good practices that led to higher code quality.<\/p>\n<p>All platforms provide historical trends. While Codacy provides the best visualisation of reports over time as an average, it makes it difficult to access coverage reports directly from within the tool. Looking at Codecov and Coveralls, also the simplified Dashboards makes it possible to reason about changes in code coverage within respective files and repositories.<\/p>\n<p>Summarising, the information provided by Codacy is better when looked at high-level but does not provide an advantage when users want to analyse specific files.<\/p>\n<h3><b>Code Analysis<\/b><\/h3>\n<p>Using a code coverage solution makes it possible for users to access additional information on the quality of their code. The following screenshots showcase the analysis interface of the file that we ran tests on. It is worth highlighting that Codacy analyses the code quality of all files within the git repository by default. Resulting, also files that are not part of the code coverage report are automatically analysed.<\/p>\n<p><b>Codecov<\/b><\/p>\n<figure id=\"attachment_18772\" aria-describedby=\"caption-attachment-18772\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image6.png\"><img class=\"size-medium wp-image-18772\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image6-300x125.png\" alt=\"codecov-code-analysis\" width=\"300\" height=\"125\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image6-300x125.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image6-768x320.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image6-20x8.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image6.png 810w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-18772\" class=\"wp-caption-text\">Codecov Code Analysis<\/figcaption><\/figure>\n<p><b>Coveralls<\/b><\/p>\n<figure id=\"attachment_18773\" aria-describedby=\"caption-attachment-18773\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7.png\"><img class=\"size-medium wp-image-18773\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7-300x157.png\" alt=\"Coveralls Code Analysis\" width=\"300\" height=\"157\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7-300x157.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7-1024x535.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7-768x401.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image7.png 1030w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-18773\" class=\"wp-caption-text\">Coveralls Code Analysis<\/figcaption><\/figure>\n<p><b>Codacy<\/b><\/p>\n<p>Note that Codacy has some additional logic that did not allow us to access the js file created from the ts file. Thus, we used the ts file instead to analyse our code quality.<\/p>\n<figure id=\"attachment_18774\" aria-describedby=\"caption-attachment-18774\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image2.png\"><img class=\"size-medium wp-image-18774\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image2-300x149.png\" alt=\"Codacy Code Analysis\" width=\"300\" height=\"149\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image2-300x149.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image2-768x380.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image2-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image2.png 935w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-18774\" class=\"wp-caption-text\">Codacy Code Analysis<\/figcaption><\/figure>\n<p>In this category, Codacy clearly provided the most information on each line of code, highlighting the improvements that can be made. However, by doing so, the platform enforces specific practices onto your codebase. For instance, in the case of JavaScript, there is no need to provide semicolons but their tool will flag those as missing and downgrade the code quality. By not flagging distinct coding styles, Codacy could be used to enforce a coding style within the organisation.<\/p>\n<h3><b>Documentation\u00a0<\/b><\/h3>\n<p>Your need for good documentation will vary, depending on the way you want to use the tools and access code coverage reports. Sadly, the documentation is often that part of a product that is least taken care of. Good documentation allows users to get started quickly, avoid ambiguity, and optimise the use of the platform over time.<\/p>\n<p>When comparing the documentation by Codecov, Coveralls and Codacy, the following became apparent<\/p>\n<ul>\n<li aria-level=\"1\">Codecov has the most comprehensive documentation since it covers every aspect of the product with great detail.<\/li>\n<li aria-level=\"1\">Coveralls\u2019 documentation was the easiest to navigate given that it focuses on the essential operations that users would want to do.<\/li>\n<li aria-level=\"1\">Both Codecov and Coveralls provide a comprehensive list of examples that users can choose from depending on the programming language and framework used in their application. This was greatly missed within Codacy, which is further detailed in the next section.<\/li>\n<\/ul>\n<h3><b>Use and Ease of Implementation<\/b><\/h3>\n<p>The use and ease of implementation is arguably the most important aspect of each platform. Depending on the tool that is added to your existing workflow, you do not want to change your entire processes to accommodate one tool. Thus, it is necessary for code coverage and analysis tools to understand at what point coverage reports are created in the development lifecycle. This will allow the tool to provide seamless integration into the testing and coverage process that a team has already established.<\/p>\n<p>Using Codefresh to connect our code coverage reports to the respective tool makes it possible to automate the process of running tests, creating coverage reports, and uploading those to the code analysis tool. This section will detail our experience integrating each analysis tool within our Codefresh pipeline.<\/p>\n<h3><b>Integrate with each tool<\/b><\/h3>\n<p>The connection between the tool and your application is made through a repository token. Independent of the tool you are using, you will be provided with a repository token once you grant the platform access to a new git repository. The repository token is set as an environment variable either in your local installation or within your CI\/CD platform.<\/p>\n<p>In the case of Coveralls, it was necessary to install a node package and a script was added to the repository. The script can be modified to provide additional information on the application. Further details are provided in the <a href=\"https:\/\/codefresh.io\/howtos\/code-coverage-reports-using-coveralls-codefresh\/\">Coveralls specific blog post<\/a>.<\/p>\n<p>Codecov merely required a specific set-up of the code coverage tool used.<\/p>\n<p>Codacy was a bit special in this regard. Instead of installing a script or package within the application, users have to call a remote script. While it might seem more user friendly at the beginning, it has several disadvantages. Namely:<\/p>\n<ul>\n<li aria-level=\"1\">The script has to be called every time that the code coverage report is pushed to the Codacy account. If the script changes, it might result no longer be compatible with the coverage reports used and fail to upload those.<\/li>\n<li aria-level=\"1\">In case of an error, users do not have insights on what has gone wrong. In our case, Codacy was unable to access the right file within the repository and as a result, did not display coverage resorts. However, the script behaved as if it ran successfully.<\/li>\n<\/ul>\n<h3><b>Pipeline Creation<\/b><\/h3>\n<p>One heavily promoted feature within each code coverage tool is the possibility to integrate it directly within your existing CI\/CD platform. To evaluate the use of each tool, we set-up a CI\/CD pipeline for each tool within Codefresh. The process was highly similar across tools and resulted in the following pipeline for Codecov:<\/p>\n<figure id=\"attachment_18775\" aria-describedby=\"caption-attachment-18775\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5.png\"><img class=\"size-medium wp-image-18775\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5-300x174.png\" alt=\"codecov-pipeline\" width=\"300\" height=\"174\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5-300x174.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5-1024x594.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5-768x446.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5-1536x892.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5-20x12.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image5.png 1573w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><figcaption id=\"caption-attachment-18775\" class=\"wp-caption-text\">Codecov Pipeline<\/figcaption><\/figure>\n<p>Note that we have access to the live logging through the \u2018Output\u2019 section in the Codefresh UI.<\/p>\n<p>This section specifically details the use of integrating either of the code coverage tools into Codefresh pipelines. The first steps of the Codecov pipeline are provided as an example. In Codefresh, each step is its own Docker image. At the beginning of standard pipelines, the git repository is cloned, a container image created and pushed to the user&#8217;s container registry. These steps were the same for each tool.<\/p>\n<pre>version: \"1.0\"\n# Stages can help you organize your steps in stages\nstages:\n  - \"clone\"\n  - \"build\"\n  - \"test\"\n\nsteps:\n  clone:\n    title: \"Cloning repository\"\n    type: \"git-clone\"\n    repo: \"codefresh-contrib\/codecov-sample-app\"\n    # CF_BRANCH value is auto set when pipeline is triggered\n    # Learn more at codefresh.io\/docs\/docs\/codefresh-yaml\/variables\/\n    revision: \"${{CF_BRANCH}}\"\n    git: \"github\"\n    stage: \"clone\"\n\n  build:\n    title: \"Building Docker image\"\n    type: \"build\"\n    image_name: \"codefresh-contrib\/codecov-sample-app\"\n    working_directory: \"${{clone}}\"\n    tag: \"${{CF_BRANCH_TAG_NORMALIZED}}\"\n    dockerfile: \"Dockerfile\"\n    stage: \"build\"\n<\/pre>\n<p>Next, we had to run the tests, create coverage reports of our projects, and forward those to each platform. This is done in its own container image. For our application, we used the node image within each pipeline. The implementation for forwarding coverage reports between our Codefresh pipeline varied between Codecov, Coveralls, and Codacy.<\/p>\n<pre> test:\n    title: \"Running test\"\n    type: \"freestyle\" # Run any command\n    image: \"anaisurlichs\/codecov-sample-app:master\" # The image in which command will be executed\n    working_directory: \"${{clone}}\" # Running command where code cloned\n    commands:\n      - \"npm run test\"\n    stage: \"test\"\n\n  upload:\n    title: \"Pushing to Codecov\"\n    type: \"freestyle\" # Run any command\n    image: \"node:15.2\" # The image in which command will be executed\n    working_directory: \"${{clone}}\" # Running command where code cloned\n    commands:\n      - \"ci_env=`curl -s https:\/\/codecov.io\/env`\"\n      - \"npm install codecov -g\"\n      - \"codecov -t ${{CODECOV_TOKEN}} -f .\/coverage\/clover.xml\"\n    stage: \"test\"\n<\/pre>\n<p>Note that it would have been best if each tool would provide their own container image that can be used within CI\/CD pipelines instead of using the generic node image. This would have reduced the need for a custom workaround and makes it possible to optimize the process.<\/p>\n<h3><b>Let\u2019s Recap<\/b><\/h3>\n<p>This post provided an overview and comparison of three different code analysis tools. Namely, Codecov, Coveralls and Codacy. All three tools have the same goal of accessing code coverage reports and generating curated insights over time.<\/p>\n<p>When explored in more detail it becomes visible that all tools have a different focus on their implementation of features. This results in a tradeoff between access to features and ease of use. While Codacy is the most advanced tool of the three, it was more difficult to set-up and to navigate its UI. In contrast, Coveralls focuses on the minimum functionality needed to access and analyse code coverage reports. Comparing the free version of each tool, there is no significant difference between tools.<\/p>\n<p>If you are interested in each tool specifically, we highly recommend you to have a look at our previous blog posts on:<\/p>\n<ul>\n<li aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/howtos\/code-coverage-codecov\/\">Codecov<\/a><\/li>\n<li aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/howtos\/code-coverage-reports-using-coveralls-codefresh\/\">Coveralls<\/a><\/li>\n<li aria-level=\"1\">And <a href=\"https:\/\/codefresh.io\/howtos\/codacy-coverage-reports\/\">Codacy<\/a><\/li>\n<\/ul>\n<p>Each tool can be automated through Codefresh; simply by creating a pipeline for your project that integrates with the respective code coverage tool.<\/p>\n<p><a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&#038;utm_medium=Post&#038;utm_campaign=codeanalysiscomparison\">Create Your Free Account today and try it out!<\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"18767\"\/>","protected":false},"excerpt":{"rendered":"<p>Code analysis tools are essential to gain an overview and understanding of the quality of your code. This post is going to cover the following Codecov; Coveralls; And Codacy; While these tools target similar use cases, they differ in their implementation, ease of use, and documentation just to name a few. This post provides an &hellip; <a href=\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/\">Read more<\/a><\/p>\n","protected":false},"author":82,"featured_media":18768,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1543,6],"tags":[65,4246,5515,5547,5549,5604,5605,5606,5612,5622,5641,5642,5643],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Comparison: Code Analysis Tools | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Comparison: Code Analysis Tools\" \/>\n<meta property=\"og:description\" content=\"Code analysis tools are essential to gain an overview and understanding of the quality of your code. This post is going to cover the following Codecov; Coveralls; And Codacy; While these tools target similar use cases, they differ in their implementation, ease of use, and documentation just to name a few. This post provides an &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-02-09T16:54:36+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1640\" \/>\n\t<meta property=\"og:image:height\" content=\"624\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@urlichsanais\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Anais Urlichs\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"14 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png\",\"width\":1640,\"height\":624,\"caption\":\"Code Coverage Tools\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/\",\"name\":\"Comparison: Code Analysis Tools | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#primaryimage\"},\"datePublished\":\"2021-02-09T16:54:36+00:00\",\"dateModified\":\"2021-02-09T16:54:36+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Comparison: Code Analysis Tools\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487\"},\"headline\":\"Comparison: Code Analysis Tools\",\"datePublished\":\"2021-02-09T16:54:36+00:00\",\"dateModified\":\"2021-02-09T16:54:36+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#webpage\"},\"wordCount\":2578,\"commentCount\":2,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png\",\"keywords\":[\"testing\",\"comparison\",\"tutorial\",\"code analysis\",\"example\",\"code coverage\",\"test\",\"codecov\",\"coveralls\",\"Codacy\",\"qa\",\"troubleshooting\",\"metrics\"],\"articleSection\":[\"Continuous Integration\",\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487\",\"name\":\"Anais Urlichs\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g\",\"caption\":\"Anais Urlichs\"},\"description\":\"Ana\u00efs is a Developer Evangelist at Codefresh, the modern, fast, and powerful CI\/CD &amp; GitOps automation platform that streamlines your pipelines. When she is not advocating DevOps best practices, she runs her own YouTube Channel centered around Kubernetes. Before Codefresh, she worked in the blockchain space, contributing to Community Management and Developer Relations of open source projects. Her passion lies in making tools and projects more accessible to developers and community members.\",\"sameAs\":[\"https:\/\/twitter.com\/urlichsanais\"],\"url\":\"https:\/\/codefresh.io\/author\/anais-codefresh\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Comparison: Code Analysis Tools | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/","og_locale":"en_US","og_type":"article","og_title":"Comparison: Code Analysis Tools","og_description":"Code analysis tools are essential to gain an overview and understanding of the quality of your code. This post is going to cover the following Codecov; Coveralls; And Codacy; While these tools target similar use cases, they differ in their implementation, ease of use, and documentation just to name a few. This post provides an &hellip; Read more","og_url":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-02-09T16:54:36+00:00","og_image":[{"width":1640,"height":624,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@urlichsanais","twitter_site":"@codefresh","twitter_misc":{"Written by":"Anais Urlichs","Est. reading time":"14 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png","width":1640,"height":624,"caption":"Code Coverage Tools"},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#webpage","url":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/","name":"Comparison: Code Analysis Tools | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#primaryimage"},"datePublished":"2021-02-09T16:54:36+00:00","dateModified":"2021-02-09T16:54:36+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Comparison: Code Analysis Tools"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487"},"headline":"Comparison: Code Analysis Tools","datePublished":"2021-02-09T16:54:36+00:00","dateModified":"2021-02-09T16:54:36+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#webpage"},"wordCount":2578,"commentCount":2,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/02\/image3.png","keywords":["testing","comparison","tutorial","code analysis","example","code coverage","test","codecov","coveralls","Codacy","qa","troubleshooting","metrics"],"articleSection":["Continuous Integration","How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-integration\/comparison-code-analysis-tools\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/8b7465f259c87e2ad71c81f4cfbf6487","name":"Anais Urlichs","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/f8e8faa1d1e7bf3f82b40b9d1f1587c4?s=96&d=blank&r=g","caption":"Anais Urlichs"},"description":"Ana\u00efs is a Developer Evangelist at Codefresh, the modern, fast, and powerful CI\/CD &amp; GitOps automation platform that streamlines your pipelines. When she is not advocating DevOps best practices, she runs her own YouTube Channel centered around Kubernetes. Before Codefresh, she worked in the blockchain space, contributing to Community Management and Developer Relations of open source projects. Her passion lies in making tools and projects more accessible to developers and community members.","sameAs":["https:\/\/twitter.com\/urlichsanais"],"url":"https:\/\/codefresh.io\/author\/anais-codefresh\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18767"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/82"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=18767"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/18767\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/18768"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=18767"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=18767"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=18767"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}