{"id":1881,"date":"2017-03-09T17:20:36","date_gmt":"2017-03-09T17:20:36","guid":{"rendered":"https:\/\/codefresh.io\/?p=1881"},"modified":"2022-03-01T17:24:33","modified_gmt":"2022-03-01T17:24:33","slug":"testing-strategies-for-docker","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/","title":{"rendered":"Testing Strategies for Docker Driven Development"},"content":{"rendered":"<p>In case you missed our <em>Testing Strategies\u00a0Docker Driven Development<\/em>\u00a0Webinar with Cloud66, we recorded it for you to view on demand.\u00a0During the session, you\u2019ll learn strategies and best practices for testing Docker containers and running them in production.<\/p>\n<p><strong>The Webinar Includes:<\/strong><\/p>\n<ul>\n<li>Dani\u00ebl van Gils&#8217; (Developer Advocate at <a href=\"http:\/\/www.cloud66.com\/\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud 66<\/a>) talk on &#8220;Docker Inside\/Out: the \u2018real\u2019 real-world of stacking containers in production.&#8221; This includes 12 stages of the hero journey to run containers in production and examples on how developers use microservices today.<\/li>\n<li>\n<p id=\"5074\" class=\"graf graf--h3 graf--leading graf--title\">Alexei Ledenev&#8217;s\u00a0(Cheif Researcher at <a href=\"https:\/\/codefresh.io\/\">Codefresh<\/a>) talk on &#8220;Testing Strategies for Docker Containers.&#8221; During the presentation, Alexei shows step-by-step demos of 4\u00a0testing strategies and explains the benefits and drawbacks associated with each approach.<\/p>\n<\/li>\n<\/ul>\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/dbzbpscFDt4\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\n<p>You can view and download their slides below:<\/p>\n<p><a href=\"http:\/\/www.slideshare.net\/Codefresh\/codefresh-cloud-66-webinar-testing-strategies-for-docker-driven-development-72150418\" target=\"_blank\" rel=\"noopener noreferrer\">Dani\u00ebl&#8217;s slides<\/a><\/p>\n<p><a href=\"http:\/\/www.slideshare.net\/Codefresh\/codefresh-cloud-66-webinar-testing-strategies-for-docker-driven-development\" target=\"_blank\" rel=\"noopener noreferrer\">Alexei&#8217;s slides<\/a><\/p>\n<h2>Highlights:<\/h2>\n<h2>Talk #1: Docker Inside\/Out: the \u2018real\u2019 real-world of stacking containers in production<\/h2>\n<p>Daniel walks us through the 12 stages of the hero journey to run containers in production.<\/p>\n<p class=\"p1\"><span class=\"s1\">You can\u2019t run containers in production from day one, you need to take the journey. During the first<\/span>\u00a0couple stages you work on your projects with the methods you already know but then one day you hear about &#8220;containers&#8221; online or from a friend\/ colleague, or event.<\/p>\n<p>At stage three you start to think &#8211;<strong>How can I implement containers in my current workflow?\u00a0<\/strong>But you might decide not take action right away or don&#8217;t know how.<\/p>\n<p>At stage four you come across a <strong>mentor<\/strong> or experienced user that is happy to help you on the containers journey, <em>for example, Dani\u00ebl.<\/em><\/p>\n<p>Apply the <strong>artichoke model &#8211;\u00a0<\/strong><span class=\"s1\">When you want to embrace change in your company you need a medium. The container\/microservice is an elegant message.<\/span><\/p>\n<p><strong>Stage five:<\/strong> Now you are crossing the threshold. You and your team need to understand the containerization machine or t<span class=\"s1\">he process to get your service from idea to production.\u00a0<\/span><strong>Think global, act local.<\/strong> Once you create a Dockerfile don&#8217;t deploy it right away. Make sure you understand how the Dockerfile works\u00a0and getting it up in running on your local machine before deploying it.<\/p>\n<p><strong>Stage six:<\/strong> You are using the containers and run into some problems because you are doing it wrong. This is the stage where most developers realize they are putting too much in their containers. Try removing unneeded components and cleaning up your image.<\/p>\n<p>&#8220;If you put in sh#t in you will get sh#t out, you can&#8217;t polish a turd.&#8221;<\/p>\n<p>&nbsp;<\/p>\n<p><img class=\"aligncenter size-medium wp-image-20992\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/Docker-Inside_Outside-Image-300x177.png\" alt=\"\" width=\"300\" height=\"177\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/Docker-Inside_Outside-Image-300x177.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/Docker-Inside_Outside-Image-20x12.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/Docker-Inside_Outside-Image.png 572w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/p>\n<p>At stage seven you are ready to start running containers in production. Reminder to &#8220;keep it simple stupid.&#8221;<\/p>\n<p><strong>K.I.S.S.S.S.S. &#8211; Keep It Slim, Secure, Speedy, Stable, Set<\/strong><\/p>\n<ul>\n<li><strong>Slim <\/strong>&#8211;<strong>\u00a0<\/strong>remove all the layers and stuff you don\u2019t need<\/li>\n<li><strong>Secure <\/strong>&#8211;\u00a0make sure you have the latest security updates and remember to remove all secrets<\/li>\n<li><strong><strong><strong>Speedy <\/strong><\/strong><\/strong>&#8211; follow best practices how to deploy your code in production\u00a0and run performance tests<\/li>\n<li><strong>Stable <\/strong>&#8211;\u00a0lock downstream base image, lock runtime dependencies, has to be the same in all environments<\/li>\n<li><strong>Set <\/strong>&#8211;\u00a0make it immutable, don\u2019t mess around with stuff like volumes and databases inside containers (yet)<\/li>\n<\/ul>\n<p><strong>Stage eight:<\/strong> It&#8217;s time for production! But first, a reality check. Based on Dani\u00ebl&#8217;s research this is how people are using containers in production:<\/p>\n<ul>\n<li>60% of developers use a monolith containerization approach (part of the learning curve)<\/li>\n<li>30% of developers use an API-first approach<\/li>\n<li>7% of developers split their architecture with containers (including workers, APIs, and background processes, etc)<\/li>\n<li>3% of developers are truly using microservices<\/li>\n<\/ul>\n<p><strong>Stage nine:\u00a0<\/strong>Y<span class=\"s1\">ou understand the container ecosystem and what is needed in production.<\/span><\/p>\n<p>This is your <strong>container nursery<\/strong>:<\/p>\n<p><img class=\"aligncenter size-full wp-image-2198\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/nursery.png\" alt=\"\" width=\"506\" height=\"281\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/nursery.png 506w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/nursery-300x167.png 300w\" sizes=\"(max-width: 506px) 100vw, 506px\" \/><\/p>\n<p><strong>Stage ten:<\/strong>\u00a0You go back to your team with a <strong>proof of concept <\/strong>of\u00a0how to implement containers.<\/p>\n<p><strong>Stage eleven:<\/strong>\u00a0You show off to your team everything you learned during the journey.<\/p>\n<p><strong>Stage twelve:<\/strong>\u00a0You are a <strong>container hero<\/strong> and can go explore new things\/ start a new journey.<\/p>\n<h2>Talk #2: Testing Strategies for Docker Containers<\/h2>\n<p>Alexei started the talk by first explaining\u00a0the benefits of using Docker, including portability, speed, configuration flexibility, Docker Hub ( app store of tools and resources packaged in containers you can utilize), etc. He also explained the Docker architecture at a high level.<\/p>\n<p><img class=\"wp-image-2178 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/docker-arc-1024x561.png\" alt=\"\" width=\"635\" height=\"349\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/docker-arc-1024x561.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/docker-arc-300x164.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/docker-arc-768x421.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/docker-arc-599x328.png 599w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/docker-arc.png 1125w\" sizes=\"(max-width: 635px) 100vw, 635px\" \/><\/p>\n<p>After explaining how Docker images are built, Alexei walks us through the different ways we can test them.<\/p>\n<h3 id=\"c909\" class=\"graf graf--h3 graf-after--p\">The \u201cNaive\u201d\u00a0Approach<\/h3>\n<p><em>See the 1st scenario demo &#8211; 29 minutes 30 seconds of the webinar<\/em><\/p>\n<p>The &#8220;Naive&#8221; approach is what most people do when they start their container journey and relies on a <strong>CI server<\/strong>. In\u00a0this approach, the developer uses Docker as a package manager (a better option than the <strong class=\"markup--strong markup--p-strong\">jar\/rpm\/deb<\/strong> approach) to modify their flow slightly with a Dockerfile.\u00a0The CI server compiles the application code and executes the tests (unit, service, functional, etc). The build artifacts are reused in the Docker build to produce a new image which becomes a core deployment artifact. The produced image contains not only application \u201cbinaries\u201d but also the required runtime, dependencies, and application configurations.<\/p>\n<p><img class=\"wp-image-2175 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexei-talk.png\" alt=\"\" width=\"649\" height=\"348\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexei-talk.png 800w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexei-talk-300x161.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexei-talk-768x411.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexei-talk-613x328.png 613w\" sizes=\"(max-width: 649px) 100vw, 649px\" \/><\/p>\n<p>&nbsp;<\/p>\n<p><strong>Benefits and drawbacks of this approach:<\/strong><\/p>\n<p>We get to use our familiar CI flow and achieve application portability and a small Docker image. But won&#8217;t have a portable Dev or Test environment, meaning we&#8217;re not able to reproduce exactly the same dev and test environments outside of our\u00a0CI server.\u00a0To create a new test environment we would need to set up test tools (correct versions and plugins), configure runtime and OS settings, and get the same versions of test scripts and any test data. And we would need to repeat this procedure for each developer machine, CI machine, new build agent machine, etc. which can be quite tedious.<\/p>\n<p>How can we improve this scenario? <strong>Place all CI flow (compile &amp; test) inside the app container<\/strong>.<\/p>\n<h3 id=\"b7f8\" class=\"graf graf--h3 graf-after--p\">App &amp; Test Container Approach<\/h3>\n<p><em>(See the 2nd scenario demo &#8211; 33 minutes 38 seconds of the webinar)<\/em><\/p>\n<p>In this approach, we use Docker to <strong>create one image with everything<\/strong> in our CI flow (test tools, required packages, test scripts, test data, etc.) and app.<\/p>\n<p>Here\u2019s a simplified <strong>Dockerfile<\/strong> that illustrates this approach.<\/p>\n<pre class=\"lang:default decode:true\">FROM \"&lt;bases image&gt;\":\"&lt;version&gt;\"\r\n\r\nWORKDIR \"&lt;path&gt;\"\r\n\r\n# install packages required to run app and tests\r\nRUN apt-get update &amp;&amp; apt-get install -y \\\r\n    \"&lt;app runtime&gt; and &lt;dependencies&gt;\" \\  # add app runtime and required packages\r\n    \"&lt;test tools&gt; and &lt;dependencies&gt;\" \\     # add testing tools and required packages\r\n    &amp;&amp; rm -rf \/var\/lib\/apt\/lists\/*\r\n\r\n# copy app files\r\nCOPY app app\r\nCOPY run.sh run.sh\r\n\r\n# copy test scripts\r\nCOPY tests tests\r\n\r\n# copy \"main\" test command\r\nCOPY test.sh test.sh\r\n\r\n# ... EXPOSE, RUN, ADD ... for app and test environment\r\n\r\n# main app command\r\nCMD [run.sh, \"&lt;app arguments&gt;\"]\r\n\r\n# it's not possible to have multiple CMD commands, but this is the \"main\" test command\r\n# CMD [\/test.sh, \"&lt;test arguments&gt;\"]\r\nview rawDockerfile hosted with \u2764 by GitHub<\/pre>\n<p>&nbsp;<\/p>\n<p><strong>Benefits and drawbacks of this approach:<\/strong><\/p>\n<p>This strategy gives us a simple CI flow, application portability, and portable Dev and Test environments.<\/p>\n<p>Downsides to this method are it increases the size of our Docker image because it contains all test tools, required packages, test scripts, and test data. We also need to rebuild the image each time we code or test and decide what to do with the test results and logs (how and where to export them). It also pollutes the image with test specific configurations and some unneeded dependency packages.<\/p>\n<p>How can we improve? <strong>Split the image into two images<\/strong>.<\/p>\n<h3 id=\"727c\" class=\"graf graf--h3 graf-after--p\">Test Aware Container Approach<\/h3>\n<p><em>(See the 3rd scenario demo &#8211; 38 minutes 31 seconds of the webinar)<\/em><\/p>\n<p>In this approach, we take the same (App &amp; Test container)\u00a0approach but <strong>extract layers<\/strong> so we have one image that only contains the application and another larger image that contains both app &amp; test. We take the same Docker file but add these commands on line 15 and 28. We also a special label called &#8220;SPLIT&#8221; to cache the image layer or split where the image is created.<\/p>\n<p><img class=\"wp-image-2179 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexie-1024x668.png\" alt=\"\" width=\"778\" height=\"508\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexie-1024x668.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexie-300x196.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexie-768x501.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexie-503x328.png 503w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/alexie.png 1287w\" sizes=\"(max-width: 778px) 100vw, 778px\" \/><\/p>\n<p><strong>Benefits and drawbacks of this approach:<\/strong><\/p>\n<p>Using this method, we end up with two separate images and one Dockerfile. It allows us to achieve a portable Dev and Test environment and capture test our scripts at a specific point in time so we can reproduce them in any environment. We also don&#8217;t have to setup and configure our testing tools since their part of our image.<\/p>\n<p>But the drawback is we still need to rebuild the entire Docker image with every code or test change. We&#8217;ll also need some shell &#8220;magic&#8221; to create a clean app image (without test tools and tests).<\/p>\n<p><strong>After trying many different testing strategies, Alexei recommends the following:<\/strong><\/p>\n<h3>Docker Automation Flow<\/h3>\n<p><em>(See the 4th scenario demo &#8211; 42 minutes 56 seconds of the webinar)<\/em><\/p>\n<p>In this approach, we create a Docker Automation Flow\u00a0and <strong>containerize<\/strong> every step. For example, we create a builder container (with all compilers, linters, package managers, and dev tools), a test container (with testing tools, test scripts, runtimes, etc. ), and an app container (with only the application binaries, runtimes, and required packages).<\/p>\n<p>Alexei found this to be the best method because we achieve portability with everything (our application, automation flow, dev and test environment) so we can build and test anywhere. This also allows enables us to have a smaller app image and faster builds.<\/p>\n<p>However, you still need to find a tool to automate and orchestrate this build flow. It can be difficult to do on your own using Bash or Shell scripts so Alexei recommends using tools\u00a0like\u00a0<a href=\"http:\/\/www.habitus.io\/\" target=\"_blank\" rel=\"noopener noreferrer\">Habitus.io<\/a> or <strong>Docker CI\/CD services<\/strong> like <a href=\"https:\/\/codefresh.io\/\">Codefresh.io<\/a>\u00a0that allow you to easily define multiple steps as a Docker Container.<\/p>\n<h3>Have questions?<\/h3>\n<p>Sign up for a free account at <a href=\"https:\/\/codefresh.io\/?utm_medium=blog&amp;utm_campaign=Cloud66-Webinar&amp;utm_source=wordpress\">Codefresh<\/a>.io and <a href=\"https:\/\/codefresh.io\/request-free-setup\/?utm_medium=blog&amp;utm_campaign=Cloud66-Webinar&amp;utm_source=wordpress\">request a one-on-one onboarding session<\/a>\u00a0so we can help you set up your Docker automation flow. Or email Alexei directly at Alexei@codefresh.io<\/p>\n<p>Sign up for a Cloud 66 account at <a href=\"https:\/\/app.cloud66.com\/users\/sign_up??utm_source=blog&amp;utm_medium=link&amp;utm_campaign=codefresh-cloud66-webinar\">Cloud66.com<\/a> \u00a0or\u00a0<a href=\"http:\/\/www.cloud66.com\/demo?utm_source=blog&amp;utm_medium=link&amp;utm_campaign=codefresh-cloud66-webinar\">request a one-to-one demo<\/a>\u00a0of Cloud 66. Or email\u00a0Dani\u00ebl directly at\u00a0Daniel@cloud66.com<\/p>\n<p>&nbsp;<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"1881\"\/>","protected":false},"excerpt":{"rendered":"<p>In case you missed our Testing Strategies\u00a0Docker Driven Development\u00a0Webinar with Cloud66, we recorded it for you to view on demand.\u00a0During the session, you\u2019ll learn strategies and best practices for testing Docker containers and running them in production. The Webinar Includes: Dani\u00ebl van Gils&#8217; (Developer Advocate at Cloud 66) talk on &#8220;Docker Inside\/Out: the \u2018real\u2019 real-world &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/\">Read more<\/a><\/p>\n","protected":false},"author":27,"featured_media":2032,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[14,24,64,77],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Testing Strategies for Docker Driven Development | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Testing Strategies for Docker Driven Development\" \/>\n<meta property=\"og:description\" content=\"In case you missed our Testing Strategies\u00a0Docker Driven Development\u00a0Webinar with Cloud66, we recorded it for you to view on demand.\u00a0During the session, you\u2019ll learn strategies and best practices for testing Docker containers and running them in production. The Webinar Includes: Dani\u00ebl van Gils&#8217; (Developer Advocate at Cloud 66) talk on &#8220;Docker Inside\/Out: the \u2018real\u2019 real-world &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2017-03-09T17:20:36+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-01T17:24:33+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1534\" \/>\n\t<meta property=\"og:image:height\" content=\"401\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@todaywasawesome\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Dan Garfield\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"9 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png\",\"width\":1534,\"height\":401},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/\",\"name\":\"Testing Strategies for Docker Driven Development | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#primaryimage\"},\"datePublished\":\"2017-03-09T17:20:36+00:00\",\"dateModified\":\"2022-03-01T17:24:33+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Testing Strategies for Docker Driven Development\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\"},\"headline\":\"Testing Strategies for Docker Driven Development\",\"datePublished\":\"2017-03-09T17:20:36+00:00\",\"dateModified\":\"2022-03-01T17:24:33+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#webpage\"},\"wordCount\":1544,\"commentCount\":2,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png\",\"keywords\":[\"docker\",\"Containers\",\"microservices\",\"automated testing\"],\"articleSection\":[\"Docker Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\",\"name\":\"Dan Garfield\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"caption\":\"Dan Garfield\"},\"description\":\"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome\",\"sameAs\":[\"https:\/\/twitter.com\/todaywasawesome\"],\"url\":\"https:\/\/codefresh.io\/author\/dang\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Testing Strategies for Docker Driven Development | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/","og_locale":"en_US","og_type":"article","og_title":"Testing Strategies for Docker Driven Development","og_description":"In case you missed our Testing Strategies\u00a0Docker Driven Development\u00a0Webinar with Cloud66, we recorded it for you to view on demand.\u00a0During the session, you\u2019ll learn strategies and best practices for testing Docker containers and running them in production. The Webinar Includes: Dani\u00ebl van Gils&#8217; (Developer Advocate at Cloud 66) talk on &#8220;Docker Inside\/Out: the \u2018real\u2019 real-world &hellip; Read more","og_url":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2017-03-09T17:20:36+00:00","article_modified_time":"2022-03-01T17:24:33+00:00","og_image":[{"width":1534,"height":401,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@todaywasawesome","twitter_site":"@codefresh","twitter_misc":{"Written by":"Dan Garfield","Est. reading time":"9 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png","width":1534,"height":401},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/","name":"Testing Strategies for Docker Driven Development | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#primaryimage"},"datePublished":"2017-03-09T17:20:36+00:00","dateModified":"2022-03-01T17:24:33+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Testing Strategies for Docker Driven Development"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4"},"headline":"Testing Strategies for Docker Driven Development","datePublished":"2017-03-09T17:20:36+00:00","dateModified":"2022-03-01T17:24:33+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#webpage"},"wordCount":1544,"commentCount":2,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/03\/cloud66webinar-blog.png","keywords":["docker","Containers","microservices","automated testing"],"articleSection":["Docker Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/docker-tutorial\/testing-strategies-for-docker\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4","name":"Dan Garfield","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","caption":"Dan Garfield"},"description":"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome","sameAs":["https:\/\/twitter.com\/todaywasawesome"],"url":"https:\/\/codefresh.io\/author\/dang\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1881"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/27"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=1881"}],"version-history":[{"count":2,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1881\/revisions"}],"predecessor-version":[{"id":21747,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/1881\/revisions\/21747"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/2032"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=1881"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=1881"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=1881"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}