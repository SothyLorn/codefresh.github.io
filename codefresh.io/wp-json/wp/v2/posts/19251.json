{"id":19251,"date":"2021-05-13T08:12:36","date_gmt":"2021-05-13T16:12:36","guid":{"rendered":"https:\/\/codefresh.io\/?p=19251"},"modified":"2021-08-19T19:17:27","modified_gmt":"2021-08-19T19:17:27","slug":"troubleshooting-kubernetes-with-komodor","status":"publish","type":"post","link":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/","title":{"rendered":"Troubleshooting Kubernetes Clusters as a Developer with Komodor"},"content":{"rendered":"<p>The container ecosystem is moving very fast and new tools designed specifically for Kubernetes clusters are introduced at a very fast pace. Even though several times a new tool is simply implementing a well-known mechanism (already present in the VM world) with a focus on containers, every once in a while we see tools that are designed from scratch rather than adapting a preexisting idea. One such tool is <a href=\"https:\/\/komodor.com\/\">Komodor<\/a>.<\/p>\n<p>It is hard to describe Komodor in a single sentence because it is unlike any other existing tool. Komodor is a Kubernetes troubleshooting tool specifically designed for developers. It is a smart dashboard that combines a live view of your cluster with several integrations for other tools (such as metric providers) that you already have installed.<\/p>\n<figure id=\"attachment_19253\" aria-describedby=\"caption-attachment-19253\" style=\"width: 1629px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard.png\"><img class=\"size-full wp-image-19253\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard.png\" alt=\"Komodor dashboard\" width=\"1629\" height=\"845\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard.png 1629w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard-300x156.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard-1024x531.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard-768x398.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard-1536x797.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/dashboard-20x10.png 20w\" sizes=\"(max-width: 1629px) 100vw, 1629px\" \/><\/a><figcaption id=\"caption-attachment-19253\" class=\"wp-caption-text\">Komodor dashboard<\/figcaption><\/figure>\n<p>The goals of Komodor are centered around an easy understanding of what is running on your cluster, what has recently changed, how it was changed, and by whom. And by change, we mean all kinds of changes such as new deployments, feature flags, adhoc kubectl commands, health checks, and everything else that affects your cluster.<\/p>\n<p>If during an incident (or even under normal circumstances) you have struggled with questions such as:<\/p>\n<ul>\n<li>What was the last time that application X was deployed?<\/li>\n<li>What manifests were changed yesterday at 5.00 pm?<\/li>\n<li>How do I find the CI pipeline responsible for application Y?<\/li>\n<li>Who changed the configuration of application Z that is a dependency of your own app?<\/li>\n<\/ul>\n<p>then Komodor is here to help you!<\/p>\n<h2>Giving developers the information they really need<\/h2>\n<p>Before diving into the features of Komodor it is important to understand the mindset behind Komodor as it is essentially a tool that doesn\u2019t belong to any existing categories of tools.<\/p>\n<p>When something goes wrong in your cluster, your first impulse is to check your metrics solution. Having metrics enabled for your cluster is a great practice but it is not always enough to troubleshoot issues (especially if it is 3.00 am and you have just woken up looking at a cluster that you are not familiar with).<\/p>\n<p>Current metric solutions share some common characteristics:<\/p>\n<ul>\n<li>Most of them were existing tools created for bare-metal and VMs and simply adapted their functionality for containers with mixed success<\/li>\n<li>They are great at telling you what changed but not why and by whom<\/li>\n<li>Most of the time they offer much information that is not relevant to all cases and it is up to the human to understand which information is important and which is not<\/li>\n<\/ul>\n<p>The problem is further exacerbated by the fact that most existing metric solutions are targeted at operators:<\/p>\n<figure id=\"attachment_19254\" aria-describedby=\"caption-attachment-19254\" style=\"width: 1200px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor.png\"><img class=\"size-full wp-image-19254\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor.png\" alt=\"Without Komodor\" width=\"1200\" height=\"866\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor.png 1200w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor-300x217.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor-1024x739.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor-768x554.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/without-komodor-20x14.png 20w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" \/><\/a><figcaption id=\"caption-attachment-19254\" class=\"wp-caption-text\">Without Komodor<\/figcaption><\/figure>\n<p>The process of troubleshooting a Kubernetes cluster as a developer is particularly difficult with the existing tools. As a developer, you don\u2019t care about Persistence volumes or DNS errors or expired certificates. These problems are not normally solved by developers anyway.<\/p>\n<p>Developers however do care about:<\/p>\n<ul>\n<li>Failed deployments<\/li>\n<li>Errors because a feature flag was enabled<\/li>\n<li>Communication errors that have been caused not by the deployment itself but by a dependency of the application that is being deployed<\/li>\n<li>Rogue manifest changes that are not happening via CI\/CD<\/li>\n<\/ul>\n<p>Komodor bridges this gap by giving you a tool specifically for Kubernetes clusters and specifically for all things important to developers. You can also use Komodor if you are an operator and link it to your existing tools.<\/p>\n<figure id=\"attachment_19255\" aria-describedby=\"caption-attachment-19255\" style=\"width: 1200px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor.png\"><img class=\"size-full wp-image-19255\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor.png\" alt=\"With Komodor\" width=\"1200\" height=\"866\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor.png 1200w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor-300x217.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor-1024x739.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor-768x554.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/with-komodor-20x14.png 20w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" \/><\/a><figcaption id=\"caption-attachment-19255\" class=\"wp-caption-text\">With Komodor<\/figcaption><\/figure>\n<p>Helping developers and operators collaborate and share a common language for solving issues is at the heart of DevOps.<\/p>\n<h2>How Komodor works<\/h2>\n<p>Komodor is offered as a hybrid application. The web UI runs in the cloud and is managed by the Komodor team. You need to install in your cluster <a href=\"https:\/\/github.com\/komodorio\/helm-charts\/tree\/master\/charts\/k8s-watcher\">the komodor agent<\/a> as a Helm chart that then pushes information with the cloud UI. This means that communication for your cluster is outgoing only. There is no need to open any ports in your firewall or modify your allowlist with specific port ranges.<\/p>\n<p>Once your agent is installed successfully your dashboard will be automatically populated. From now on Komodor is monitoring several events in your cluster and the web UI is updated in real time.<\/p>\n<figure id=\"attachment_19259\" aria-describedby=\"caption-attachment-19259\" style=\"width: 1546px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard.png\"><img class=\"size-full wp-image-19259\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard.png\" alt=\"\" width=\"1546\" height=\"773\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard.png 1546w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard-300x150.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard-1024x512.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard-768x384.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard-1536x768.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/simple-dashboard-20x10.png 20w\" sizes=\"(max-width: 1546px) 100vw, 1546px\" \/><\/a><figcaption id=\"caption-attachment-19259\" class=\"wp-caption-text\">Komodor example<\/figcaption><\/figure>\n<p>Currently Komodor supports Deployments, Daemonsets and StatefulSets. The left sidebar has a list of all your namespaces along with some extra information as we will see later on.<\/p>\n<p>Support for custom CRDs is something that may come in the future.<\/p>\n<h2>Using the Komodor timeline<\/h2>\n<p>At the heart of Komodor is the event timeline. If you click on any service\/deployment from your dashboard you will see the complete timeline for this service (from the time the Komodor agent was installed of course)<\/p>\n<figure id=\"attachment_19260\" aria-describedby=\"caption-attachment-19260\" style=\"width: 1282px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline.png\"><img class=\"size-full wp-image-19260\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline.png\" alt=\"Event timeline\" width=\"1282\" height=\"851\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline.png 1282w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline-300x199.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline-1024x680.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline-768x510.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/timeline-20x13.png 20w\" sizes=\"(max-width: 1282px) 100vw, 1282px\" \/><\/a><figcaption id=\"caption-attachment-19260\" class=\"wp-caption-text\">Event timeline<\/figcaption><\/figure>\n<p>The timeline is one of the major advantages for Komodor because it captures all events that affect your application. Out of the box Komodor monitors your application for restarts, replica changes, manifest changes, health status changes and so on. By adding extra integrations you can also add in the timeline events from external providers (e.g. get alerts from Graphana, New Relic or Datadog).<\/p>\n<p>The beauty of this mechanism is that Komodor can understand ALL events that happened in your application regardless of their source. This comes in contrast with other Kubernetes tools that only know about their own events and don\u2019t have the full picture of what was changed when.<\/p>\n<p>As an example for a single application the following might happen:<\/p>\n<ul>\n<li>The deployment image was upgraded by your CI\/CD system<\/li>\n<li>The pod autoscaler changed the amount of replicas to better handle traffic<\/li>\n<li>An alert was created by New Relic<\/li>\n<li>A system administrator changed manually a manifest via kubectl<\/li>\n<\/ul>\n<p>Komodor will gather all of these events and present them in the same timeline in chronological order. This gives you great insight into what is happening with a single service without having to jump between different applications and dashboards.<\/p>\n<p>The last case is very important as this means that Komodor will catch even adhoc changes performed manually in the cluster (e.g. with kubectl edit).<\/p>\n<p>In the example below I have manually changed the replicas with kubectl without deploying a new version via CI\/CD. Komodor not only identifies the manifest and marks it as \u201cchange replicas\u201d in the timeline, but also provides me with a detailed diff on what changed.<\/p>\n<figure id=\"attachment_19261\" aria-describedby=\"caption-attachment-19261\" style=\"width: 1534px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change.png\"><img class=\"size-full wp-image-19261\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change.png\" alt=\"Manifest Change\" width=\"1534\" height=\"772\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change.png 1534w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change-300x151.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change-1024x515.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change-768x387.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/manifest-change-20x10.png 20w\" sizes=\"(max-width: 1534px) 100vw, 1534px\" \/><\/a><figcaption id=\"caption-attachment-19261\" class=\"wp-caption-text\">Manifest Change<\/figcaption><\/figure>\n<p>Detecting manual configuration changes is very important as they can be responsible for failed deployments (the well known phenomenon of configuration drift). Several times after a failed deployment developers will waste time by thinking about issues with their code, while in reality the problem was that somebody changed the cluster or the application in an un-audited manner.<\/p>\n<figure id=\"attachment_19262\" aria-describedby=\"caption-attachment-19262\" style=\"width: 1487px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new.png\"><img class=\"size-full wp-image-19262\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new.png\" alt=\"Kubernetes drift problems\" width=\"1487\" height=\"914\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new.png 1487w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new-300x184.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new-1024x629.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new-768x472.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/k8s-drift-new-20x12.png 20w\" sizes=\"(max-width: 1487px) 100vw, 1487px\" \/><\/a><figcaption id=\"caption-attachment-19262\" class=\"wp-caption-text\">Kubernetes drift problems<\/figcaption><\/figure>\n<p>With Komodor it is now possible to see both planned and unplanned changes in the same pipeline.<\/p>\n<h2>Correlating events between related services<\/h2>\n<p>Looking at each service on its own offers great insight into what your application is doing at all times. However, the true power of Komodor becomes more apparent when you select multiple services either from the same namespace or from different namespaces.<\/p>\n<figure id=\"attachment_19263\" aria-describedby=\"caption-attachment-19263\" style=\"width: 1533px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services.png\"><img class=\"size-full wp-image-19263\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services.png\" alt=\"Related services\" width=\"1533\" height=\"856\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services.png 1533w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services-300x168.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services-1024x572.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services-768x429.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/related-services-20x11.png 20w\" sizes=\"(max-width: 1533px) 100vw, 1533px\" \/><\/a><figcaption id=\"caption-attachment-19263\" class=\"wp-caption-text\">Related services<\/figcaption><\/figure>\n<p>Komodor then will do a smart merge of all events and present you a unified timeline with the events of all selected services (still in chronological order among them).<\/p>\n<p>The importance of this view cannot be overstated. The health of a service might be affected by other dependent services, so having this unified overview is a timesaver for detecting issues not with a service itself but with its dependencies.<\/p>\n<p>If you have ever been on call you might recognize the following scenario:<\/p>\n<ol>\n<li>You are paged at 3.00 am in the morning to fix an issue with application A, an application that you are already familiar with<\/li>\n<li>You check your dashboards and realize that no deployment has happened for application A in the last week. Then you start looking for configuration changes and your Git history says that no configuration changes have been made lately.<\/li>\n<li>Getting the hint that another dependent service might be the issue you start looking at other dependent projects B, C, D etc which is a time consuming process<\/li>\n<li>Since you are not familiar with the dependent projects you need to ask other people (and possibly wake them up) in order to see if their configuration was changed or not. You also spend extra time to check the CI\/CD pipelines for those services.<\/li>\n<li>This process can continue in more depth (i.e. check transitive dependencies of your dependencies)<\/li>\n<li>In the end you find out that earlier that day a sys admin from an unrelated team did a manual change (not recorded with CI\/CD) in a dependent service that resulted in your application failing over the next hours.<\/li>\n<\/ol>\n<p>Having Komodor in place can cut down this process from several hours to some minutes. Now you can simply gather all dependent services in a single timeline and see exactly what happened with all of them including manual changes.<\/p>\n<p>You can make this process even easier if you help Komodor understand what \u201crelated services\u201d means for you. While you can always manually select additional services that you consider related, Komodor has native integration for Kiali\/Istio and Datadog that will automatically look at network dependencies between services and understand all the dependencies between your services.<\/p>\n<h2>Annotating your applications with extra metadata<\/h2>\n<p>In the previous section we talked about how Komodor detects manifest changes automatically and can even present you a diff on what changed.<\/p>\n<p>But what about application changes? In most cases (especially if you are following GitOps) the application source code is in a separate Git repository that has nothing to do with the repository that holds your manifests.<\/p>\n<p>Komodor has native integration with Github in the form of extra annotations. By annotating your deployments with extra information for the Git repositories that comprise your application Komodor can communicate with GitHub and present you with diff for both application code AND manifests. This is a huge advantage when it comes to troubleshooting, as you can follow both infrastructure and code changes all at once.<\/p>\n<p>Here is an example of the annotations.<\/p>\n<pre>apiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  annotations:\n    app.komodor.com\/app: https:\/\/github.com\/kostis-codefresh\/gitops-app-source-code\n    app.komodor.com\/app.ref: refs\/heads\/dummy\n    app.komodor.com\/deploy.job.jenkins: https:\/\/codefresh.io\n    app.komodor.com\/infra: kostis-codefresh\/gitops-kubernetes-configuration\n    app.komodor.com\/infra.ref: refs\/heads\/master\n    app.komodor.com\/pipelines: https:\/\/github.com\/kostis-codefresh\/gitops-pipelines\n    app.komodor.com\/pipelines.ref: HEAD\n<\/pre>\n<p>And here is the extra information in the UI<\/p>\n<figure id=\"attachment_19264\" aria-describedby=\"caption-attachment-19264\" style=\"width: 1533px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff.png\"><img class=\"size-full wp-image-19264\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff.png\" alt=\"Github diff\" width=\"1533\" height=\"789\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff.png 1533w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff-300x154.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff-1024x527.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff-768x395.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/github-diff-20x10.png 20w\" sizes=\"(max-width: 1533px) 100vw, 1533px\" \/><\/a><figcaption id=\"caption-attachment-19264\" class=\"wp-caption-text\">Github diff<\/figcaption><\/figure>\n<p>Notice that Github information is just one example of annotations that you can add to your service. Komodor supports other types of annotations such as links to your metrics, your alert provider, your CI pipeline, your playbook and so on.<\/p>\n<p>This means that with Komodor you can easily explore a cluster that you are not familiar with. And instead of hunting down information in slack channels or company wikis (or even worse having to wake up people in the middle of an incident) you have all the information at hand right within Komodor.<\/p>\n<p>If you think you have seen this type of annotation before you are not mistaken. They are also used <a href=\"https:\/\/ambassadorlabs.github.io\/k8s-for-humans\/\">by Ambassador<\/a> for creating a developer portal. Right now Komodor introduces its own annotations, but in the future it would be great if we have a common standard for this type of information.<\/p>\n<h2>Recovering from incidents with Komodor<\/h2>\n<p>I hope that you now have a good idea on what Komodor offers. It is not a replacement for your metrics or alerts. It complements them both by offering a unified dashboard for your cluster with the information that you need specifically for Kubernetes applications:<\/p>\n<ol>\n<li>An overview of all services and their health<\/li>\n<li>A comprehensive timeline for all events that affected your service (even adhoc changes)<\/li>\n<li>A way to group related services and merge their timeline together<\/li>\n<li>Information on both infrastructure and application code changes in the same dashboard<\/li>\n<li>A way to add extra annotations to your services for handy links to CI, playbooks, metrics etc.<\/li>\n<\/ol>\n<p>Komodor will change the way that you manage incidents and depending on the amount of effort you assign to it (particularly with external integrations) you can cut down significantly the amount of time wasted looking for information during an incident.<\/p>\n<p>To start exploring Komodor and change the way you troubleshoot your Kubernetes applications, join us for our <a href=\"https:\/\/komodor.com\/removing-ci-cd-blockers-navigating-k8s-with-codefresh-komodor\/\">Webinar<\/a> on September 1!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"19251\"\/>","protected":false},"excerpt":{"rendered":"<p>The container ecosystem is moving very fast and new tools designed specifically for Kubernetes clusters are introduced at a very fast pace. Even though several times a new tool is simply implementing a well-known mechanism (already present in the VM world) with a focus on containers, every once in a while we see tools that &hellip; <a href=\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":19258,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5467,1657],"tags":[22,44,52,64],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Troubleshooting Kubernetes Clusters as a Developer with Komodor | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Troubleshooting Kubernetes Clusters as a Developer with Komodor\" \/>\n<meta property=\"og:description\" content=\"The container ecosystem is moving very fast and new tools designed specifically for Kubernetes clusters are introduced at a very fast pace. Even though several times a new tool is simply implementing a well-known mechanism (already present in the VM world) with a focus on containers, every once in a while we see tools that &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-05-13T16:12:36+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-08-19T19:17:27+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1024\" \/>\n\t<meta property=\"og:image:height\" content=\"350\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"11 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png\",\"width\":1024,\"height\":350,\"caption\":\"Komodor blog picture\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#webpage\",\"url\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/\",\"name\":\"Troubleshooting Kubernetes Clusters as a Developer with Komodor | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#primaryimage\"},\"datePublished\":\"2021-05-13T16:12:36+00:00\",\"dateModified\":\"2021-08-19T19:17:27+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Troubleshooting Kubernetes Clusters as a Developer with Komodor\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Troubleshooting Kubernetes Clusters as a Developer with Komodor\",\"datePublished\":\"2021-05-13T16:12:36+00:00\",\"dateModified\":\"2021-08-19T19:17:27+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#webpage\"},\"wordCount\":2078,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png\",\"keywords\":[\"monitoring\",\"Kubernetes\",\"devops\",\"microservices\"],\"articleSection\":[\"Devops\",\"Kubernetes Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Troubleshooting Kubernetes Clusters as a Developer with Komodor | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/","og_locale":"en_US","og_type":"article","og_title":"Troubleshooting Kubernetes Clusters as a Developer with Komodor","og_description":"The container ecosystem is moving very fast and new tools designed specifically for Kubernetes clusters are introduced at a very fast pace. Even though several times a new tool is simply implementing a well-known mechanism (already present in the VM world) with a focus on containers, every once in a while we see tools that &hellip; Read more","og_url":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-05-13T16:12:36+00:00","article_modified_time":"2021-08-19T19:17:27+00:00","og_image":[{"width":1024,"height":350,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"11 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png","width":1024,"height":350,"caption":"Komodor blog picture"},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#webpage","url":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/","name":"Troubleshooting Kubernetes Clusters as a Developer with Komodor | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#primaryimage"},"datePublished":"2021-05-13T16:12:36+00:00","dateModified":"2021-08-19T19:17:27+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Troubleshooting Kubernetes Clusters as a Developer with Komodor"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Troubleshooting Kubernetes Clusters as a Developer with Komodor","datePublished":"2021-05-13T16:12:36+00:00","dateModified":"2021-08-19T19:17:27+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#webpage"},"wordCount":2078,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/05\/blog-image.png","keywords":["monitoring","Kubernetes","devops","microservices"],"articleSection":["Devops","Kubernetes Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/devops\/troubleshooting-kubernetes-with-komodor\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/19251"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=19251"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/19251\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/19258"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=19251"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=19251"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=19251"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}