{"id":19587,"date":"2021-06-22T12:45:03","date_gmt":"2021-06-22T20:45:03","guid":{"rendered":"https:\/\/codefresh.io\/?p=19587"},"modified":"2021-11-09T17:53:13","modified_gmt":"2021-11-09T17:53:13","slug":"docker-images-net-core","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/","title":{"rendered":"How to Create Docker Images for ASP.NET Core"},"content":{"rendered":"<p>Microsoft has begun working with the Docker team and community so Docker can be used for the following:<\/p>\n<ul>\n<li>Build<\/li>\n<li>Host<\/li>\n<li>Scale .NET applications with ease<\/li>\n<\/ul>\n<h4>What will you learn in this tutorial?<\/h4>\n<p>If you would like to run an ASP.NET Core web app in a Docker container and learn how to create images, we will explain all the steps on how to do the following:<\/p>\n<ul>\n<li>Build a custom image with Dockerfile<\/li>\n<li>Use a prebuilt image hosted by Microsoft<\/li>\n<li>Use a prebuilt image with HTTPS<\/li>\n<\/ul>\n<p>A Docker container image is a standalone, lightweight package that can be executed and contains all the requirements you need to run an application, such as: code, runtime, libraries, and settings. The image can then be pushed to a container registry and pulled to your server to run as a container.<\/p>\n<p>For this demo you can clone or download the ASP.NET Core sample app and run it in Docker containers. The sample app builds in a <a href=\"https:\/\/hub.docker.com\/_\/microsoft-dotnet-sdk\/\">.NET SDK<\/a> container that copies the result of the build into a new image based on the <a href=\"https:\/\/hub.docker.com\/_\/microsoft-dotnet-runtime\/\">.NET Docker Runtime <\/a> image. This demo also works with both Linux and Windows containers too!<\/p>\n<h3>Prerequisites:<\/h3>\n<ul>\n<li><a href=\"https:\/\/dotnet.microsoft.com\/download\">Latest version of ASP.Net Core<\/a><\/li>\n<li>Setup Docker:<\/li>\n<li><a href=\"https:\/\/docs.docker.com\/docker-for-windows\/install\/\">Windows<\/a><\/li>\n<li><a href=\"https:\/\/docs.docker.com\/docker-for-mac\/install\/\">macOS<\/a><\/li>\n<li>Linux distributions:<\/li>\n<li><a href=\"https:\/\/docs.docker.com\/install\/linux\/docker-ce\/centos\/\">CentOS<\/a><\/li>\n<li><a href=\"https:\/\/docs.docker.com\/install\/linux\/docker-ce\/debian\/\">Debian<\/a><\/li>\n<li><a href=\"https:\/\/docs.docker.com\/install\/linux\/docker-ce\/fedora\/\">Fedora<\/a><\/li>\n<li><a href=\"https:\/\/desktop.github.com\/\">GitHub<\/a><\/li>\n<\/ul>\n<h2>Build a custom Docker image with Dockerfile<\/h2>\n<p>Let\u2019s start this tutorial by creating a Docker image from scratch using a Dockerfile for your app. Later on in this tutorial, we\u2019ll explain how to use prebuilt Docker images with your ASP.NET Core web app.<\/p>\n<h4>Prerequisites:<\/h4>\n<ul>\n<li>An ASP.NET Core web app:<\/li>\n<li><a href=\"https:\/\/docs.microsoft.com\/en-us\/visualstudio\/ide\/quickstart-aspnet-core?view=vs-2019\">Create your own app<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/hseligson1\/DockerDemo\">DockerDemo app with Dockerfile<\/a><\/li>\n<li>Note:The Dockerfile within the demo app uses a Docker <a href=\"https:\/\/docs.docker.com\/develop\/develop-images\/multistage-build\/\">multi-stage build feature<\/a> that can be used to build and run in different containers. We&rsquo;ll share more about this in a future blog post.<\/li>\n<\/ul>\n<p><strong>Create a Dockerfile in your project folder<\/strong><br \/>\nThe <a href=\"https:\/\/docs.docker.com\/samples\/dotnetcore\/\">Dockerfile<\/a> is essentially a recipe for creating your Docker image and is added to the project\u2019s root. It includes the necessary commands for a user to build an image when executing <code>docker build<\/code>. For additional details to better understand the commands within the file, please refer to the <a href=\"https:\/\/docs.docker.com\/engine\/reference\/builder\/\">Dockerfile reference<\/a>.<\/p>\n<p><code>Dockerfile<\/code><\/p>\n<pre> \n FROM mcr.microsoft.com\/dotnet\/core\/aspnet:3.1-buster-slim AS base\n WORKDIR \/app\n EXPOSE 80\n FROM mcr.microsoft.com\/dotnet\/core\/sdk:3.1-buster AS build\n WORKDIR \/src\n COPY [\"DockerDemo.csproj\", \"\"]\n RUN dotnet restore \".\/DockerDemo.csproj\"\n COPY . .\n WORKDIR \"\/src\/.\"\n RUN dotnet build \"DockerDemo.csproj\" -c Release -o \/app\/build\n FROM build AS publish\n RUN dotnet publish \"DockerDemo.csproj\" -c Release -o \/app\/publish\n FROM base AS final\n WORKDIR \/app\n COPY --from=publish \/app\/publish .\n ENTRYPOINT [\"dotnet\", \"DockerDemo.dll\"]\n<\/pre>\n<p><strong>Create a .dockerignore file<\/strong><br \/>\nSimilar to a .gitignore file a <a href=\"https:\/\/docs.docker.com\/engine\/reference\/builder\/#dockerignore-file\">.dockerignore<\/a> file allows you to mention a list of files or directories that you want to ignore while building the Docker image. This is essential because it helps reduce the size of an image and speeds up the docker building process.<\/p>\n<p>Note: We also have an excellent article reviewing the <a href=\"https:\/\/codefresh.io\/docker-tutorial\/not-ignore-dockerignore-2\/\">.dockerignore<\/a> file that you might enjoy<\/p>\n<p><code>.dockerignore<\/code><\/p>\n<pre> class=\"\"&gt; **\/.classpath\n **\/.dockerignore\n **\/.env\n **\/.git\n **\/.gitignore\n **\/.project\n **\/.settings\n **\/.toolstarget\n **\/.vs\n **\/.vscode\n **\/*.*proj.user\n **\/*.dbmdl\n **\/*.jfm\n **\/azds.yaml\n **\/bin\n **\/charts\n **\/docker-compose*\n **\/Dockerfile*\n **\/node_modules\n **\/npm-debug.log\n **\/obj\n **\/secrets.dev.yaml\n **\/values.dev.yaml\n LICENSE\n README.md\n<\/pre>\n<p><strong>Build Docker image and start container<\/strong><br \/>\nThe <a href=\"https:\/\/docs.docker.com\/engine\/reference\/commandline\/build\/\">docker build<\/a> builds a Docker image from the Dockerfile and a <a href=\"https:\/\/docs.docker.com\/engine\/reference\/commandline\/build\/#examples\">\u201ccontext\u201d<\/a>. The context is a set of files located in a specified PATH or URL.<\/p>\n<p>Open the terminal or command prompt and navigate to your project folder. Use the following command to build your Docker image:<\/p>\n<pre class=\"\">docker build -t dockerdemo .\n<\/pre>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg.png\" alt=\"\" width=\"512\" height=\"166\" class=\"alignnone size-full wp-image-19625\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg-300x97.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg-20x6.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><\/p>\n<p>This returns the status of your build.<\/p>\n<p><strong>Create and run container<\/strong><br \/>\nThe <a href=\"https:\/\/docs.docker.com\/engine\/reference\/commandline\/run\/\">docker run <\/a>command creates a new container and runs the Docker image.<\/p>\n<p>Open the terminal or command prompt and use the following command to run your Docker image:<\/p>\n<pre>docker run -d -p 8080:80 --name myapp dockerdemo\n<\/pre>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerRunImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerRunImg.png\" alt=\"\" width=\"512\" height=\"41\" class=\"alignnone size-full wp-image-19629\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerRunImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerRunImg-300x24.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerRunImg-20x2.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><br \/>\nCheck that the container was created and is running with the command:<\/p>\n<pre>docker ps\n<\/pre>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPsImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPsImg.png\" alt=\"\" width=\"512\" height=\"26\" class=\"alignnone size-full wp-image-19628\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPsImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPsImg-300x15.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPsImg-20x1.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><br \/>\nLastly, go to <a href=\"http:\/\/localhost:8080\/\">http:\/\/localhost:8080\/<\/a> to access your app in a web browser.<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/LocalHostImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/LocalHostImg.png\" alt=\"\" width=\"512\" height=\"300\" class=\"alignnone size-full wp-image-19630\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/LocalHostImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/LocalHostImg-300x176.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/LocalHostImg-20x12.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><\/p>\n<h4>Note:<\/h4>\n<p>The Dockerfile and the .dockerignore files are generated for an ASP.NET Core Web app in Visual Studio 2019 when you select Create a new project and Docker is enabled. For more information, you can reference the <a href=\"https:\/\/docs.microsoft.com\/en-us\/visualstudio\/containers\/container-tools?view=vs-2019\">Quickstart guide for Docker in Visual Studio<\/a>.<\/p>\n<p>You can also generate a Dockerfile and .dockerignore file in Visual Studio Code by opening the Command Palette and utilizing the <strong>Docker:Add Docker Files to Workspace <\/strong>command. For more information you can reference the <a href=\"https:\/\/code.visualstudio.com\/docs\/containers\/overview\">Working with containers guide<\/a>.<\/p>\n<h2>Fetch, Build, and Run a prebuilt Docker image<\/h2>\n<p>Now that you\u2019re familiar with how to create a Docker image with a Dockerfile, let\u2019s dive into using a prebuilt image for your ASP.NET Core app.<\/p>\n<h4>Prerequisites:<\/h4>\n<p>Download\/Clone sample app <a href=\"https:\/\/github.com\/dotnet\/dotnet-docker\">https:\/\/github.com\/dotnet\/dotnet-docker<\/a><\/p>\n<p>Assuming you cloned the sample app, you can now access existing prebuilt Docker images. You can reference existing Docker images at the public register, <a href=\"https:\/\/hub.docker.com\/_\/microsoft-dotnet-core\">Docker Hub<\/a>. Search for .NET Core and you will find several repos hosted by Microsoft.<\/p>\n<p>Run the sample app and execute the following command in your terminal:<\/p>\n<pre>docker run -p 8000:80 --name my_sample \nmcr.microsoft.com\/dotnet\/core\/samples:aspnetapp\n<\/pre>\n<p>This command is fetching and running your container which is stored within:<\/p>\n<pre>mcr.microsoft.com\/dotnet\/core\/samples\n<\/pre>\n<p>If you receive an error, it\u2019s likely a port conflict, and you\u2019ll need to select a port you\u2019re not using.<\/p>\n<p>However, your output should look like the following:<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg.png\" alt=\"\" width=\"512\" height=\"166\" class=\"alignnone size-full wp-image-19625\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg-300x97.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerBuildImg-20x6.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><br \/>\nView all the images that you are currently running by simply running the command:<\/p>\n<pre>docker ps\n<\/pre>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPs2Img.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPs2Img.png\" alt=\"\" width=\"512\" height=\"104\" class=\"alignnone size-full wp-image-19627\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPs2Img.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPs2Img-300x61.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerPs2Img-20x4.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><br \/>\nThis returns a lot of helpful information, including your container ID, the registry location, and even the command used to run it.<\/p>\n<p>Launch your browser and navigate to: <a href=\"http:\/\/localhost:8000\">http:\/\/localhost:8000<\/a><\/p>\n<p>Note:\u00a0If you&#8217;ve changed your port, make sure you also change this url.<br \/>\n<a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/AspNetAppLHImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/AspNetAppLHImg.png\" alt=\"\" width=\"512\" height=\"257\" class=\"alignnone size-full wp-image-19624\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/AspNetAppLHImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/AspNetAppLHImg-300x151.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/AspNetAppLHImg-20x10.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><br \/>\nWasn\u2019t that easy? This demonstrates the simplicity and value of containerization and not having to worry about infrastructure complexities.<\/p>\n<p>Next, run the command:<\/p>\n<pre>docker image list\n<\/pre>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerImgListImg.png\"><img src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerImgListImg.png\" alt=\"\" width=\"512\" height=\"233\" class=\"alignnone size-full wp-image-19626\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerImgListImg.png 512w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerImgListImg-300x137.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/DockerImgListImg-20x9.png 20w\" sizes=\"(max-width: 512px) 100vw, 512px\" \/><\/a><br \/>\nThe screenshot above is a list of all the installed images, with the latest at the top.<\/p>\n<p>This demonstrates how to serve an image over HTTP locally; however, with containerization you should run your containers over HTTPS. HTTPS provides a secure channel within an insecure network by relying on <a href=\"https:\/\/en.wikipedia.org\/wiki\/Public_key_certificate\">certificates<\/a> and encryption.<\/p>\n<h2>Build prebuilt Docker images with HTTPS<\/h2>\n<p>You\u2019re on a roll! Let&#8217;s review how to build prebuilt container images with HTTPS. ASP.NET Core uses <a href=\"https:\/\/docs.microsoft.com\/en-us\/aspnet\/core\/security\/enforcing-ssl?view=aspnetcore-5.0&amp;tabs=visual-studio\">HTTPS by default<\/a> for security purposes because it encrypts the traffic between the client and server, so others can&#8217;t see and prevents any modifications from malicious attackers.<\/p>\n<h4>Prerequisites:<\/h4>\n<p>.NET Core 3.1 or .NET<\/p>\n<h4>Certificates<\/h4>\n<p>For both Windows and macOS or Linux operating systems you will need a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Self-signed_certificate\">self-signed development certificate<\/a> to host the image locally for non-production purposes. Using this certificate helps enable HTTPS on the server and protect your data using a <a href=\"https:\/\/www.ssl.com\/faqs\/faq-what-is-ssl\/\">Secure Socket Layer<\/a> (SSL). This can be done multiple ways, and some of those ways are by utilizing <a href=\"https:\/\/docs.microsoft.com\/en-us\/dotnet\/core\/additional-tools\/self-signed-certificates-guide#with-dotnet-dev-certs\">dotnet dev-certs<\/a>, <a href=\"https:\/\/docs.microsoft.com\/en-us\/dotnet\/core\/additional-tools\/self-signed-certificates-guide#with-powershell\">Powershell<\/a>, and <a href=\"https:\/\/docs.microsoft.com\/en-us\/dotnet\/core\/additional-tools\/self-signed-certificates-guide#with-openssl\">OpenSSL<\/a>. This way you can access your application from either port for demo purposes. There\u2019s no right or wrong way to go about this. However, these instructions are similar to using a production certificate you can request within your team.<\/p>\n<ul>\n<li><a href=\"http:\/\/localhost:8000\">http:\/\/localhost:8000<\/a><\/li>\n<li><a href=\"https:\/\/localhost:8001\">https:\/\/localhost:8001<\/a><\/li>\n<\/ul>\n<h4>Windows using Windows containers<\/h4>\n<p>From your Windows terminal, use the following command to generate the cert and configure your local machine (make sure to replace \u201cmy password\u201d with something unique):<\/p>\n<pre>dotnet dev-certs https -ep %USERPROFILE%\\.aspnet\\https\\aspnetapp.pfx -p mypassword\ndotnet dev-certs https --trust\n<\/pre>\n<p>Afterwards, execute the docker pull\/run commands to run the container image with ASP.NET Core configured for HTTPS (make sure your password matches the one you assigned for the certificate):<\/p>\n<pre>docker pull mcr.microsoft.com\/dotnet\/samples:aspnetapp\n\ndocker run --rm -it -p 8000:80 -p 8001:443 -e \nASPNETCORE_URLS=\"https:\/\/+;http:\/\/+\" -e ASPNETCORE_HTTPS_PORT=8001 -e \nASPNETCORE_Kestrel__Certificates__Default__Password=\"mypassword\" -e \nASPNETCORE_Kestrel__Certificates__Default__Path=\\https\\aspnetapp.pfx -v \n%USERPROFILE%\\.aspnet\\https:C:\\https\\ \nmcr.microsoft.com\/dotnet\/samples:aspnetapp\n<\/pre>\n<p>If you want to learn more about configuring Windows using a Linux container, you can reference the <a href=\"https:\/\/docs.microsoft.com\/en-us\/virtualization\/windowscontainers\/quick-start\/quick-start-windows-10-linux\">Microsoft documentation<\/a> for details.<\/p>\n<h4>MacOs\/Linux<\/h4>\n<p>From your Mac\/Linux terminal, you can execute this command to generate a certificate and configure your local machine (make sure to replace \u201cmy password\u201d with something unique):<\/p>\n<pre> \ndotnet dev-certs https -ep ${HOME}\/.aspnet\/https\/aspnetapp.pfx -p \nmypassword dotnet dev-certs https \u2013trust\n<\/pre>\n<p>We should note that depending on which Linux distribution you\u2019re utilizing, the command: <code>dotnet dev-certs https -trust<\/code> may not work, and you may need to find an alternative way by researching the specific distribution\u2019s documentation.<\/p>\n<p>Then, execute the following command to run the container image with ASP.NET Core and configure with HTTPS (make sure your password matches the one you assigned for the certificate):<\/p>\n<pre> \ndocker pull mcr.microsoft.com\/dotnet\/samples:aspnetapp\n\ndocker run --rm -it -p 8000:80 -p 8001:443 -e\nASPNETCORE_URLS=\"https:\/\/+;http:\/\/+\" -e\nASPNETCORE_HTTPS_PORT=8001 -e ASPNETCORE_Kestrel__Certificates__Default__Password=\"mypassword\" -e \nASPNETCORE_Kestrel__Certificates__Default__Path=\/https\/aspnetapp.pfx -v\n${HOME}\/.aspnet\/https:\/https\/ mcr.microsoft.com\/dotnet\/samples:aspnetapp\n<\/pre>\n<h2>Summary<\/h2>\n<p>Within this demonstration, you were able to get familiar with Docker and fetch, build, and run a prebuilt ASP.NET Core container image and serve the container over to HTTPS. You also were able to touch on some of the core concepts such as the images and using a DockerFile and .dockerignore file. Nice work!<\/p>\n<p>In a future blog post, we\u2019ll review 3 different ways to create a Docker image for .NET, so stay tuned!<\/p>\n<p>Cover photo by <a href=\"https:\/\/www.pexels.com\/photo\/close-up-photography-of-black-and-green-computer-keyboard-keys-51415\/\">Pexels<\/a>.<\/li>\n<\/ul>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"19587\"\/>","protected":false},"excerpt":{"rendered":"<p>Microsoft has begun working with the Docker team and community so Docker can be used for the following: Build Host Scale .NET applications with ease What will you learn in this tutorial? If you would like to run an ASP.NET Core web app in a Docker container and learn how to create images, we will &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/\">Read more<\/a><\/p>\n","protected":false},"author":98,"featured_media":20607,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8,6],"tags":[14,24,5718],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to Create Docker Images for ASP.NET Core | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to Create Docker Images for ASP.NET Core\" \/>\n<meta property=\"og:description\" content=\"Microsoft has begun working with the Docker team and community so Docker can be used for the following: Build Host Scale .NET applications with ease What will you learn in this tutorial? If you would like to run an ASP.NET Core web app in a Docker container and learn how to create images, we will &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-06-22T20:45:03+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-11-09T17:53:13+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2560\" \/>\n\t<meta property=\"og:image:height\" content=\"1571\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@TechWithHannah\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Hannah Seligson\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg\",\"width\":2560,\"height\":1571},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/\",\"name\":\"How to Create Docker Images for ASP.NET Core | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#primaryimage\"},\"datePublished\":\"2021-06-22T20:45:03+00:00\",\"dateModified\":\"2021-11-09T17:53:13+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"How to Create Docker Images for ASP.NET Core\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212\"},\"headline\":\"How to Create Docker Images for ASP.NET Core\",\"datePublished\":\"2021-06-22T20:45:03+00:00\",\"dateModified\":\"2021-11-09T17:53:13+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#webpage\"},\"wordCount\":1335,\"commentCount\":3,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg\",\"keywords\":[\"docker\",\"Containers\",\"Dot Net\"],\"articleSection\":[\"Docker Tutorials\",\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212\",\"name\":\"Hannah Seligson\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png\",\"caption\":\"Hannah Seligson\"},\"description\":\"Hannah is a developer advocate who loves to create content that empowers devs with resources and tools. She's currently learning more about GitOps and Argo!\",\"sameAs\":[\"http:\/\/codefresh.io\",\"https:\/\/twitter.com\/@TechWithHannah\"],\"url\":\"https:\/\/codefresh.io\/author\/hannah\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"How to Create Docker Images for ASP.NET Core | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/","og_locale":"en_US","og_type":"article","og_title":"How to Create Docker Images for ASP.NET Core","og_description":"Microsoft has begun working with the Docker team and community so Docker can be used for the following: Build Host Scale .NET applications with ease What will you learn in this tutorial? If you would like to run an ASP.NET Core web app in a Docker container and learn how to create images, we will &hellip; Read more","og_url":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-06-22T20:45:03+00:00","article_modified_time":"2021-11-09T17:53:13+00:00","og_image":[{"width":2560,"height":1571,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@TechWithHannah","twitter_site":"@codefresh","twitter_misc":{"Written by":"Hannah Seligson","Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg","width":2560,"height":1571},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/","name":"How to Create Docker Images for ASP.NET Core | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#primaryimage"},"datePublished":"2021-06-22T20:45:03+00:00","dateModified":"2021-11-09T17:53:13+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"How to Create Docker Images for ASP.NET Core"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212"},"headline":"How to Create Docker Images for ASP.NET Core","datePublished":"2021-06-22T20:45:03+00:00","dateModified":"2021-11-09T17:53:13+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#webpage"},"wordCount":1335,"commentCount":3,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/06\/keyboard-chris-j-davis-PT_9ux0j-x4-unsplash-scaled.jpg","keywords":["docker","Containers","Dot Net"],"articleSection":["Docker Tutorials","How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/docker-tutorial\/docker-images-net-core\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212","name":"Hannah Seligson","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png","caption":"Hannah Seligson"},"description":"Hannah is a developer advocate who loves to create content that empowers devs with resources and tools. She's currently learning more about GitOps and Argo!","sameAs":["http:\/\/codefresh.io","https:\/\/twitter.com\/@TechWithHannah"],"url":"https:\/\/codefresh.io\/author\/hannah\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/19587"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/98"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=19587"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/19587\/revisions"}],"predecessor-version":[{"id":20608,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/19587\/revisions\/20608"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/20607"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=19587"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=19587"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=19587"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}