{"id":20287,"date":"2021-09-30T13:14:26","date_gmt":"2021-09-30T13:14:26","guid":{"rendered":"https:\/\/codefresh.io\/?p=20287"},"modified":"2022-03-22T16:00:21","modified_gmt":"2022-03-22T16:00:21","slug":"using-helm-with-gitops","status":"publish","type":"post","link":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/","title":{"rendered":"Using Helm with GitOps"},"content":{"rendered":"<p><span style=\"font-weight: 400;\">This is the first of many posts highlighting GitOps topics that we\u2019ll be exploring. Within this post, we will explore Helm, a tool used for Kubernetes package management, that also provides templating. Helm provides utilities that assist Kubernetes application deployment.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In order to better understand how Helm charts are mapped to Kubernetes manifests, we\u2019ll explain more details below and how to use Helm with and without GitOps.<\/span><\/p>\n<h2>What is Kubernetes?<\/h2>\n<p><a href=\"https:\/\/kubernetes.io\/\"><span style=\"font-weight: 400;\">Kubernetes<\/span><\/a><span style=\"font-weight: 400;\"> is an orchestrator for containers that allows you to automate scheduling, deployments, networking, scaling, and health monitoring for the containers.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Kubernetes was needed because we increased the usage of the following:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Microservices<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Containers<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">This was difficult to manage with scripts and self-made tools and caused the need for orchestration technology like Kubernetes. It provides features like scalability, disaster recovery, and less downtime.<\/span><\/p>\n<h2>What is Helm?<\/h2>\n<p><a href=\"https:\/\/helm.sh\/\"><span style=\"font-weight: 400;\">Helm<\/span><\/a><span style=\"font-weight: 400;\"> is a package manager for Kubernetes. It\u2019s a convenient way for packaging collections of YAML files with a Helm chart for the Kubernetes application and allowing distribution with a Helm repository.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Maintaining Kubernetes manifests is time-consuming and tedious and this is why Helm is helpful!<\/span><\/p>\n<h4>Helm Charts<\/h4>\n<p><span style=\"font-weight: 400;\">Helm Charts are deployable units for Kubernetes applications. These charts are a collection of files inside a directory. This directory is the name of the Helm chart and consists of a self-descriptor file, YAML file, and one or more Kubernetes manifests. Helm charts are typically written in the <\/span><a href=\"https:\/\/pkg.go.dev\/text\/template\"><span style=\"font-weight: 400;\">Go template language<\/span><\/a><span style=\"font-weight: 400;\">. Charts are created as such files, describing a related set of Kubernetes resources. Here\u2019s an example of a Helm chart directory and it\u2019s layout:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/helm-chart-example.png\"><img class=\"alignnone wp-image-20292 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/helm-chart-example.png\" alt=\"\" width=\"280\" height=\"257\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/helm-chart-example.png 280w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/helm-chart-example-20x18.png 20w\" sizes=\"(max-width: 280px) 100vw, 280px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">This particular directory contains a <\/span><span style=\"font-weight: 400;\">Chart.yaml<\/span><span style=\"font-weight: 400;\"> file and this is where the global variables, versions, and descriptions are stored. Then, the templates directory is what contains the YAML files for Kubernetes, otherwise known as the Kubernetes manifests.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Files such as the <\/span><span style=\"font-weight: 400;\">deployment<\/span><span style=\"font-weight: 400;\">, <\/span><span style=\"font-weight: 400;\">service<\/span><span style=\"font-weight: 400;\">, and <\/span><span style=\"font-weight: 400;\">ingress<\/span><span style=\"font-weight: 400;\"> files contain variables from the <\/span><span style=\"font-weight: 400;\">values.yaml<\/span><span style=\"font-weight: 400;\"> file when the chart is deployed. The <\/span><span style=\"font-weight: 400;\">_helpers.tpl<\/span><span style=\"font-weight: 400;\"> incorporates helpful functions for variable calculations.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">You can then share the Helm chart to increase easy reusability for others to use. Sharing is done by storing the chart to a Helm repository. This repository can then be shared with others to deploy the application with the chart.<\/span><\/p>\n<h4>Helm Repositories<\/h4>\n<p><span style=\"font-weight: 400;\">Helm supports a chart repository service that can be used to store the Helm charts. You can use any web server host or source code host for the Helm repository.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The repository has an <\/span><span style=\"font-weight: 400;\">index.yaml<\/span><span style=\"font-weight: 400;\"> file that contains metadata about the package, including the <\/span><span style=\"font-weight: 400;\">Chart.yaml<\/span><span style=\"font-weight: 400;\"> file. The index will contain information about each Helm chart in the chart repository. Then the server can serve your index and charts or the packages can be stored in the repository for shareable access.<\/span><\/p>\n<h4>Helm Release<\/h4>\n<p><span style=\"font-weight: 400;\">Each install or upgrade will create a Helm release. A Helm release is a running instance of your Helm chart running within a Kubernetes cluster or a namespace. It\u2019s essentially an instance of a versioned, templated chart. <\/span><span style=\"font-weight: 400;\">It\u2019s also possible to have multiple releases of the same chart in a single cluster or namespace since the chart is self-contained. You can also roll back a Helm release to a previous version in case there are any failures.<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF.png\"><img class=\"alignnone wp-image-20293 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF-1024x632.png\" alt=\"\" width=\"1024\" height=\"632\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF-1024x632.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF-300x185.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF-768x474.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF-1536x948.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF-20x12.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Helm-WF.png 1620w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Assuming you\u2019re a developer with an existing cluster, perhaps you\u2019d like to share your Helm application with an external vendor. Let&#8217;s recap the Helm workflow and release process:<\/span><\/p>\n<ol>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">To share an application with others, you need to create a Helm chart. The chart is a package that contains templates for a set of resources necessary for the application. The template uses variables applied to the <\/span><span style=\"font-weight: 400;\">Values.yaml<\/span><span style=\"font-weight: 400;\"> file when the manifest is created and describes how to configure the resources.<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">The Helm charts are then hosted within a repository that can then be downloaded or accessed from a server. This chart will contain all the necessary resource definitions needed for the developer to run an application.<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Now that you have access to the cluster, you can add new features or bug fixes to the application and update the Helm chart. Helm offers useful tools to manage your releases. You can upgrade the chart and create a new deployment. In Helm a deployed instance of your application is referred to as the release.\u00a0<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">You can now deploy your packaged application to the cluster.<\/span><\/li>\n<\/ol>\n<p><span style=\"font-weight: 400;\">Within this workflow we identified how Helm packages files and deploys them to a cluster. So, how do you apply GitOps to the workflow above? Let\u2019s explore this below&#8230;<\/span><\/p>\n<h2>What is GitOps?<\/h2>\n<p><a href=\"https:\/\/codefresh.io\/gitops\/\"><span style=\"font-weight: 400;\">GitOps<\/span><\/a><span style=\"font-weight: 400;\"> is a paradigm that incorporates best practices applied to the application development workflow all the way to the operating infrastructure of a system.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Some benefits of GitOps are:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Deploying faster and more often<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Easier and quicker error handling and recovery<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Self documenting deployments<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Increased developer productivity and an enhanced experience for teams<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Greater visibility on the lifecycle of developed features<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">These benefits make it easier to handle the applications and allow teams to deliver quality software faster.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">GitOps relies on Git as the single source of truth for declarative configuration and active reconciliation. By adopting the GitOps methodology it provides transparency between the application configuration deployed in a cluster and the one residing in Git.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">A GitOps tool that follows this approach of a Git-based workflow is Argo CD. It\u2019s a continuous delivery tool for Kubernetes that is essentially a GitOps controller that does two-way synchronization. Argo continuously monitors running applications and compares the live state against the desired state in Git and applies it to the cluster. In addition, it also monitors the container registry for new images and updates the workload definitions based on the deployment policies.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">We will mention Argo CD again in this post and can assume that it\u2019s already been installed and implemented within our workflow!<\/span><\/p>\n<h2>GitOps works with all of your existing tools<\/h2>\n<p><span style=\"font-weight: 400;\">Now that you have a good understanding of what Helm is and it\u2019s capabilities, perhaps you\u2019ve considered applying GitOps to your existing or future applications.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Let\u2019s explore the various approaches of how to use GitOps with or without Helm:<\/span><\/p>\n<ol>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Using only Helm (without GitOps)<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Using GitOps (without Helm)<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Using Helm with GitOps<\/span><\/li>\n<\/ol>\n<p><span style=\"font-weight: 400;\">If you\u2019d like to explore these different approaches from a code-base perspective, here is an <\/span><a href=\"https:\/\/github.com\/codefresh-contrib\/helm-gitops-example\/blob\/main\/README.md\"><span style=\"font-weight: 400;\">example project<\/span><\/a><span style=\"font-weight: 400;\"> that you should check out on GitHub that digs deeper into how you can:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Install an application with Helm and deploy locally<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Install an application with Argo CD and deploy locally both within the UI and command line<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">If not, then we\u2019ll be sure to highlight these approaches below!<\/span><\/p>\n<h4>Approach #1: Using only Helm without GitOps<\/h4>\n<p><span style=\"font-weight: 400;\">If you want to use Helm but your organization isn\u2019t quite ready to implement the GitOps workflow, that\u2019s perfectly fine. Helm was created before the GitOps methodology came to fruition, but can still work with GitOps (as we will see in the latter point).<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The workflow allows you to search through Helm repositories for charts and install them to clusters, creating releases. This process enables execution of application deployments on a cluster. The maintenance of YAML manifests for Kubernetes objects is still the same as before. Helm releases are what keeps track of the version history of each chart installation and change and still allows rolling back to the previous cluster version. When installing a chart it creates a release of the new package and it\u2019s the Helm release that deploys the Helm application.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">When using Helm there are some powerful commands you will find useful, please see below.<\/span><\/p>\n<p>To install a new package:<\/p>\n<pre>helm install  \r\n<\/pre>\n<p>To view currently deployed releases:<\/p>\n<pre>helm list<\/pre>\n<p>or<\/p>\n<pre>helm ls\r\n<\/pre>\n<p>To view revision numbers for a particular release:<\/p>\n<pre>helm history \r\n<\/pre>\n<p><span style=\"font-weight: 400;\">To learn more details about these commands and how to use them, reference the <\/span><a href=\"https:\/\/github.com\/codefresh-contrib\/helm-gitops-example\/blob\/main\/README.md\"><span style=\"font-weight: 400;\">example project<\/span><\/a><span style=\"font-weight: 400;\"> in GitHub.<\/span><\/p>\n<h4>Approach #2: Using GitOps without Helm<\/h4>\n<p><span style=\"font-weight: 400;\">If you\u2019re sold on the idea of GitOps, there are alternative tools that can be used if you\u2019re unable to use Helm or choose not to. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">You can use ArgoCD on its own. It is pretty flexible and can work with other templating solutions or even plain manifests. <\/span><span style=\"font-weight: 400;\">Another templating tool that can be used instead of Helm is <\/span><a href=\"https:\/\/kustomize.io\/\"><span style=\"font-weight: 400;\">Kustomize<\/span><\/a><span style=\"font-weight: 400;\">. This tool is built into <\/span><span style=\"font-weight: 400;\"><code>kubectl<\/code><\/span><span style=\"font-weight: 400;\"> and is native to Kubernetes. It allows you to customize Kubernetes configurations using only the Kubernetes API resource files.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Now, let\u2019s explore our third approach about how to implement GitOps using Helm and Argo CD&#8230;<\/span><\/p>\n<h4>Approach #3: Using Helm with GitOps<\/h4>\n<p><span style=\"font-weight: 400;\">Now that you\u2019ve seen how GitOps can be applied without Helm, let\u2019s explore how you can use it with Helm.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">First, the Helm chart and any application changes must be committed in Git prior to being applied to the cluster. Meaning all of your workload definitions in a YAML format, the Helm charts, and any other Kubernetes custom resources that define the cluster\u2019s desired state must be committed to the repo. This way rollbacks and logs are accessible and the state of production can be restored easily.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Within Argo CD you can connect the Git repository using HTTPS and add the URL directly. This then allows you to enable auto-synchronization to automatically synchronize the cluster to the desired state in the Git repository. Once synced successfully, the application status is recognized as Healthy. Otherwise, if the application is OutOfSync, you can rollback or view the release history to resolve the issue.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Here\u2019s an example of a Healthy application in the Argo CD UI.<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI.png\"><img class=\"alignnone wp-image-20301 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI-1024x455.png\" alt=\"\" width=\"1024\" height=\"455\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI-1024x455.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI-300x133.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI-768x341.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI-1536x682.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI-20x9.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/HelmGitOpsArgoUI.png 1712w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">When the application is running you can view its resource components, logs, events, and the health status.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">For good measure, here\u2019s a visual of the Argo CD UI exemplifying an OutOfSync application when the live state deviates from the target state.<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI.png\"><img class=\"alignnone wp-image-20303 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI.png\" alt=\"\" width=\"1764\" height=\"742\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI.png 1764w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI-300x126.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI-1024x431.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI-768x323.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI-1536x646.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/OutOfSyncArgoUI-20x8.png 20w\" sizes=\"(max-width: 1764px) 100vw, 1764px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">If your application had an error or was OutOfSync like the example above, you could execute the argo history command that allows you to view the application deployment history:<\/span><\/p>\n<pre>argocd app history \r\n<\/pre>\n<p>Then, if you need to rollback the deployment you can do so by executing this command:<\/p>\n<pre>argocd app rollback    \r\n<\/pre>\n<p>Essentially, these commands leverage a faster and more secure deployment, by enabling the tracking from the Git repository. It also allows you to track the active Kubernetes resources and events.<\/p>\n<p><span style=\"font-weight: 400;\">Therefore, using source control like this is what classifies this application deployment as GitOps!<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Something important to note is that Argo CD provides native support for Helm, meaning you can directly connect a packaged Helm chart and Argo CD will monitor it for new versions. When this takes place the Helm chart will no longer function as a Helm chart and instead, is rendered with the Helm template when Argo is installed, using the Argo CD application manifest.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Argo CD then deploys and monitors the application components until both states are identical. The application is no longer a Helm application and is now recognized as an Argo app and can only operate by Argo CD. Hence if you execute the <\/span><span style=\"font-weight: 400;\">helm list<\/span><span style=\"font-weight: 400;\"> command, you should no longer be able to view your <\/span><span style=\"font-weight: 400;\">helm release<\/span><span style=\"font-weight: 400;\"> because the Helm metadata no longer exists.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Here\u2019s an example of the command output. As you can see, the Argo CD application is NOT detected as a Helm application.<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Empty-Helm-List.png\"><img class=\"alignnone wp-image-20309 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Empty-Helm-List.png\" alt=\"\" width=\"727\" height=\"65\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Empty-Helm-List.png 727w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Empty-Helm-List-300x27.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Empty-Helm-List-20x2.png 20w\" sizes=\"(max-width: 727px) 100vw, 727px\" \/><\/a><\/p>\n<h2>Summary<\/h2>\n<p><span style=\"font-weight: 400;\">Helm is a powerful tool that is used often with Kubernetes deployments and provides tracking for each release. This helps ensure reliable and quick deployments for development teams.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">So, if you\u2019re completely new to Helm, I suggest referring to our documentation to learn more about it, here:\u00a0<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/helm-tutorial\/helm-deployment-environments\/\"><i><span style=\"font-weight: 400;\">Helm Deployment Environments<\/span><\/i><\/a><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/docs\/docs\/new-helm\/helm-best-practices\/\"><i><span style=\"font-weight: 400;\">Helm Best Practices<\/span><\/i><\/a><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><a href=\"https:\/\/codefresh.io\/helm-tutorial\/simplify-kubernetes-helm-deployments\/\"><i><span style=\"font-weight: 400;\">How to Simplify your Kubernetes Helm Deployments<\/span><\/i><\/a><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">We&#8217;ll discuss additional tools in our next post that can help you and your team continue implementing a GitOps process to your development and infrastructure systems.<\/span><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"20287\"\/>","protected":false},"excerpt":{"rendered":"<p>This is the first of many posts highlighting GitOps topics that we\u2019ll be exploring. Within this post, we will explore Helm, a tool used for Kubernetes package management, that also provides templating. Helm provides utilities that assist Kubernetes application deployment. In order to better understand how Helm charts are mapped to Kubernetes manifests, we\u2019ll explain &hellip; <a href=\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/\">Read more<\/a><\/p>\n","protected":false},"author":98,"featured_media":20335,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2367,3120,5703,1657,6],"tags":[24,44,53,994,4322,5506,5512],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Using Helm with GitOps | Codefresh<\/title>\n<meta name=\"description\" content=\"Within this post, we will explore GitOps Helm, a tool used for Kubernetes package management, that also provides templating.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Using Helm with GitOps\" \/>\n<meta property=\"og:description\" content=\"Within this post, we will explore GitOps Helm, a tool used for Kubernetes package management, that also provides templating.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-09-30T13:14:26+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-22T16:00:21+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png\" \/>\n\t<meta property=\"og:image:width\" content=\"2048\" \/>\n\t<meta property=\"og:image:height\" content=\"680\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@TechWithHannah\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Hannah Seligson\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"10 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png\",\"width\":2048,\"height\":680},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#webpage\",\"url\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/\",\"name\":\"Using Helm with GitOps | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#primaryimage\"},\"datePublished\":\"2021-09-30T13:14:26+00:00\",\"dateModified\":\"2022-03-22T16:00:21+00:00\",\"description\":\"Within this post, we will explore GitOps Helm, a tool used for Kubernetes package management, that also provides templating.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Using Helm with GitOps\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212\"},\"headline\":\"Using Helm with GitOps\",\"datePublished\":\"2021-09-30T13:14:26+00:00\",\"dateModified\":\"2022-03-22T16:00:21+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#webpage\"},\"wordCount\":1948,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png\",\"keywords\":[\"Containers\",\"Kubernetes\",\"CI\/CD\",\"helm\",\"GitOps\",\"Argo CD\",\"Helm Chart\"],\"articleSection\":[\"Helm Tutorials\",\"Continuous Deployment\/Delivery\",\"GitOps\",\"Kubernetes Tutorials\",\"How Tos\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212\",\"name\":\"Hannah Seligson\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png\",\"caption\":\"Hannah Seligson\"},\"description\":\"Hannah is a developer advocate who loves to create content that empowers devs with resources and tools. She's currently learning more about GitOps and Argo!\",\"sameAs\":[\"http:\/\/codefresh.io\",\"https:\/\/twitter.com\/@TechWithHannah\"],\"url\":\"https:\/\/codefresh.io\/author\/hannah\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Using Helm with GitOps | Codefresh","description":"Within this post, we will explore GitOps Helm, a tool used for Kubernetes package management, that also provides templating.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/","og_locale":"en_US","og_type":"article","og_title":"Using Helm with GitOps","og_description":"Within this post, we will explore GitOps Helm, a tool used for Kubernetes package management, that also provides templating.","og_url":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-09-30T13:14:26+00:00","article_modified_time":"2022-03-22T16:00:21+00:00","og_image":[{"width":2048,"height":680,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@TechWithHannah","twitter_site":"@codefresh","twitter_misc":{"Written by":"Hannah Seligson","Est. reading time":"10 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png","width":2048,"height":680},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#webpage","url":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/","name":"Using Helm with GitOps | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#primaryimage"},"datePublished":"2021-09-30T13:14:26+00:00","dateModified":"2022-03-22T16:00:21+00:00","description":"Within this post, we will explore GitOps Helm, a tool used for Kubernetes package management, that also provides templating.","breadcrumb":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Using Helm with GitOps"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212"},"headline":"Using Helm with GitOps","datePublished":"2021-09-30T13:14:26+00:00","dateModified":"2022-03-22T16:00:21+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#webpage"},"wordCount":1948,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/09\/Using_Helm_GitOps_Header-1.png","keywords":["Containers","Kubernetes","CI\/CD","helm","GitOps","Argo CD","Helm Chart"],"articleSection":["Helm Tutorials","Continuous Deployment\/Delivery","GitOps","Kubernetes Tutorials","How Tos"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/helm-tutorial\/using-helm-with-gitops\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212","name":"Hannah Seligson","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png","caption":"Hannah Seligson"},"description":"Hannah is a developer advocate who loves to create content that empowers devs with resources and tools. She's currently learning more about GitOps and Argo!","sameAs":["http:\/\/codefresh.io","https:\/\/twitter.com\/@TechWithHannah"],"url":"https:\/\/codefresh.io\/author\/hannah\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/20287"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/98"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=20287"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/20287\/revisions"}],"predecessor-version":[{"id":21880,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/20287\/revisions\/21880"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/20335"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=20287"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=20287"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=20287"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}