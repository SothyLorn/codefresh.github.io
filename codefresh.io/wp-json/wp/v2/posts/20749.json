{"id":20749,"date":"2021-12-13T12:39:38","date_gmt":"2021-12-13T12:39:38","guid":{"rendered":"https:\/\/codefresh.io\/?p=20749"},"modified":"2022-01-28T00:15:52","modified_gmt":"2022-01-28T00:15:52","slug":"using-gitops-infrastructure-applications-crossplane-argo-cd","status":"publish","type":"post","link":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/","title":{"rendered":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD"},"content":{"rendered":"<p>If you have been following the Codefresh blog for a while, you might have noticed a common pattern in all the articles that talk about Kubernetes deployments. Almost all of them start with a Kubernetes cluster that is already there, and then the article explains how to deploy an application on top.<\/p>\n<p>The reason for this simplification comes mainly from brevity and simplicity. We want to focus on the deployment part of the application and not its infrastructure just to make the article easier to follow. This is the obvious reason.<\/p>\n<p>The hidden reason is that until recently infrastructure deployments were handled in a different manner than applications deployments. Especially in large enterprise companies, the skillset of people that deal with infrastructure and application can vary a lot as the tools of the trade are completely different.<\/p>\n<p>For example, a lot of people that deal with infrastructure <a href=\"https:\/\/codefresh.io\/docs\/docs\/yaml-examples\/examples\/terraform\/\">prefer to use Terraform templates<\/a>, but employ Kustomize\/Helm or other similar tools for application development. While this is a very valid solution, it doesn\u2019t have to be this way.<\/p>\n<p>Now with GitOps you can have a uniform way of dealing with infrastructure and applications.<\/p>\n<h2>GitOps and Terraform<\/h2>\n<p>If you are not familiar with GitOps, head over to <a href=\"https:\/\/opengitops.dev\/\">https:\/\/opengitops.dev\/<\/a> which is the official page of the GitOps working group. The principles of GitOps are the following:<\/p>\n<ol>\n<li>The system is described in a declarative manner. (In practice, this means Kubernetes manifests.)<\/li>\n<li>The definition of the system is versioned and audited. (In practice, it is stored in Git.)<\/li>\n<li>A software agent automatically pulls the Git state and matches the platform state. (In practice, this means Flux\/ArgoCD.)<\/li>\n<li>The state is continuously reconciled. This means that any changes happening in Git should also be reflected in the system, as well as the opposite scenario.<\/li>\n<\/ol>\n<p>If you have already worked with Terraform, you should already understand why it is difficult to apply GitOps to the Terraform CLI. While Terraform only has the first requirement (declarative format), it doesn\u2019t satisfy the other three requirements around Git storage, automatic reconciliation, and two-way sync. As soon as Terraform finishes its job, it doesn\u2019t interface with the system in any way. If you manually delete a Virtual Machine that was created by Terraform, vanilla Terraform doesn\u2019t know about it. And regarding state, Terraform stores its own state which is completely different from the definition files in Git.<\/p>\n<p>So at first glance, getting GitOps to work with infrastructure is a complicated task. You realize that you need to add something on top of vanilla Terraform in order to satisfy the GitOps requirements.<\/p>\n<p>But there is a new kid on the block, and that is <a href=\"https:\/\/crossplane.io\/\">Crossplane<\/a>!<\/p>\n<h2>GitOps and Crossplane<\/h2>\n<p>Crossplane has similar capabilities to Terraform (creating infrastructure) but with the following major differences:<\/p>\n<ol>\n<li>Crossplane itself is a Kubernetes application. (The infrastructure it creates can be anything.)<\/li>\n<li>Crossplane definitions are Kubernetes manifests.<\/li>\n<li>You can either use manifests that describe resources in the common cloud providers or create your own resources.<\/li>\n<\/ol>\n<p>As a simple example here is an EC2 instance described in Crossplane:<\/p>\n<pre>apiVersion: ec2.aws.crossplane.io\/v1alpha1\nkind: Instance\nmetadata:\n  name: sample-instance\nspec:\n  forProvider:\n    region: us-east-1\n    imageId: ami-0dc2d3e4c0f9ebd18\n    securityGroupRefs:\n      - name: sample-cluster-sg\n    subnetIdRef:\n      name: sample-subnet1  \n  providerConfigRef:\n    name: example\n<\/pre>\n<p>You can find more examples for <a href=\"https:\/\/github.com\/crossplane\/provider-aws\/tree\/master\/examples\">Amazon<\/a>, <a href=\"https:\/\/github.com\/crossplane\/provider-gcp\/tree\/master\/examples\">Google<\/a>, and <a href=\"https:\/\/github.com\/crossplane\/provider-azure\/tree\/master\/examples\">Azure<\/a>. Crossplane supports several other providers, and of course <a href=\"https:\/\/github.com\/crossplane\/provider-template\">you can add your own<\/a>.<\/p>\n<p>The important point here is that the file above is a standard Kubernetes manifest. You can:<\/p>\n<ul>\n<li>Apply it with kubectl.<\/li>\n<li>Verify it with manifest verification tools (<a href=\"https:\/\/www.kubeval.com\/\">kubeval <\/a>or <a href=\"https:\/\/github.com\/stackrox\/kube-linter\">kube-linter<\/a>).<\/li>\n<li>Template it with Helm\/Kustomize.<\/li>\n<li>Use any of the tools in the Kubernetes ecosystem to read\/manage\/store it.<\/li>\n<\/ul>\n<p>And since it is a standard manifest, you can of course store it in Git and manage it with ArgoCD for a Full GitOps workflow. The importance of this capability cannot be overstated.<\/p>\n<p>If you combine ArgoCD and Crossplane, you have a full solution for following the GitOps principles with infrastructure and not just applications. Imagine if your ArgoCD dashboard contained this:<\/p>\n<figure id=\"attachment_20751\" aria-describedby=\"caption-attachment-20751\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane.png\"><img class=\"size-large wp-image-20751\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane-1024x539.png\" alt=\"ArgoCD and Crossplane\" width=\"1024\" height=\"539\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane-1024x539.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane-300x158.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane-768x404.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane-1536x809.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane-20x11.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argocd_and_crossplane.png 1605w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-20751\" class=\"wp-caption-text\">ArgoCD and Crossplane<\/figcaption><\/figure>\n<p>Isn\u2019t that cool?<\/p>\n<h2>How ArgoCD and Crossplane work together<\/h2>\n<p>Crossplane offers an easy way to model your infrastructure as Kubernetes manifests. This is great on its own, but if you <a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/getting_started\/\">put ArgoCD in the mix<\/a>, you essentially gain all the advantages of GitOps for your infrastructure.<\/p>\n<ul>\n<li>You know exactly what infrastructure you have simply by looking at the Git repository.<\/li>\n<li>You know exactly what was changed and when by looking at Git history.<\/li>\n<li>The infrastructure state IS the same as the Git state. Terraform has its own state that is used as the single source of truth<\/li>\n<li>You don\u2019t need any external credentials any more.<\/li>\n<li>You can easily rollback to a previous version of your infra with a git reset\/git-revert.<\/li>\n<li>You completely avoid the dreaded configuration drift.<\/li>\n<\/ul>\n<p>The last point is very critical. Terraform only knows what is in your infrastructure during deployment. If you make any manual changes afterwards (e.g. delete some infra), terraform knows absolutely nothing. You need to rerun terraform and pray that the correct action is taken. There are many terraform horror stories about incomplete\/invalid states. Here is one of my favorite <a href=\"https:\/\/www.youtube.com\/watch?v=ix0Tw8uinWs\">tfstate stories from Spotify<\/a>.<\/p>\n<p>ArgoCD will instantly detect any manual changes in your infrastructure, present you a diff, and even allow you to completely discard them if you want.<\/p>\n<figure id=\"attachment_20753\" aria-describedby=\"caption-attachment-20753\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane.png\"><img class=\"size-large wp-image-20753\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane-1024x533.png\" alt=\"Combine ArgoCd and Crossplane\" width=\"1024\" height=\"533\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane-1024x533.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane-300x156.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane-768x400.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/argo-and-crossplane.png 1279w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-20753\" class=\"wp-caption-text\">Combine ArgoCd and Crossplane<\/figcaption><\/figure>\n<p>Essentially ArgoCD is agnostic as to what exactly is described by the Kubernetes manifests it manages. They can be plain Kubernetes applications, Virtual machines, Container registries, Load balancers, object storage, firewall rules, etc.<\/p>\n<h2>Create infrastructure and deploy to it using GitOps<\/h2>\n<p>Now that we saw that you can use ArgoCD and Crossplane together for managing infrastructure, we are now ready to treat applications and the platform they need in the same way.<\/p>\n<p>This means that we can do the following:<\/p>\n<ol>\n<li>Start from nothing.<\/li>\n<li>Use Crossplane to create a Kubernetes cluster.<\/li>\n<li>Commit the crossplane manifest and manage it with ArgoCD.<\/li>\n<li>Use a standard manifest (e.g. deployment) to deploy an application to the cluster that was just created.<\/li>\n<li>Commit that manifest in Git too. Like the application one, ArgoCD will manage it like any other Kubernetes manifest (even though it represents infrastructure).<\/li>\n<\/ol>\n<p>Here is the whole workflow:<\/p>\n<figure id=\"attachment_20754\" aria-describedby=\"caption-attachment-20754\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both.png\"><img class=\"size-large wp-image-20754\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both-1024x777.png\" alt=\"GitOps for everything\" width=\"1024\" height=\"777\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both-1024x777.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both-300x228.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both-768x583.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both-20x15.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/gitops-for-both.png 1200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-20754\" class=\"wp-caption-text\">GitOps for everything<\/figcaption><\/figure>\n<p>The Kubernetes cluster that Crossplane is running on is only used to bootstrap crossplane. It doesn\u2019t get any production workloads on its own. For simple demos, this can be any cluster (even a local one running on your workstation).<\/p>\n<p>The end result is that now you have a unified way to handle both infrastructure and applications right from Argo CD.<\/p>\n<figure id=\"attachment_20755\" aria-describedby=\"caption-attachment-20755\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra.png\"><img class=\"size-large wp-image-20755\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra-1024x537.png\" alt=\"Application and infrastructure management\" width=\"1024\" height=\"537\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra-1024x537.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra-300x157.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra-768x403.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra-1536x806.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/app-and-infra.png 1612w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><figcaption id=\"caption-attachment-20755\" class=\"wp-caption-text\">Application and infrastructure management<\/figcaption><\/figure>\n<p>The process of changing either of them is exactly the same.<\/p>\n<ul>\n<li>If you want to change infrastructure, you commit a change and ArgoCD takes care of it (with the help of Crossplane).<\/li>\n<li>If you want to change your application, you commit a change and ArgoCD takes care of it.<\/li>\n<\/ul>\n<p>They also both gain all the benefits of GitOps. If for example somebody changes the number of replicas in the deployment or tampers with the cluster nodes, ArgoCD will detect the manual changes automatically and give you the ability to discard them completely.<\/p>\n<h2>Why GitOps is the way forward<\/h2>\n<p>The whole point of DevOps is to make everything self-service and promote collaboration between developers and operators. Adopting Crossplane in a GitOps setting means that now both parties have a common language that they can communicate with.<\/p>\n<p>There is no need anymore for separate workflows that are confusing to either of them. Adopting a common workflow for both infrastructure and applications is the embodiment of the DevOps spirit.<\/p>\n<p>If you enjoyed this blog, check out this <a href=\"https:\/\/codefresh.io\/events\/using-gitops-infrastructure-applications-crossplane-argo-cd-webinar\/?utm_source=codefresh_blog&amp;utm_medium=referral&amp;utm_content=webinar_registration&amp;utm_campaign=crossplane_and_argo_webinar\">On-Demand Webinar<\/a> with Tracy P. Holmes and Viktor Farcic to learn more!<\/p>\n<p>If you want to learn more about <a href=\"https:\/\/codefresh.io\/gitops\/\">GitOps <\/a>and how Codefresh has embraced it, check out the <a href=\"https:\/\/codefresh.io\/codefresh-argo-platform\/\">Codefresh DevOps platform for Argo<\/a>. For more information about Crossplane, see the <a href=\"https:\/\/crossplane.io\/\">official site<\/a> and the hosted solution by <a href=\"https:\/\/www.upbound.io\/\">Upbound<\/a>.<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"20749\"\/>","protected":false},"excerpt":{"rendered":"<p>If you have been following the Codefresh blog for a while, you might have noticed a common pattern in all the articles that talk about Kubernetes deployments. Almost all of them start with a Kubernetes cluster that is already there, and then the article explains how to deploy an application on top. The reason for &hellip; <a href=\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":20750,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5467,5703,5722,1657,1538],"tags":[44,52,68,5507,5730],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Using GitOps for Infrastructure and Applications With Crossplane and Argo CD | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD\" \/>\n<meta property=\"og:description\" content=\"If you have been following the Codefresh blog for a while, you might have noticed a common pattern in all the articles that talk about Kubernetes deployments. Almost all of them start with a Kubernetes cluster that is already there, and then the article explains how to deploy an application on top. The reason for &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-12-13T12:39:38+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-28T00:15:52+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/Crossplane_Linkedin.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:title\" content=\"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"\",\"contentUrl\":\"\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#webpage\",\"url\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/\",\"name\":\"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#primaryimage\"},\"datePublished\":\"2021-12-13T12:39:38+00:00\",\"dateModified\":\"2022-01-28T00:15:52+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD\",\"datePublished\":\"2021-12-13T12:39:38+00:00\",\"dateModified\":\"2022-01-28T00:15:52+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#webpage\"},\"wordCount\":1350,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/GitOps_Header_2.png\",\"keywords\":[\"Kubernetes\",\"devops\",\"continuous delivery\",\"ArgoCD\",\"crossplane\"],\"articleSection\":[\"Devops\",\"GitOps\",\"Argo Platform\",\"Kubernetes Tutorials\",\"DevOps Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/","og_locale":"en_US","og_type":"article","og_title":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD","og_description":"If you have been following the Codefresh blog for a while, you might have noticed a common pattern in all the articles that talk about Kubernetes deployments. Almost all of them start with a Kubernetes cluster that is already there, and then the article explains how to deploy an application on top. The reason for &hellip; Read more","og_url":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-12-13T12:39:38+00:00","article_modified_time":"2022-01-28T00:15:52+00:00","og_image":[{"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/Crossplane_Linkedin.png"}],"twitter_card":"summary_large_image","twitter_title":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#primaryimage","inLanguage":"en-US","url":"","contentUrl":""},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#webpage","url":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/","name":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#primaryimage"},"datePublished":"2021-12-13T12:39:38+00:00","dateModified":"2022-01-28T00:15:52+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Using GitOps for Infrastructure and Applications With Crossplane and Argo CD","datePublished":"2021-12-13T12:39:38+00:00","dateModified":"2022-01-28T00:15:52+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#webpage"},"wordCount":1350,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2021\/12\/GitOps_Header_2.png","keywords":["Kubernetes","devops","continuous delivery","ArgoCD","crossplane"],"articleSection":["Devops","GitOps","Argo Platform","Kubernetes Tutorials","DevOps Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/about-gitops\/gitops-for-infrastructure-and-applications\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/20749"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=20749"}],"version-history":[{"count":8,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/20749\/revisions"}],"predecessor-version":[{"id":21137,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/20749\/revisions\/21137"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/20750"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=20749"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=20749"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=20749"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}