{"id":21871,"date":"2022-03-30T19:49:48","date_gmt":"2022-03-30T19:49:48","guid":{"rendered":"https:\/\/codefresh.io\/?p=21871"},"modified":"2022-04-04T15:13:54","modified_gmt":"2022-04-04T15:13:54","slug":"argo-cd-best-practices","status":"publish","type":"post","link":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/","title":{"rendered":"Argo CD Best Practices"},"content":{"rendered":"<h4>What are some best practices when using Argo CD?<\/h4>\n<p>Within this blog post, we\u2019ll be highlighting some best practices tied to <a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/#what-is-argo-cd\">Argo CD<\/a>, that allow you to leverage GitOps easily within your deployment workflow.<br \/>\nBelow we will explain the following:<\/p>\n<ul>\n<li>What is Argo CD<\/li>\n<li>What are some best practices with Argo CD?<\/li>\n<\/ul>\n<h3>What is Argo CD<\/h3>\n<p>Argo CD is the most popular and fastest-growing <a href=\"https:\/\/codefresh.io\/gitops\/\" target=\"_blank\" rel=\"noopener\">GitOps<\/a> tool for Kubernetes. When following a GitOps deployment pattern, Argo CD makes it easy to define a set of applications with their desired state in a repository and where they should be deployed. After a deployment, Argo CD constantly monitors the state and can even catch configuration drift.<\/p>\n<p>Argo CD&#8217;s core component is the <a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/user-guide\/auto_sync\/\" target=\"_blank\" rel=\"noopener\">Applications Controller<\/a> that executes continuous monitoring of applications and then compares them to the live application state against your target state defined within your Git repository.<\/p>\n<p>The Application controller retrieves the desired resource manifest from the Git repository and compares it to the live resource from your Kubernetes cluster.<\/p>\n<p>This approach enables GitOps for your deployment workflow by leveraging Git as your source of truth. Now, let&#8217;s further explore how we can leverage Argo CD best for our deployments!<\/p>\n<p><img width=\"807\" height=\"600\" class=\"wp-image-22014\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/app-status-in-sync.png\" alt=\"App Status - In Sync\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/app-status-in-sync.png 807w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/app-status-in-sync-300x223.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/app-status-in-sync-768x571.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/app-status-in-sync-20x15.png 20w\" sizes=\"(max-width: 807px) 100vw, 807px\" \/><\/p>\n<p>The image above shows the primary Argo CD dashboard with a single Argo application successfully deployed.<\/p>\n<p><a href=\"https:\/\/lh3.googleusercontent.com\/AQ28k1lG1SA_xvJjki5PQJD3Cy4RrxL7BlNca30kW3L_scMn6b9LHPfQkLHrj2dyuetUMQQvQyO2loFmQ0l8V742f3V29ow1ztan82FLuJoXhJCy7AoFERrpT34uRBR-pmTqWaS9\"><img width=\"1439\" height=\"504\" class=\"wp-image-22015\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/hierarchical-view-of-all-kubernetes-resources.png\" alt=\"Hierarchical view of all Kubernetes resources\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/hierarchical-view-of-all-kubernetes-resources.png 1439w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/hierarchical-view-of-all-kubernetes-resources-300x105.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/hierarchical-view-of-all-kubernetes-resources-1024x359.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/hierarchical-view-of-all-kubernetes-resources-768x269.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/hierarchical-view-of-all-kubernetes-resources-20x7.png 20w\" sizes=\"(max-width: 1439px) 100vw, 1439px\" \/><\/a><\/p>\n<p>The dashboard above provides a detailed view of the same Argo application deployed in the image above. However, it also provides an understanding of the status of the Kubernetes resources.<\/p>\n<p>Now, let&#8217;s explore how we can apply best practices to our Argo CD deployments!<\/p>\n<h3><a id=\"post-21871-_m13x9eymh82e\"><\/a><strong>Argo CD Best Practices<\/strong><\/h3>\n<p>Argo CD has several best practices; however, we will review some of the most important ones we&#8217;ve gathered from the Argo community and prioritized below.<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<h4>1. <strong>Separate your Git repositories<\/strong><\/h4>\n<\/li>\n<\/ol>\n<p>It&#8217;s super important to separate your configurations and source code into different Git repositories. Separating your configs in their repository limits commit access to avoid something being pushed to production environments. For example, if you accidentally push manifest changes to the config repo, it can trigger an infinite loop of build jobs and Git commit triggers. Using an automated CI pipeline, you can also prevent pushing manifest changes to the same repo.<\/p>\n<p>Separating your repositories is also more secure and restricts commit access, so someone does not accidentally misconfigure an application.<\/p>\n<p><img width=\"2002\" height=\"900\" class=\"wp-image-22016\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003.png\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003.png 2002w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003-300x135.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003-1024x460.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003-768x345.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003-1536x691.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174003-20x9.png 20w\" sizes=\"(max-width: 2002px) 100vw, 2002px\" \/><\/p>\n<p>Argo CD does not connect to your source code repository. However, if you make a change to your code and you want to deploy the change to a specific environment, you can do the following:<\/p>\n<ul>\n<li>Build a new application code version and then merge a pull request (PR) in the configuration repo to use the new application version you created.<\/li>\n<li>Utilize automation for the update you made to your source code by using a pipeline in the source code repository.<\/li>\n<li>Argo CD Image Updater allows you to update your container images of the Kubernetes workload managed by Argo CD.<\/li>\n<\/ul>\n<p>These approaches allow you to maintain logs for any auditing process. You can quickly identify development activity and reference your Git history for easy traceability.<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<h4>2. <strong>Create a directory structure to enable a multi-application system for your Argo CD deployments<\/strong><\/h4>\n<\/li>\n<\/ol>\n<p>Once you&#8217;ve separated your source code and configs into separate repositories, it&#8217;s essential to set up a directory structure that applies GitOps for Argo CD deployments. You can leverage several approaches for your Git repository structure that best serves your organization&#8217;s needs.<\/p>\n<p>However, we&#8217;ll highlight some tips to best structure your directory when using Argo CD.<\/p>\n<ul>\n<li>Do: We suggest modeling your environments or clusters using different folders instead of branches in your configuration repository (e.g., prod, staging, testing, etc.).<\/li>\n<li>Do: Make sure your cluster and environment configurations repositories are separated (i.e., separate your prod configuration in a different repository from staging).<\/li>\n<li>Do: Utilize some sort of manifest management, such as a raw Kubernetes YAML file, Kustomize, or Helm for your environment definitions for your apps.<\/li>\n<li>Do: Create an &#8216;argocd&#8217; folder in your configuration repository for each cluster and create an Argo CD Application manifest for each app in the cluster&#8217;s repository.\n<ul>\n<li>By creating the separate &#8216;argocd&#8217; folder, you can also implement role-based access control for different clusters if you wish with Git repository permissions.<\/li>\n<\/ul>\n<\/li>\n<li>Do: Leverage a multi-folder or a multi-repo structure instead of a multi-branch approach. You should NOT have permanent branches for your clusters or environments.<\/li>\n<li>Don&#8217;t: Never put any independent applications or applications managed by different teams in the same repository.<\/li>\n<\/ul>\n<p>Implementing these strategies above for your directory structure provides several advantages. Those advantages include improved security, easy rollbacks, audit log, easier testing, and automating your manifest updates. It also allows you to create and delete applications dynamically. If you&#8217;d like to see some examples of these directory structures, look <a href=\"https:\/\/github.com\/argoproj\/argocd-example-apps\" target=\"_blank\" rel=\"noopener\">here<\/a>.<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<h4>3. <strong>Determine a promotion strategy<\/strong><\/h4>\n<\/li>\n<\/ol>\n<p>Now that you&#8217;ve established a directory structure, you may face a challenge regarding the best promotion practice between clusters. When deploying multiple applications with Argo CD, it&#8217;s best to pick one promotion strategy that suits your directory structure and stick with it. Below we&#8217;ll highlight how you can do this based on your own needs.<\/p>\n<h5><a id=\"post-21871-_9m9qm130wnjz\"><\/a>Group your applications<\/h5>\n<ul>\n<li><a href=\"https:\/\/argocd-applicationset.readthedocs.io\/en\/stable\/\" target=\"_blank\" rel=\"noopener\">ApplicationSets<\/a><\/li>\n<\/ul>\n<p>First and foremost, once you&#8217;ve established a way to manage your applications and deployments, and there are too many apps to keep track of &#8211; the ApplicationSet is your best solution. We should also note that the ApplicationSet was previously an external controller that you had to install on your own, and now it&#8217;s integrated and makes things much easier! However, you need some extra support when using the ApplicationSet instead of the App of Apps pattern that is easy enough to use right away without any additional help or a learning curve.<\/p>\n<p>Yet, when deploying to production, an ApplicationSet is the best choice. This is because an ApplicationSet is a Kubernetes controller\/custom resource definition (CRD) that enables automation and allows flexibility when managing multiple applications across several clusters.<\/p>\n<p>The ApplicationSet consists of two main components:<\/p>\n<ul>\n<li><a href=\"https:\/\/argocd-applicationset.readthedocs.io\/en\/stable\/Generators\/\" target=\"_blank\" rel=\"noopener\">Generators<\/a><\/li>\n<li><a href=\"https:\/\/argocd-applicationset.readthedocs.io\/en\/stable\/Template\/#templates\" target=\"_blank\" rel=\"noopener\">Application template<\/a><\/li>\n<\/ul>\n<p>You are essentially allowing the ApplicationSet to act as a templating agent.<\/p>\n<p>The generators used with the ApplicationSet are responsible for generating params, utilizing the template to consume the variables, and then applying them to the cluster as Argo CD applications. So, any changes made to an ApplicationSet template and its fields will automatically be applied to each application created.<\/p>\n<p>This way, you can simultaneously deploy your Argo apps to multiple Kubernetes clusters.<\/p>\n<p><img width=\"1976\" height=\"1056\" class=\"wp-image-22017\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007.png\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007.png 1976w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007-300x160.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007-1024x547.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007-768x410.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007-1536x821.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174007-20x11.png 20w\" sizes=\"(max-width: 1976px) 100vw, 1976px\" \/><\/p>\n<ul>\n<li><a href=\"https:\/\/argoproj.github.io\/argo-cd\/operator-manual\/cluster-bootstrapping\/#app-of-apps-pattern\" target=\"_blank\" rel=\"noopener\">App of Apps<\/a><\/li>\n<\/ul>\n<p>When managing ten or fewer applications, it&#8217;s best to use the App of Apps pattern.<\/p>\n<p>App of Apps was the pioneer before ApplicationSets that allowed us to deploy multiple applications at once with ease.<\/p>\n<p>You are leveraging the actual app itself, aka a &#8220;Root App,&#8221; to contain the other applications instead of individual Kubernetes objects. This, in turn, allows you to manage a group of applications that you can deploy declaratively. Essentially this pattern supports the declaration of children apps in a recursive way.<\/p>\n<p><img width=\"678\" height=\"440\" class=\"wp-image-22018\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174013.png\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174013.png 678w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174013-300x195.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/word-image-20220330-174013-20x13.png 20w\" sizes=\"(max-width: 678px) 100vw, 678px\" \/><\/p>\n<p><span style=\"font-size: 8pt;\"><a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/operator-manual\/cluster-bootstrapping\/\">Image from the Argo CD documentation<\/a><\/span><\/p>\n<p>Another possible approach to promoting changes is the <a href=\"https:\/\/argocd-image-updater.readthedocs.io\/en\/stable\/#argo-cd-image-updater\" target=\"_blank\" rel=\"noopener\">Argo CD Image Updater<\/a>. It&#8217;s still a relatively new project, but it provides a manual way to update your manifest versions.<\/p>\n<p>However, we should note that this approach is not GitOps friendly. Meaning it goes against the declarative nature of GitOps, but perhaps its functionality is what you and your team needs.<\/p>\n<h5><a id=\"post-21871-_ojk5dlxw0p0e\"><\/a>Which to choose?<\/h5>\n<p>One does not &#8220;need&#8221; a promotion strategy when beginning to deploy with Argo CD. The strategies listed above are needed when trying to solve &#8220;too many apps.&#8221; This problem dramatically depends on the number of Argo CD applications you are managing and whether or not you already have a deployment process in place or not.<\/p>\n<p>The Argo community has developed the strategies listed above to help you manage all your Argo CD application deployments, depending on your scale, directory structure, and manifest types, amongst other factors.<\/p>\n<p>However, it&#8217;s ultimately up to you and your workload, which is best for you and your team.<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<h4>4. <strong>Manage your secrets securely<\/strong><\/h4>\n<\/li>\n<\/ol>\n<p>No one solution for <a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/operator-manual\/secret-management\/\" target=\"_blank\" rel=\"noopener\">secret management<\/a> will work for all organizations. However, some common approaches for how to best handle your secrets with Argo CD can help based on these two significant factors:<\/p>\n<h5><a id=\"post-21871-_w2ry0j4kjmyh\"><\/a>Encrypt your secrets directly in your Git repository:<\/h5>\n<ul>\n<li><a href=\"https:\/\/engineering.bitnami.com\/\" target=\"_blank\" rel=\"noopener\">Bitnami Sealed Secrets<\/a><\/li>\n<\/ul>\n<p>Sealed secrets are one way to encrypt secrets created by anyone but can only be decrypted by the controller running within the target cluster.<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/mozilla\/sops\" target=\"_blank\" rel=\"noopener\">SOPS<\/a><\/li>\n<\/ul>\n<p>SOPS (Secret OperationS) is an open source solution that allows you to encrypt and decrypt an entire file or field for your Kubernetes secrets. This approach will enable you to store your secrets, and other Kubernetes manifests directly in your Git repository.<\/p>\n<h5><a id=\"post-21871-_22nwzap9k2bt\"><\/a>Externalizing your secrets from your Git repository:<\/h5>\n<ul>\n<li><a href=\"https:\/\/github.com\/argoproj-labs\/argocd-vault-plugin\" target=\"_blank\" rel=\"noopener\">Argo CD Vault plugin<\/a><\/li>\n<\/ul>\n<p>This solution creates debate about whether it&#8217;s GitOps or not. Nonetheless, it&#8217;s a solution using Kubernetes auth in Vault. The Argo CD repo server authorizes Vault to use the service account token in the secret manifest, substituting the required value and creating a secret for you.<\/p>\n<ul>\n<li>Cloud Provider Secrets<\/li>\n<\/ul>\n<p>Cloud provider secrets are created by your cloud service providers (CSP) depending on the cloud service. It depends on what your CSP offers and if their secret management solution meets your needs. Ensure you evaluate which strategy secures your data best.<\/p>\n<p>Firstly, storing your secrets in a Git repository isn&#8217;t easy! Perhaps your organization has a different policy for secrets, or you already have a system in place, so in this case, you may want to externalize your secrets.<\/p>\n<p>However, if you want to store your secrets in your Git repository, plaintext secrets cannot be stored in your repo, and you never want to risk storing sensitive data and exposing it!<\/p>\n<p>But, Git can truly be the source of truth, including your secrets, and you won&#8217;t have to risk getting fired when they are encrypted asymmetrically. You can use Argo CD to manage your deployment state from Git into your cluster, including your secrets, by ensuring processes are put in place, and the tools above are used safely.<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<h4>5. <a id=\"post-21871-_igoj40bhubr\"><\/a><strong>Confirm how your team accesses Argo CD <\/strong><\/h4>\n<\/li>\n<\/ol>\n<p>Essentially, we cannot say what the best practice for you and your team is to access Argo CD. However, we can advise you and your team to choose which approach works best for your organization and set a standard for your team.<\/p>\n<h5><a id=\"post-21871-_u8z9ow43nf9v\"><\/a>Developers require access to Argo CD, so you need to set security measures and role-based access control (RBAC).<\/h5>\n<p>This approach allows your developers to access the Argo CD UI and ensure that each team has the appropriate access to their applications and their applications only.<\/p>\n<p>Argo CD provides an <a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/operator-manual\/rbac\/#rbac-configuration\" target=\"_blank\" rel=\"noopener\">RBAC configuration<\/a> that includes two pre-defined roles:<\/p>\n<ul>\n<li>Read-only<\/li>\n<li>Admin<\/li>\n<\/ul>\n<p>You can also implement a permissions definition for your applications and other resource types with Argo CD. You can then sync these roles and permissions together to create a policy to define access to your system.<\/p>\n<h5><a id=\"post-21871-_vmpdf9n1pfnd\"><\/a>No one within your organization requires access to Argo CD.<\/h5>\n<p>Some organizations do not want anyone to access the Argo CD UI or the API server. Perhaps the organization would like to use the automation but does not want to leverage the UI component. In this case, you can use a variant of Argo CD, also known as <a href=\"https:\/\/argo-cd.readthedocs.io\/en\/stable\/operator-manual\/installation\/#core\" target=\"_blank\" rel=\"noopener\">Argo CD Core<\/a>. This allows developers to make a commit and ignore the UI aspects and reduce complexity. However, we should note that you lose multi-tenancy benefits by installing Argo CD Core.<\/p>\n<p>So, whichever approach you choose above &#8211; as long as it benefits you and your team, you&#8217;re making the right choice.<\/p>\n<ol>\n<li style=\"list-style-type: none;\">\n<h4>6. <a id=\"post-21871-_twnsu4heyo9s\"><\/a><strong>Increase automation for your system with the other Argo projects<\/strong><\/h4>\n<\/li>\n<\/ol>\n<p>If you&#8217;re using <a href=\"https:\/\/codefresh.io\/learn\/argo-cd\/\" target=\"_blank\" rel=\"noopener\">Argo CD for Continuous Delivery (CD)<\/a>, you want to elevate the rest of your workflow to automate everything in Kubernetes to reduce downtime. Then, you should check out the other <a href=\"https:\/\/github.com\/argoproj\" target=\"_blank\" rel=\"noopener\">Argo projects<\/a> and learn more about how they can help.<\/p>\n<p>We don&#8217;t encourage you to use any specific projects to leverage best practices, but instead, we encourage you to use those that will help you and your system best.<\/p>\n<p>In the meantime, we can explore how we could use Argo Events, Workflows, and Rollouts to enhance your system if you choose to.<\/p>\n<h5><a id=\"post-21871-_xfyh0qwuofic\"><\/a>Progressive Delivery<\/h5>\n<p>Progressive delivery is a set of practices that roll out new features gradually instead of all at once.<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/argoproj\/argo-rollouts\" target=\"_blank\" rel=\"noopener\">Argo Rollouts<\/a><\/li>\n<\/ul>\n<p>Rollouts provide advanced deployment capabilities and rolling updates for progressive delivery approaches you might already know, such as blue-green, canary, etc.<\/p>\n<h5><a id=\"post-21871-_cr8bufalkf5s\"><\/a> Advanced Deployment with CI<\/h5>\n<p>Argo Workflows and Events require you to have an existing Continuous Integration (CI) process to leverage these projects.<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/argoproj\/argo-workflows\" target=\"_blank\" rel=\"noopener\">Argo Workflows<\/a><\/li>\n<\/ul>\n<p>Workflows allow you to build and orchestrate parallel jobs and utilize a pipeline on Kubernetes.<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/argoproj\/argo-events\" target=\"_blank\" rel=\"noopener\">Argo Events<\/a><\/li>\n<\/ul>\n<p>Events is an event-driven workflow automation framework that is used with Kubernetes.<\/p>\n<p>By utilizing these other Argo projects, you can easily manage your clusters, run workflows, and implement GitOps for your Kubernetes system! However, not all organizations are ready to implement automation for everything in Kubernetes. Combining all these tools requires time and understanding of how your system works before identifying which tool will best help your team&#8217;s process.<\/p>\n<h4><a id=\"post-21871-_sbcsl1bw8rj8\"><\/a><strong>Conclusion<\/strong><\/h4>\n<p>Argo CD and the other Argo projects certainly make life easier by allowing you to automate each step for a production release, migration, and the operation workflows for your system!<\/p>\n<p>By leveraging these best practices above, you&#8217;re on the right track to empower your teams and apply GitOps for your infrastructure so you can deploy to prod more frequently.<\/p>\n<p>I&#8217;d like to thank those who are part of the Argo community who participated and provided feedback for this blog. If you have any questions or think there are better ways to work with Argo CD, please reach out and let me know!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"21871\"\/>","protected":false},"excerpt":{"rendered":"<p>What are some best practices when using Argo CD? Within this blog post, we\u2019ll be highlighting some best practices tied to Argo CD, that allow you to leverage GitOps easily within your deployment workflow. Below we will explain the following: What is Argo CD What are some best practices with Argo CD? What is Argo &hellip; <a href=\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/\">Read more<\/a><\/p>\n","protected":false},"author":98,"featured_media":22005,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5722],"tags":[980,1257,4322,5506,5507,5508,5750],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Argo CD Best Practices<\/title>\n<meta name=\"description\" content=\"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Argo CD Best Practices\" \/>\n<meta property=\"og:description\" content=\"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2022-03-30T19:49:48+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-04T15:13:54+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png\" \/>\n\t<meta property=\"og:image:width\" content=\"2400\" \/>\n\t<meta property=\"og:image:height\" content=\"1254\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:description\" content=\"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.\" \/>\n<meta name=\"twitter:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png\" \/>\n<meta name=\"twitter:creator\" content=\"@TechWithHannah\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Hannah Seligson\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"11 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png\",\"width\":2400,\"height\":1254},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#webpage\",\"url\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/\",\"name\":\"Argo CD Best Practices\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#primaryimage\"},\"datePublished\":\"2022-03-30T19:49:48+00:00\",\"dateModified\":\"2022-04-04T15:13:54+00:00\",\"description\":\"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Argo CD Best Practices\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212\"},\"headline\":\"Argo CD Best Practices\",\"datePublished\":\"2022-03-30T19:49:48+00:00\",\"dateModified\":\"2022-04-04T15:13:54+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#webpage\"},\"wordCount\":2284,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP-1.png\",\"keywords\":[\"continuous deployment\",\"deployment\",\"GitOps\",\"Argo CD\",\"ArgoCD\",\"Argo\",\"best practices\"],\"articleSection\":[\"Argo Platform\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212\",\"name\":\"Hannah Seligson\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png\",\"caption\":\"Hannah Seligson\"},\"description\":\"Hannah is a developer advocate who loves to create content that empowers devs with resources and tools. She's currently learning more about GitOps and Argo!\",\"sameAs\":[\"http:\/\/codefresh.io\",\"https:\/\/twitter.com\/@TechWithHannah\"],\"url\":\"https:\/\/codefresh.io\/author\/hannah\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Argo CD Best Practices","description":"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/","og_locale":"en_US","og_type":"article","og_title":"Argo CD Best Practices","og_description":"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.","og_url":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2022-03-30T19:49:48+00:00","article_modified_time":"2022-04-04T15:13:54+00:00","og_image":[{"width":2400,"height":1254,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_description":"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.","twitter_image":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png","twitter_creator":"@TechWithHannah","twitter_site":"@codefresh","twitter_misc":{"Written by":"Hannah Seligson","Est. reading time":"11 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP_Social.png","width":2400,"height":1254},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#webpage","url":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/","name":"Argo CD Best Practices","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#primaryimage"},"datePublished":"2022-03-30T19:49:48+00:00","dateModified":"2022-04-04T15:13:54+00:00","description":"Discover key best practices for Argo CD that allow you to leverage GitOps easily within your deployment workflow.","breadcrumb":{"@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Argo CD Best Practices"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212"},"headline":"Argo CD Best Practices","datePublished":"2022-03-30T19:49:48+00:00","dateModified":"2022-04-04T15:13:54+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#webpage"},"wordCount":2284,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Argo_CD_BP-1.png","keywords":["continuous deployment","deployment","GitOps","Argo CD","ArgoCD","Argo","best practices"],"articleSection":["Argo Platform"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/argo-platform\/argo-cd-best-practices\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/7e2fa0dc52e8faf6ce01c27316dc5212","name":"Hannah Seligson","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/Hannah_Slack_New-96x96.png","caption":"Hannah Seligson"},"description":"Hannah is a developer advocate who loves to create content that empowers devs with resources and tools. She's currently learning more about GitOps and Argo!","sameAs":["http:\/\/codefresh.io","https:\/\/twitter.com\/@TechWithHannah"],"url":"https:\/\/codefresh.io\/author\/hannah\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/21871"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/98"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=21871"}],"version-history":[{"count":24,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/21871\/revisions"}],"predecessor-version":[{"id":22093,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/21871\/revisions\/22093"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/22005"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=21871"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=21871"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=21871"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}