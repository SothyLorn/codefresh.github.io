{"id":251,"date":"2016-05-18T20:47:35","date_gmt":"2016-05-18T20:47:35","guid":{"rendered":"https:\/\/codefresh.io\/?p=251"},"modified":"2022-02-09T14:37:31","modified_gmt":"2022-02-09T14:37:31","slug":"continuous-docker-integration-jenkins-codefresh","status":"publish","type":"post","link":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/","title":{"rendered":"Docker Continuous Integration with Jenkins and Codefresh"},"content":{"rendered":"<p>Many development shops have made a big investment in Jenkins for their CI, but with the growing popularity\u00a0of containers such as Docker, there is a need for a new kind of CI\/CD platform, one that is container-native.<\/p>\n<p>That said, not all of the software components in a typical\u00a0build process are whole applications that can be packaged and delivered in a Docker container. Instead, they are \u00a0external components, such as libraries, modules, drivers, etc. \u00a0For these components we actually need to use a traditional CI server.<\/p>\n<p>The result is a need to combine a traditional CI server, such as Jenkins, for non-containerized components, together with a container-native CI tool for the final application images.<\/p>\n<p><span style=\"font-weight: 400;\"><br \/>\n<\/span><span style=\"font-weight: 400;\">In this\u00a0post, we will show exactly how you can connect Jenkins to the Codefresh container-native CI, resulting in\u00a0a continuous integration pipeline for both utility components and\u00a0containerized applications.<\/span><\/p>\n<p><!--more--><\/p>\n<p><span style=\"font-weight: 400;\">We&#8217;ll use an\u00a0example pipeline composed of two building blocks:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">a very simple npm\u00a0package<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">an Express.js web application that uses this package<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">Let\u2019s say the npm\u00a0package is being developed by one of our dev teams. Whenever they push a change to the\u00a0git repository,\u00a0 Jenkins gets triggered to perform the following flow: <\/span><\/p>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Jenkins bumps the package version, runs unit tests &#8212; and if they pass &#8212; publishes the package to npm\u00a0registry. <\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Jenkins then triggers Codefresh to rebuild the container image which pulls in the latest npm package version.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If the build is successful, another request to Codefresh is performed to bring up the application for testing.<\/span><\/li>\n<\/ol>\n<p><span style=\"font-weight: 400;\">The npm\u00a0package we are building performs left-pad string manipulation. In light of the recent <\/span><a href=\"https:\/\/www.reddit.com\/r\/programming\/comments\/4bosx4\/reflections_on_npmgate_one_day_later\/\"><span style=\"font-weight: 400;\">npm gate<\/span><\/a><span style=\"font-weight: 400;\"> scandal, it seems like a good idea to develop this <\/span><b>advanced<\/b><span style=\"font-weight: 400;\"> functionality in-house \ud83d\ude42<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The source code for the package can be found <a href=\"https:\/\/github.com\/otomato-gh\/cf-left-pad.git\">here<\/a><\/span><span style=\"font-weight: 400;\">\u00a0a<\/span><span style=\"font-weight: 400;\">nd it&#8217;s dead simple:<\/span><\/p>\n<pre style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">\nmodule.exports = leftpad;<\/span><\/i>\n<i><span style=\"font-weight: 400;\">var pjson = require('.\/package.json');<\/span><\/i>\n\n<i><span style=\"font-weight: 400;\">function leftpad (str, len, ch) {<\/span><\/i>\n<i><span style=\"font-weight: 400;\"> \u00a0\n  console.log(pjson.name+\"-\"+pjson.version);<\/span><\/i>\n<i><span style=\"font-weight: 400;\"> \u00a0str = String(str);<\/span><\/i>\n<i><span style=\"font-weight: 400;\"> \u00a0var i = -1;<\/span><\/i>\n\n<i><span style=\"font-weight: 400;\"> \u00a0if (!ch &amp;&amp; ch !== 0) ch = ' ';<\/span><\/i>\n\n<i><span style=\"font-weight: 400;\"> \u00a0len = len - str.length;<\/span><\/i>\n\n<i><span style=\"font-weight: 400;\"> \u00a0while (++i &lt; len) {<\/span><\/i>\n<i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0str = ch + str;<\/span><\/i>\n<i><span style=\"font-weight: 400;\"> \u00a0}<\/span><\/i>\n<i><span style=\"font-weight: 400;\"> \u00a0return str;<\/span><\/i>\n<i><span style=\"font-weight: 400;\">}<\/span><\/i>\n\n\n<\/pre>\n<p><span style=\"font-weight: 400;\">Now let\u2019s look at how our Codefresh service is defined.\u00a0<\/span><span style=\"font-weight: 400;\">The application source code can be found <a href=\"https:\/\/github.com\/otomato-gh\/left-padder\">here<\/a>.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In the source tree there\u2019s a Dockerfile:<\/span><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 300;\">FROM node:4.4.3<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">MAINTAINER Anton Weiss &lt;anton@otomato.link&gt;<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">LABEL Description=&#8221;Serve left-padded strings&#8221;<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">WORKDIR \/var\/www<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">ADD . \/var\/www<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">CMD npm install &amp;&amp; npm start<\/span><\/i><\/p>\n<p><span style=\"font-weight: 400;\">This defines that we are installing npm\u00a0packages for every image build. The dependency on the cf-left-pad package is defined in package.json like this:<\/span><\/p>\n<p>&nbsp;<\/p>\n<p style=\"padding-left: 30px;\"><i><span style=\"font-weight: 400;\">&#8220;cf-left-pad&#8221; : &#8220;*&#8221;<\/span><\/i><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">This ensures\u00a0that the latest version of the package will get pulled in for each \u2018npm install\u2019 execution.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">You can see the service definition in\u00a0Codefresh:<\/span><\/p>\n<p><span style=\"font-weight: 400;\"> \u00a0<a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM.png\"><img class=\"alignnone wp-image-253 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-1024x640.png\" alt=\"Screen Shot 2016-05-05 at 1.02.20 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/span><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">Let\u2019s start building our pipeline!<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Our first Jenkins job will be called \u2018build-cf-left-pad\u2019.\u00a0<\/span><span style=\"font-weight: 400;\">We\u2019ll configure it to pull the code from the GitHub repo and to run the following as \u2018execute shell\u2019 build step:<\/span><\/p>\n<p>&nbsp;<\/p>\n<pre style=\"padding-left: 30px;\"><i><span style=\"font-weight: 400;\">npm install ci-npm-publish<\/span><\/i>\n<i><span style=\"font-weight: 400;\">npm version patch<\/span><\/i>\n<i><span style=\"font-weight: 400;\">export VERSION=`python -c \"import json; print(json.loads(open('package.json').read())['version'])\"`<\/span><\/i>\n<i><span style=\"font-weight: 400;\">echo VERSION=${VERSION} &gt; version.properties<\/span><\/i>\n<i><span style=\"font-weight: 400;\">npm-publish --npmuser ${my_npm_user} --npmemail ${npm_emal} --npmpassword ${npmpwd}<\/span><\/i><\/pre>\n<p><span style=\"font-weight: 400;\">This script uses the <\/span><a href=\"https:\/\/www.npmjs.com\/package\/ci-npm-publish\"><span style=\"font-weight: 400;\">ci-npm-publish<\/span><\/a><span style=\"font-weight: 400;\"> package that allows passing npm<\/span><a href=\"https:\/\/www.npmjs.com\/package\/npm-registry\"><span style=\"font-weight: 400;\">\u00a0<\/span><\/a><span style=\"font-weight: 400;\">registry<\/span><span style=\"font-weight: 400;\"> credentials on CLI\u00a0for npm\u00a0publishing. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">\u2018npm version patch\u2019 bumps the package version number.\u00a0<\/span><span style=\"font-weight: 400;\">This number is then saved to the version.properties file.\u00a0<\/span><span style=\"font-weight: 400;\">And \u2018npm-publish\u2019 takes care of the publishing.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The following screenshot shows the build step configuration in\u00a0Jenkins:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM.png\"><img class=\"alignnone wp-image-254 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM-1024x640.png\" alt=\"Screen Shot 2016-05-05 at 12.11.04 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.11.04-PM.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Once the first build job is finished, it triggers another job named \u2018call-codefresh\u2019\u00a0<\/span><span style=\"font-weight: 400;\">The purpose of this job is to trigger an image rebuild on Codefresh.\u00a0T<\/span><span style=\"font-weight: 400;\">o do this, I used <\/span><a href=\"https:\/\/wiki.jenkins-ci.org\/display\/JENKINS\/HTTP+Request+Plugin\"><span style=\"font-weight: 400;\">Jenkins Http Request plugin<\/span><\/a><span style=\"font-weight: 400;\">, configured like this:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM.png\"><img class=\"alignnone wp-image-255 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM-1024x640.png\" alt=\"Screen Shot 2016-05-05 at 12.16.50 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-12.16.50-PM.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">You can see I\u2019m using <\/span><span style=\"font-weight: 400;\">https:\/\/g.codefresh.io\/api\/builds\/${CODEFRESH_SERVICE_ID<\/span><span style=\"font-weight: 400;\">} API endpoint with my Codefresh access token for authorization.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">This triggers a new image build and outputs the unique build id, which Jenkins saves to the <strong>buildid.properties<\/strong> file to pass it to the downstream job.<\/span><\/p>\n<p>The downstream job is called \u2018launch-cf-service\u2019. It now launches the service we just built the image for using the following shell script code:<\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">export SERVICE_SHA=`curl &#8211;header &#8220;Content-Type: application\/json&#8221; &#8211;header \\ &#8220;Accept: application\/json&#8221; &#8211;header &#8220;x-access-token: ${CF_TOKEN}&#8221;\\<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0&#8220;https:\/\/g.codefresh.io\/api\/builds&#8221; | jq &#8220;.builds[] |.[] | select(._id == &#8220;\\&#8221;${CF_BUILD}\\&#8221;&#8221;) | .sha&#8221;`<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">curl -X POST &#8211;header &#8220;Content-Type: application\/json&#8221; &#8211;header &#8220;Accept: application\/json&#8221;\\<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&#8211;header &#8220;x-access-token: ${CF_TOKEN}&#8221; \\<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-d &#8220;{\\&#8221;repoOwner\\&#8221;: \\&#8221;antweiss\\&#8221;, <\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\\&#8221;repoName\\&#8221;: \\&#8221;left-padder\\&#8221;, <\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\\&#8221;sha\\&#8221;: ${SERVICE_SHA},<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\\&#8221;branch\\&#8221;: \\&#8221;master\\&#8221;,<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\\&#8221;repoData\\&#8221;: {<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\\&#8221;url\\&#8221;: {<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\\&#8221;https\\&#8221;: \\&#8221;https:\/\/github.com\/antweiss\/left-padder.git\\&#8221;<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0\u00a0\u00a0}<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\"> \u00a0}<\/span><\/i><\/p>\n<p style=\"padding-left: 60px;\"><i><span style=\"font-weight: 400;\">}&#8221; https:\/\/g.codefresh.io\/api\/runtime\/testit<\/span><\/i><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">That&#8217;s\u00a0a bit more complicated, so let\u2019s walk through it.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The first command finds the git commit hash of the latest service image build by sending a request to \u00a0<\/span><span style=\"font-weight: 400;\">https:\/\/g.codefresh.io\/api\/builds<\/span><span style=\"font-weight: 400;\"> and parsing that with the wonderful <\/span><a href=\"https:\/\/stedolan.github.io\/jq\/\"><span style=\"font-weight: 400;\">jq<\/span><\/a><span style=\"font-weight: 400;\"> tool to find the commit that corresponds to the ${CF_BUILD} id we got from the upstream job.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The second command sends a request to the <\/span><span style=\"font-weight: 400;\">https:\/\/g.codefresh.io\/api\/runtime\/testit<\/span><span style=\"font-weight: 400;\"> endpoint with a json that describes the service we want to launch and the git commit of the last image we want to launch it from.\u00a0<\/span><span style=\"font-weight: 400;\">This launches the service on Codefresh, and with that, our short pipeline is complete.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Let&#8217;s look at it in action.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The build pipeline on Jenkins:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM.png\"><img class=\"alignnone wp-image-256 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.11.46 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.11.46-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Output of the first job (the npm\u00a0build and publish):<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM.png\"><img class=\"alignnone wp-image-260 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.15.15 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.15-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">We can see the version of the published npm\u00a0package is now 0.0.16.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Second job calls Codefresh service rebuild and gets back the build ID:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM.png\"><img class=\"alignnone wp-image-261 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.15.55 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.15.55-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">On the Codefresh console we see a new build appear:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM.png\"><img class=\"alignnone wp-image-257 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.13.46 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.13.46-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Meanwhile Jenkins triggers the <strong>launch-cf-service<\/strong> job, passing it the build ID as a parameter:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM.png\"><img class=\"alignnone size-large wp-image-262\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.17.05 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.17.05-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Back in\u00a0Codefresh,\u00a0we can launch the app, enter the parameters and test if it works:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM.png\"><img class=\"alignnone size-large wp-image-258\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.14.31 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.31-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">And if we check the container log, we will see that the application in fact uses the latest npm\u00a0package version:<\/span><\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM.png\"><img class=\"alignnone size-large wp-image-259\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM-1024x640.png\" alt=\"Screen Shot 2016-04-25 at 6.14.39 PM\" width=\"1024\" height=\"640\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM-1024x640.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM-300x188.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM-768x480.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM-525x328.png 525w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-04-25-at-6.14.39-PM.png 1440w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Mission accomplished!<\/span><\/p>\n<p><span style=\"font-weight: 400;\">By the way,\u00a0you can browse our Jenkins jobs <a href=\"http:\/\/23.251.139.168:8080\/view\/cf-pipeline\/\">here<\/a>.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">We&#8217;d love to hear your feedback\u00a0about this flow , so that we can improve it.<\/span><\/p>\n<p>&nbsp;<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"251\"\/>","protected":false},"excerpt":{"rendered":"<p>Many development shops have made a big investment in Jenkins for their CI, but with the growing popularity\u00a0of containers such as Docker, there is a need for a new kind of CI\/CD platform, one that is container-native. That said, not all of the software components in a typical\u00a0build process are whole applications that can be &hellip; <a href=\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/\">Read more<\/a><\/p>\n","protected":false},"author":9,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1505],"tags":[13,14,15],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Docker Continuous Integration with Jenkins and Codefresh | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Docker Continuous Integration with Jenkins and Codefresh\" \/>\n<meta property=\"og:description\" content=\"Many development shops have made a big investment in Jenkins for their CI, but with the growing popularity\u00a0of containers such as Docker, there is a need for a new kind of CI\/CD platform, one that is container-native. That said, not all of the software components in a typical\u00a0build process are whole applications that can be &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2016-05-18T20:47:35+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-09T14:37:31+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-1024x640.png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@antweiss\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Anton Weiss\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM.png\",\"width\":1920,\"height\":1200},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#webpage\",\"url\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/\",\"name\":\"Docker Continuous Integration with Jenkins and Codefresh | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#primaryimage\"},\"datePublished\":\"2016-05-18T20:47:35+00:00\",\"dateModified\":\"2022-02-09T14:37:31+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Docker Continuous Integration with Jenkins and Codefresh\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/93d9834241a4b1b862a21e1d9a42a39f\"},\"headline\":\"Docker Continuous Integration with Jenkins and Codefresh\",\"datePublished\":\"2016-05-18T20:47:35+00:00\",\"dateModified\":\"2022-02-09T14:37:31+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#webpage\"},\"wordCount\":940,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-1024x640.png\",\"keywords\":[\"jenkins\",\"docker\",\"continuous integration\"],\"articleSection\":[\"Containers\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/93d9834241a4b1b862a21e1d9a42a39f\",\"name\":\"Anton Weiss\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/74279e1c79e1997c40057ee2c54a6454?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/74279e1c79e1997c40057ee2c54a6454?s=96&d=blank&r=g\",\"caption\":\"Anton Weiss\"},\"description\":\"Ant(on) Weiss is a DevOps Evangelist and Enabler. He's been architecting software delivery processes at large and small companies for the last 15 years. Today he's the CEO and Principal Consultant at Otomato. When not evangelising for Codefresh, he's deeply involved with technical training and public speaking.\",\"sameAs\":[\"http:\/\/antweiss.com\",\"https:\/\/twitter.com\/antweiss\"],\"url\":\"https:\/\/codefresh.io\/author\/anton\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Docker Continuous Integration with Jenkins and Codefresh | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/","og_locale":"en_US","og_type":"article","og_title":"Docker Continuous Integration with Jenkins and Codefresh","og_description":"Many development shops have made a big investment in Jenkins for their CI, but with the growing popularity\u00a0of containers such as Docker, there is a need for a new kind of CI\/CD platform, one that is container-native. That said, not all of the software components in a typical\u00a0build process are whole applications that can be &hellip; Read more","og_url":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2016-05-18T20:47:35+00:00","article_modified_time":"2022-02-09T14:37:31+00:00","og_image":[{"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-1024x640.png"}],"twitter_card":"summary_large_image","twitter_creator":"@antweiss","twitter_site":"@codefresh","twitter_misc":{"Written by":"Anton Weiss","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM.png","width":1920,"height":1200},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#webpage","url":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/","name":"Docker Continuous Integration with Jenkins and Codefresh | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#primaryimage"},"datePublished":"2016-05-18T20:47:35+00:00","dateModified":"2022-02-09T14:37:31+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Docker Continuous Integration with Jenkins and Codefresh"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/93d9834241a4b1b862a21e1d9a42a39f"},"headline":"Docker Continuous Integration with Jenkins and Codefresh","datePublished":"2016-05-18T20:47:35+00:00","dateModified":"2022-02-09T14:37:31+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#webpage"},"wordCount":940,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/05\/Screen-Shot-2016-05-05-at-1.02.20-PM-1024x640.png","keywords":["jenkins","docker","continuous integration"],"articleSection":["Containers"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/containers\/continuous-docker-integration-jenkins-codefresh\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/93d9834241a4b1b862a21e1d9a42a39f","name":"Anton Weiss","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/74279e1c79e1997c40057ee2c54a6454?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/74279e1c79e1997c40057ee2c54a6454?s=96&d=blank&r=g","caption":"Anton Weiss"},"description":"Ant(on) Weiss is a DevOps Evangelist and Enabler. He's been architecting software delivery processes at large and small companies for the last 15 years. Today he's the CEO and Principal Consultant at Otomato. When not evangelising for Codefresh, he's deeply involved with technical training and public speaking.","sameAs":["http:\/\/antweiss.com","https:\/\/twitter.com\/antweiss"],"url":"https:\/\/codefresh.io\/author\/anton\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/251"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/9"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=251"}],"version-history":[{"count":2,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/251\/revisions"}],"predecessor-version":[{"id":21361,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/251\/revisions\/21361"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=251"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=251"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=251"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}