{"id":3094,"date":"2017-06-06T23:40:39","date_gmt":"2017-06-06T23:40:39","guid":{"rendered":"https:\/\/codefresh.io\/?post_type=dockerguides&#038;p=3094"},"modified":"2018-01-25T20:11:02","modified_gmt":"2018-01-25T20:11:02","slug":"migrating-to-docker","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/","title":{"rendered":"Migrating to Docker: How to Plan a Migration and What to Consider"},"content":{"rendered":"<h3><b>Prologue<\/b><\/h3>\n<p><span style=\"font-weight: 400;\">Docker, without any exaggeration, is the trendiest, the hottest topic for discussion amongst IT crowd nowadays. Companies, technologies, and solutions are born just to satisfy the ever-growing desire to \u2018dockerize\u2019 everything. Days and hours are spent writing Dockerfiles, revamping application architecture and chasing a 12-factor dream. And the most important question, that has to be answered before departing on this journey of containerization, is whether it\u2019s worth it. Whether your product is ready to run as a Docker container, whether the effort needed will be rewarded with results, whether the whole thing won\u2019t come crashing down on you eventually.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">So, what things should you consider before introducing containers into play? First, the architectural changes your product has to undergo in order to make the best out of containers. This can cause a lot of changes or little, depending on the current state of a product. Is it a monolithic product, are the components of it tightly coupled, is the concept of state present or not, is your application very I\/O intensive? Those are the types of questions that will get the thought process going. Docker is in no way a \u2018one size fits all\u2019 solution, and one has to utilize it properly in order to truly benefit. We will now take a look at the major topics, that can help you make the right decision.<\/span><\/p>\n<h3><b>Overall Architecture<\/b><\/h3>\n<p><span style=\"font-weight: 400;\">It\u2019s hard to argue with the fact that containers are very suitable for decoupled applications with clear separation of roles. Call it microservices or not, but the moment your application becomes less monolithic, that\u2019s when you are on the right way towards containerization. If that move costs hours and hours of rewriting the entire codebase of a product, then it might be not worth the game. Consider researching the popular concept of 12-factor applications. While it\u2019s not necessarily the only \u2018true\u2019 path, it does contain some valid points with regards to architectural revamping. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">Such ideas, like stateless processes, disposability of instances, and streaming of logs as functional events, when done correctly, can bring a lot of benefits. But, of course, there is a price to pay, mostly due to the need of initial push and the necessity of building the whole ecosystem around containers. We\u2019re talking orchestration, service discovery and registration, new ways of monitoring and logging, and of course new security considerations. Don\u2019t get this wrong, going containers is not complicating things, it\u2019s making things differently. It\u2019s changing the mindset, changing the culture and adapting to new ways. <\/span><\/p>\n<p><img class=\"alignnone wp-image-3644 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg\" alt=\"\" width=\"1424\" height=\"829\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg 1424w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1-300x175.jpg 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1-768x447.jpg 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1-1024x596.jpg 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1-563x328.jpg 563w\" sizes=\"(max-width: 1424px) 100vw, 1424px\" \/><\/p>\n<p style=\"text-align: center;\"><i><span style=\"font-weight: 400;\">A portion of the vast Docker ecosystem<\/span><\/i><\/p>\n<h2><b>Overall Performance<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Is your application very CPU-intensive? Does it need multi-core runtime? Then you have to consider placement of your container(s). You might think about dedicating the whole multi-core host per container. Or a host per few containers with strict runtime constraints per each, if you are optimizing the resource usage. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">Are you utilizing\u00a0your network a lot or need specific topology? Then you should consider using custom network drivers that the Docker ecosystem provides. There is a decent variety of them, from built-in Docker overlay networks to pluggable solutions like VXLAN, IPVLAN or Weave. Some of them will offer better performance, while other might offer better security. Since the introduction of Swarmkit, the Docker overlay network became a default one. It provides just enough performance and security for most, however extreme cases will definitely need alternative solutions. <\/span><\/p>\n<h2><b>Service Discovery, Configuration Management, and Orchestration<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">The nature of Docker containers is very volatile in the sense that containers are treated as disposable. And if one goes against that nature, one ends up making virtual machines out of containers. The larger the scale of an application, the more need for control. Scaling up is a very lucrative thing because of the sheer simplicity of it, but that also leads to a mess of containers flying around if the process is not tightly controlled. Orchestration tools help with placement and tracking of your containers. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">It&#8217;s also important to have service discovery alongside orchestration. Containers are designed to be faceless and nameless, so once you get a containerized application running you have to register the details of it somewhere. The basic minimum info you need to\u00a0register is the IP address, ports, names of the services running in a container, and\u00a0healthcheck info. Normally, one would use tools like Consul or etcd, to leverage the service registration mechanism they provide. You can also solve a problem of dynamic configuration by using key-value store provided by those tools and storing configuration per service there. \u00a0<\/span><\/p>\n<h2><b>Storage<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Is your application truly stateless but produces a large amount of read\/write operations? Do you want to run some data store as a container? Then you need to consider some performant storage and choose a volume driver with minimum overhead. You are still left with the task of managing volumes, but that is solvable with some of the volume drivers. At the end of the day, as rightly stated in the official documentation, \u201cno single driver is well-suited to every use case.\u201d Since the Docker ecosystem has a wide variety of plugins, it\u2019s advisable to research and do a proof-of-concept before settling in on one in particular. And in the\u00a0case of databases and data stores, for the sake of reliability, you might be better off with distributed solutions like Amazon RDS, which will provide you with nice features like high availability and replication by default.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In a case of a stateful application (as most legacy applications tend to be), you will need a persistent storage. And since containers are disposable you have to make sure your persisted data will be accessible to new containers. That might mean moving volumes around your platform or leveraging aforementioned plugins. A good example might be re-attachable Amazon EBS volumes that live far longer than a single container. You also need to consider the possibility of scaling your application and understand how that impacts the state it keeps since now there can be multiple instances of the application interacting with the state. <\/span><\/p>\n<p><img class=\"aligncenter wp-image-3132\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/data_docker-1024x508.jpg\" alt=\"\" width=\"565\" height=\"280\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/data_docker-1024x508.jpg 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/data_docker-300x149.jpg 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/data_docker-768x381.jpg 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/data_docker-628x311.jpg 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/data_docker.jpg 1400w\" sizes=\"(max-width: 565px) 100vw, 565px\" \/><\/p>\n<p style=\"text-align: center;\"><i><span style=\"font-weight: 400;\">Treat Docker volumes as folders that are never gone<\/span><\/i><\/p>\n<p>&nbsp;<\/p>\n<h2><b>Security<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Security is one of the most debatable topics when it comes to Docker containers. Since containers run as system processes and have quite unobstructed access to the host\u2019s kernel they can be seen as a potential vulnerability. Apart from hardening and securing the host (on which containers are run) itself, you now have to think about profiling and properly isolating containers. The principle of least privilege seems to be quite fitting for containers since the Docker daemon allows you to limit capabilities. You can do this by running your application inside a container under non-root user (since the filesystem you mount can be mounted read-only). <\/span><\/p>\n<p><span style=\"font-weight: 400;\">We can also limit the resource consumption per container and eliminate attacks that target resource exhaustion. It\u2019s also very important to make sure your Docker images come from a trusted source and undergo security scans. For example, it\u2019s advised to build on top of verified base images from Docker Hub which are checked for content trust. The bottom line is to make sure you follow the mix of usual and container-specific procedures to ensure you aren&#8217;t in the risk zone.<\/span><\/p>\n<h2><b>Monitoring and L<\/b><b>ogging<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Questions of monitoring and logging are just as important as the other topics I mentioned before, and some might say they are even more critical. After all, how are we supposed to debug failures or prevent crashes? And it\u2019s even more important in a containerized world since the bigger an application grows, the harder it becomes to keep track of resources. Not to mention the fact that you shouldn\u2019t access the shell of a container to look up some logs. Assuming the logging and monitoring solutions were present for your legacy product, it shouldn\u2019t be hard to switch them to work with containers. Containers are more than ready to work with ELK stack for example. Docker offers a good amount of logging options and allows you to ship your application\u2019s output to a\u00a0json file, fluentd, splunk, or plain old syslog. And that\u2019s barely a third of the options you have for logging. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">With regards to monitoring, there\u2019s a lot modern tools can offer. You can choose hosted paid solutions like Datadog or New Relic. Or you can build your own solution based on tools like cAdvisor, Prometheus, and Grafana, which cover the same grounds as paid solutions and give you all the necessary features like alerting and dashboarding. It will all depend on the amount of effort one wants to put in. But you can be sure everything is covered by the insanely huge ecosystem that grew around Docker recently. <\/span><\/p>\n<p><img class=\"aligncenter wp-image-3133\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/elkstack-1024x465.jpg\" alt=\"\" width=\"599\" height=\"272\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/elkstack-1024x465.jpg 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/elkstack-300x136.jpg 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/elkstack-768x349.jpg 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/elkstack-628x285.jpg 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/elkstack.jpg 1100w\" sizes=\"(max-width: 599px) 100vw, 599px\" \/><\/p>\n<p style=\"text-align: center;\"><i><span style=\"font-weight: 400;\">ELK stack, a popular solution for logging<\/span><\/i><\/p>\n<h3><b>Epilogue<\/b><\/h3>\n<p><span style=\"font-weight: 400;\">It is very tempting to just give into this craze of \u2018containerizing everything\u2019, mostly because of the ease Docker brought into the world of software engineering. There\u2019s no right or wrong decision when it comes to innovation, there\u2019s just a path of trial and errors. We hope that this article will help you consider all the pros and cons so that you can make the right decision for your organization. And may the Docker force be with you!<\/span><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"3094\"\/>","protected":false},"excerpt":{"rendered":"<p>Prologue Docker, without any exaggeration, is the trendiest, the hottest topic for discussion amongst IT crowd nowadays. Companies, technologies, and solutions are born just to satisfy the ever-growing desire to \u2018dockerize\u2019 everything. Days and hours are spent writing Dockerfiles, revamping application architecture and chasing a 12-factor dream. And the most important question, that has to &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/\">Read more<\/a><\/p>\n","protected":false},"author":27,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Migrating to Docker: How to Plan a Migration and What to Consider | Codefresh<\/title>\n<meta name=\"description\" content=\"This article will help you consider all the pros and cons of migrating to Docker so that you can make the right decision for your organization.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Migrating to Docker: How to Plan a Migration and What to Consider\" \/>\n<meta property=\"og:description\" content=\"This article will help you consider all the pros and cons of migrating to Docker so that you can make the right decision for your organization.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2017-06-06T23:40:39+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2018-01-25T20:11:02+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@todaywasawesome\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Dan Garfield\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg\",\"width\":1424,\"height\":829},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/\",\"name\":\"Migrating to Docker: How to Plan a Migration and What to Consider | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#primaryimage\"},\"datePublished\":\"2017-06-06T23:40:39+00:00\",\"dateModified\":\"2018-01-25T20:11:02+00:00\",\"description\":\"This article will help you consider all the pros and cons of migrating to Docker so that you can make the right decision for your organization.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Migrating to Docker: How to Plan a Migration and What to Consider\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\"},\"headline\":\"Migrating to Docker: How to Plan a Migration and What to Consider\",\"datePublished\":\"2017-06-06T23:40:39+00:00\",\"dateModified\":\"2018-01-25T20:11:02+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#webpage\"},\"wordCount\":1564,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg\",\"articleSection\":[\"Docker Tutorials\"],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\",\"name\":\"Dan Garfield\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"caption\":\"Dan Garfield\"},\"description\":\"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome\",\"sameAs\":[\"https:\/\/twitter.com\/todaywasawesome\"],\"url\":\"https:\/\/codefresh.io\/author\/dang\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Migrating to Docker: How to Plan a Migration and What to Consider | Codefresh","description":"This article will help you consider all the pros and cons of migrating to Docker so that you can make the right decision for your organization.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/","og_locale":"en_US","og_type":"article","og_title":"Migrating to Docker: How to Plan a Migration and What to Consider","og_description":"This article will help you consider all the pros and cons of migrating to Docker so that you can make the right decision for your organization.","og_url":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2017-06-06T23:40:39+00:00","article_modified_time":"2018-01-25T20:11:02+00:00","og_image":[{"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg"}],"twitter_card":"summary_large_image","twitter_creator":"@todaywasawesome","twitter_site":"@codefresh","twitter_misc":{"Written by":"Dan Garfield","Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg","width":1424,"height":829},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/","name":"Migrating to Docker: How to Plan a Migration and What to Consider | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#primaryimage"},"datePublished":"2017-06-06T23:40:39+00:00","dateModified":"2018-01-25T20:11:02+00:00","description":"This article will help you consider all the pros and cons of migrating to Docker so that you can make the right decision for your organization.","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Migrating to Docker: How to Plan a Migration and What to Consider"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4"},"headline":"Migrating to Docker: How to Plan a Migration and What to Consider","datePublished":"2017-06-06T23:40:39+00:00","dateModified":"2018-01-25T20:11:02+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#webpage"},"wordCount":1564,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/migrating-to-docker\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/ecosystem_support_2-1.jpg","articleSection":["Docker Tutorials"],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4","name":"Dan Garfield","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","caption":"Dan Garfield"},"description":"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome","sameAs":["https:\/\/twitter.com\/todaywasawesome"],"url":"https:\/\/codefresh.io\/author\/dang\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/3094"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/27"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=3094"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/3094\/revisions"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=3094"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=3094"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=3094"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}