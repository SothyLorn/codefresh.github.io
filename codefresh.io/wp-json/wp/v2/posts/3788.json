{"id":3788,"date":"2017-08-02T23:26:00","date_gmt":"2017-08-02T23:26:00","guid":{"rendered":"https:\/\/codefresh.io\/?p=3788"},"modified":"2022-02-11T18:24:17","modified_gmt":"2022-02-11T18:24:17","slug":"hello-whale-docker-basics-getting-started-docker","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/","title":{"rendered":"Hello Whale: Docker Basics- Getting Started with Docker"},"content":{"rendered":"<p>When I first started to learn Docker on my own, I quickly realized that while there are some amazing blogs\/videos\/classes online, there are very few articles that pull all the components of Docker together in one quick and easy getting-started guide.\u00a0So, in preparation for an intro to Docker class I\u2019ll be teaching at my alma mater, Hackbright, in a couple weeks I decided to make a simple guide on how to get started with Docker that touches all the things I\u2019d like to touch on. So, I present to you, Chloe&#8217;s 10 minute Docker crash course!<\/p>\n<p>If you\u2019re looking for a deeper dive into some of these topics, I will provide links along the way of previous articles I\u2019ve written about particular subjects. But if you want a quick\/simple intro to Docker, and want to get up and running in about 10 mins- this article is for you!<\/p>\n<h2>More a &#8220;video&#8221; person?<\/h2>\n<p>If you&#8217;re more of a visual learner, I&#8217;ve created a video version of this article here:\u00a0<a class=\"vm-video-title-content yt-uix-sessionlink\" href=\"https:\/\/youtu.be\/WiCE5IgOHLc\" data-sessionlink=\"ei=f7iAWeD2EIauugL90ZzwBQ\">Hello Whale- Getting Started with Docker!<\/a><\/p>\n<p>Ok, here we go!<\/p>\n<p><img class=\"wp-image-3789 size-full aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/giphy.gif\" alt=\"\" width=\"500\" height=\"281\" \/><\/p>\n<p>&nbsp;<\/p>\n<h3>So, what&#8217;s the deal with containers?<\/h3>\n<p>Today as developers, we are quickly scaling, have multiple environments, implement fast improvements to our code, and work with decoupled services. This differs quite a bit from the days of slow scale, individual environments, lengthy development cycles, and monolithic applications. Since we deal with so many different frameworks, databases, and languages (as well as different dev environments, staging servers, and production models), we needed a new model to enable us to quickly spin-up apps with all our information in one place.<\/p>\n<p>Enter Docker! Docker launched as open source technology in March 2013, and very quickly gained popularity in the developer community. By containerizing applications (which we&#8217;ll go into momentarily), developers began to see significant decreases in development-to-production length, continuous integration time, and much less &#8220;works on my machine&#8221; scenarios. \u00a0While Docker is often referred to as a &#8220;lightweight VM&#8221;, the two are quite different. You can read more about Containers != VMs in my article\u00a0<a href=\"https:\/\/medium.com\/containers-101\/hello-whale-containers-virtual-machines-codefresh-1e2fa23a653d\">here<\/a>.<\/p>\n<p>As a platform, Docker is know as &#8220;Docker Engine&#8221;. It also has many tools including Docker Compose, Docker Swarm, Docker Cloud, etc., but let&#8217;s not get ahead of ourselves \ud83d\udc33\u00a0Let&#8217;s get up and running!<\/p>\n<h3>First, let&#8217;s install Docker<\/h3>\n<p>This is easy- go here and follow the directions: <a href=\"https:\/\/www.docker.com\/community-edition\">https:\/\/docs.docker.com\/engine\/installation\/<\/a><\/p>\n<p>You can also use this web-hosted demo (note: it will expire after 4 hours of use!) <a href=\"http:\/\/play-with-docker.com\/\">http:\/\/play-with-docker.com\/<\/a><\/p>\n<h3>Cool, let&#8217;s run our first container<\/h3>\n<p>Great! You now have Docker installed and you&#8217;re in your terminal (or, you&#8217;re using play-with-docker!). Run the following:\u00a0<code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker run -it ubuntu<\/code>\u00a0and you&#8217;ll see something similar to <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">root@04c0bb0a6c07:\/#<\/code>\u00a0<span style=\"font-weight: 400;\">. Hooray! We just used the <strong>Docker client<\/strong> to interact with the <strong>Docker daemon<\/strong>.<\/span><\/p>\n<p><img class=\"wp-image-3797 size-full aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/giphy-1.gif\" alt=\"\" width=\"480\" height=\"360\" \/><\/p>\n<p><span style=\"font-weight: 400;\">So, what\u2019s happening here? Well, you\u2019re running an image (ubuntu). What\u2019s an image, you ask?<\/span><\/p>\n<p><em><span style=\"font-weight: 400;\">An image is an application you would like to run.<\/span><\/em><\/p>\n<p><span style=\"font-weight: 400;\">And what happens when you run that image? You get a container! But, what\u2019s a container?:<\/span><\/p>\n<p><em><span style=\"font-weight: 400;\">A container is a running instance of an image.<\/span><\/em><\/p>\n<p><span style=\"font-weight: 400;\">Still want to know more? You can read more about images and containers\u00a0<a href=\"https:\/\/medium.com\/containers-101\/hello-whale-images-vs-containers-in-docker-36b68d7c5fac\">here<\/a>.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">And guess what? You\u2019re running your first container! This is just a simple ubuntu system. Pretty cool huh?\u00a0And no, you\u2019re not just telling Docker to \u201crun it\u201d (although, that\u2019s a great way to remember that command!).<\/span><\/p>\n<p><em><span style=\"font-weight: 400;\">-i informs Docker that we would like to connect to the container\u2019s standard input<\/span><\/em><\/p>\n<p><em><span style=\"font-weight: 400;\">-t let\u2019s Docker know that we want a pseudo-terminal<\/span><\/em><\/p>\n<p><span style=\"font-weight: 400;\">Now, if you try to do the following, you\u2019ll see we get a command not found response.<\/span><\/p>\n<p><code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">figlet hey<\/code><\/p>\n<p><span style=\"font-weight: 400;\">Don\u2019t fret- we just need to install it!\u00a0<\/span><span style=\"font-weight: 400;\">Run <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">apt-get update<\/code> to update the apt packages.\u00a0<\/span><span style=\"font-weight: 400;\">Now run <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">apt-get install figlet<\/code><\/span><\/p>\n<p><span style=\"font-weight: 400;\">Here\u2019s the fun part\u2026 write <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">figlet [your name here], you da bomb!<\/code><\/span><\/p>\n<p><img class=\"alignnone wp-image-3908 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/Screen-Shot-2017-07-18-at-11.11.27-AM.png\" alt=\"\" width=\"1128\" height=\"436\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/Screen-Shot-2017-07-18-at-11.11.27-AM.png 1128w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/Screen-Shot-2017-07-18-at-11.11.27-AM-300x116.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/Screen-Shot-2017-07-18-at-11.11.27-AM-768x297.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/Screen-Shot-2017-07-18-at-11.11.27-AM-1024x396.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/Screen-Shot-2017-07-18-at-11.11.27-AM-628x243.png 628w\" sizes=\"(max-width: 1128px) 100vw, 1128px\" \/><\/p>\n<p><span style=\"font-weight: 400;\">Oh hey! Look at that! In just a minute we installed figlet, and ran it in our container. Pretty cool, huh?<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Now, let\u2019s exit our container. Type <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">exit<\/code>. Right now, it still exists, but it&#8217;s resources are now freed up.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">So, if we try to run this again (<\/span><span style=\"font-weight: 400;\"><code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker run -it ubuntu<\/code>)<\/span><span style=\"font-weight: 400;\">\u2026 and try to run <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">figlet<\/code> hey- where\u2019s figlet? Well, it was in our other container. This is a new container that does not have figlet. See what\u2019s going on here? Multiple instances (<strong>containers<\/strong>) of the <strong>image<\/strong> Ubuntu. Still fuzzy on images vs. containers? Check out <a href=\"https:\/\/medium.com\/containers-101\/hello-whale-images-vs-containers-in-docker-36b68d7c5fac\">this article<\/a>\u00a0I wrote on how to differentiate them.<\/span><\/p>\n<p>TLDR: you can think of images as a VHS, and your containers as a VHS player.<\/p>\n<p><img class=\"aligncenter wp-image-3910 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/1-EpN6_TBOX7g3WvarRRhKfg.gif\" alt=\"\" width=\"494\" height=\"382\" \/><\/p>\n<p><span style=\"font-weight: 400;\">If I open another tab (if you&#8217;re using the playground, skip ahead to next paragraph), and then I run docker ps, I am given a list of all my running containers. Now I can see my container id, our image, when it was created, ports, names, etc.<\/span><\/p>\n<h3>Using Docker Hub<\/h3>\n<p><span style=\"font-weight: 400;\">Now, open a new tab (or, instance if you&#8217;re using the playground) and run the following:\u00a0<\/span><span style=\"font-weight: 400;\"><code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker run -it --rm danielkraic\/asciiquarium<\/code><\/span><\/p>\n<p><img class=\"wp-image-3913 size-full aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/giphy-2.gif\" alt=\"\" width=\"480\" height=\"240\" \/><\/p>\n<p><span style=\"font-weight: 400;\">WHOA! An aquarium!! But where did it come from?! Great question. It came from the Docker Hub registry! This is a public docker repository- what does that mean? <\/span><span style=\"font-weight: 400;\">This image is a user image, created by <\/span><span style=\"font-weight: 400;\">danielkraic. You can find it here:\u00a0<\/span><a href=\"https:\/\/hub.docker.com\/r\/danielkraic\/asciiquarium\/\"><span style=\"font-weight: 400;\">https:\/\/hub.docker.com\/r\/danielkraic\/asciiquarium\/<\/span><\/a><\/p>\n<p>Did you happen to notice the output of our terminal when we ran our previous command? First, it told us it was &#8220;Unable to find image &#8216;danielkraic\/asciiquarium:latest&#8217; locally&#8221;. Then, it said &#8220;latest: Pulling from danielkraic\/asciiquarium&#8221;. So, what&#8217;s happening here? Docker checked if we had that image locally, and it was not there. It then pulled\u00a0danielkraic\/asciiquarium and its layers from Docker Hub. This is where Docker gets it &#8220;light-weight&#8221; street cred- it will never pull the same image if you have it locally, only the layers it may not have had previously. This copy-on-write system allows for much faster build speeds. You can learn more about layers in my article here:\u00a0<a href=\"https:\/\/medium.com\/containers-101\/hello-whale-layers-in-docker-e37e726712b5\">Hello Whale: Layers in Docker<\/a><\/p>\n<p>While aquariums are cool, you&#8217;ll probably be using Docker for more than just cool ascii fonts and sharks&#8230; The good new is that Docker Hub has images of just about everything you could possibly need. Be it official images of languages, databases, or even <a href=\"https:\/\/hub.docker.com\/r\/rohan\/ascii-telnet-server\/\">the entire Star Wars movie in ascii art-<\/a>\u00a0Docker Hub has it.<\/p>\n<p><span style=\"font-weight: 400;\">Here are a couple things to know about the Docker registry:<\/span><\/p>\n<p><span style=\"font-weight: 400;\">-Many repos on DockerHub are created by people just like you <\/span><em><span style=\"font-weight: 400;\">(we\u2019ll make one of these in my next article)<\/span><\/em><span style=\"font-weight: 400;\">. The format of these will be something like chloecodesthing\/reallycoolthing<\/span><\/p>\n<p><span style=\"font-weight: 400;\">-There are also official images like <a href=\"https:\/\/hub.docker.com\/_\/python\/\">this python one<\/a>. They usually have really good documentation, tags for their many version listed, directions on how to run them, etc.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">While my aquarium is still running, let\u2019s run <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker ps<\/code> in our other tab. You&#8217;ll see our aquarium is running, as well as ubuntu (and perhaps <a href=\"https:\/\/hub.docker.com\/r\/rohan\/ascii-telnet-server\/\">Star Wars<\/a>, because I&#8217;m sure you were intrigued). If I <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">exit<\/code> out of any one them, and run a <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker ps<\/code>, I&#8217;ll no longer see that container listed.<\/span><\/p>\n<h3>Docker Layers<\/h3>\n<p>I&#8217;m sure you&#8217;ve noticed when you pull an image from Docker that you&#8217;ll see a bunch of letters\/numbers and either the words &#8220;pull complete&#8221; or &#8216;already exists&#8221; beside them. (If you want to see for yourself, run\u00a0<code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker pull docker\/whalesay<\/code> twice and look at the different outputs). You&#8217;ll see that the first time we run this command we see things loading and the &#8220;pull complete&#8221; response upon completion. While the second time we run the command, we get an &#8220;Already exists&#8221; message (and it goes much faster!).\u00a0Believe it or not, this isn\u2019t witchcraft. This is part of the awesomeness that is <a href=\"https:\/\/medium.com\/containers-101\/hello-whale-layers-in-docker-e37e726712b5\">\u201clayers\u201d in Docker.<\/a><\/p>\n<p>There are some really great articles out there that compare Docker layers to tracing paper, pancake stacks, etc., but I prefer the pizza metaphor. You can read more <a href=\"https:\/\/medium.com\/containers-101\/hello-whale-layers-in-docker-e37e726712b5\">here<\/a>, but TLDR:<\/p>\n<p><em>Let\u2019s say we had a cheese pizza. We have a base layer of dough, tomato sauce, and cheese. Then I decide I want to have half of my pizza with pepperoni with it. Would I bake another pizza from scratch, make new layers, and add pepperoni to that one? Of course not! I\u2019d just add a layer of pepperoni to half of my existing pizza. No need to go through the trouble of making a whole new base pie. As we make more changes, we create more layers. \ud83c\udf55<\/em><\/p>\n<p><img class=\"size-full wp-image-3915 aligncenter\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/giphy-2-1.gif\" alt=\"\" width=\"250\" height=\"250\" \/><\/p>\n<p>After running a container once on a machine, you&#8217;ll notice that subsequent builds load much faster. That&#8217;s because Docker&#8217;s layers allow for copy-on-write system- only requiring us to add what we need, and not rebuild anything we already have.<\/p>\n<p>To break it down even more:<\/p>\n<p>Images are read-only. Any time we create a new container from an image and we make changes to it, we can transform it into a new layer. A new image is created by stacking a new layer on top of an old image.<\/p>\n<h3><img class=\"aligncenter wp-image-3919 \" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/07\/giphy-3.gif\" alt=\"\" width=\"307\" height=\"307\" \/><\/h3>\n<h3>Make it stop!<\/h3>\n<p>There are two ways that we can stop our containers. If we use the <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker stop<\/code> command, it will send a TERM signal, and (after 10 seconds) will KILL it if the container has not stopped. Using the <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">kill<\/code> command will immediately stop the container. Feel free to try either now! First, you can run a <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker ps<\/code> to see what containers you have running. Simply write <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker stop<\/code> or <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker kill<\/code> and then the container id. It&#8217;s worth noting that &#8220;kill&#8221; can take multiple ids at a time, and you only need to include the first 3 numbers\/letters. Run a <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker ps<\/code> after killing\/stopping your containers to see them removed.<\/p>\n<p>Here are a couple more helpful commands:<\/p>\n<ul>\n<li>Want to see a list of your stopped containers? Use <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker ps -a<\/code><\/li>\n<li>Want to restart a container \u00a0(using the same options you launched with)? Use <code class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">docker start [your container id goes here]<\/code><\/li>\n<\/ul>\n<h3>Congrats! You did it!<\/h3>\n<p>Awesome! In about 10 minutes (maybe a little longer if you got distracted by <a href=\"https:\/\/hub.docker.com\/r\/rohan\/ascii-telnet-server\/\">ascii Star Wars)<\/a>\u00a0you&#8217;ve learned about Docker, ran your first container, used Docker Hub, learned about Docker layers, and stopped\/killed your running containers. Ready to dig a little deeper? Look out for my next article where we&#8217;ll create a repo on Docker Hub, learn about tags, and make our first Dockerfile.<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"3788\"\/>","protected":false},"excerpt":{"rendered":"<p>When I first started to learn Docker on my own, I quickly realized that while there are some amazing blogs\/videos\/classes online, there are very few articles that pull all the components of Docker together in one quick and easy getting-started guide.\u00a0So, in preparation for an intro to Docker class I\u2019ll be teaching at my alma &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/\">Read more<\/a><\/p>\n","protected":false},"author":125,"featured_media":4271,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Hello Whale: Docker Basics- Getting Started with Docker | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Hello Whale: Docker Basics- Getting Started with Docker\" \/>\n<meta property=\"og:description\" content=\"When I first started to learn Docker on my own, I quickly realized that while there are some amazing blogs\/videos\/classes online, there are very few articles that pull all the components of Docker together in one quick and easy getting-started guide.\u00a0So, in preparation for an intro to Docker class I\u2019ll be teaching at my alma &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2017-08-02T23:26:00+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-11T18:24:17+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716-1024x321.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1024\" \/>\n\t<meta property=\"og:image:height\" content=\"321\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Contributor\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"9 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716.png\",\"width\":5336,\"height\":1675},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/\",\"name\":\"Hello Whale: Docker Basics- Getting Started with Docker | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#primaryimage\"},\"datePublished\":\"2017-08-02T23:26:00+00:00\",\"dateModified\":\"2022-02-11T18:24:17+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Hello Whale: Docker Basics- Getting Started with Docker\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\"},\"headline\":\"Hello Whale: Docker Basics- Getting Started with Docker\",\"datePublished\":\"2017-08-02T23:26:00+00:00\",\"dateModified\":\"2022-02-11T18:24:17+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#webpage\"},\"wordCount\":1688,\"commentCount\":1,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716.png\",\"articleSection\":[\"Docker Tutorials\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\",\"name\":\"Contributor\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"caption\":\"Contributor\"},\"url\":\"https:\/\/codefresh.io\/author\/contributor\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Hello Whale: Docker Basics- Getting Started with Docker | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/","og_locale":"en_US","og_type":"article","og_title":"Hello Whale: Docker Basics- Getting Started with Docker","og_description":"When I first started to learn Docker on my own, I quickly realized that while there are some amazing blogs\/videos\/classes online, there are very few articles that pull all the components of Docker together in one quick and easy getting-started guide.\u00a0So, in preparation for an intro to Docker class I\u2019ll be teaching at my alma &hellip; Read more","og_url":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2017-08-02T23:26:00+00:00","article_modified_time":"2022-02-11T18:24:17+00:00","og_image":[{"width":1024,"height":321,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716-1024x321.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Contributor","Est. reading time":"9 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716.png","width":5336,"height":1675},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/","name":"Hello Whale: Docker Basics- Getting Started with Docker | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#primaryimage"},"datePublished":"2017-08-02T23:26:00+00:00","dateModified":"2022-02-11T18:24:17+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Hello Whale: Docker Basics- Getting Started with Docker"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75"},"headline":"Hello Whale: Docker Basics- Getting Started with Docker","datePublished":"2017-08-02T23:26:00+00:00","dateModified":"2022-02-11T18:24:17+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#webpage"},"wordCount":1688,"commentCount":1,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/08\/hjkhjkh-e1501716156716.png","articleSection":["Docker Tutorials"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/docker-tutorial\/hello-whale-docker-basics-getting-started-docker\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75","name":"Contributor","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","caption":"Contributor"},"url":"https:\/\/codefresh.io\/author\/contributor\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/3788"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/125"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=3788"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/3788\/revisions"}],"predecessor-version":[{"id":21474,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/3788\/revisions\/21474"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/4271"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=3788"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=3788"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=3788"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}