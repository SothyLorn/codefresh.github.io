{"id":6740,"date":"2019-06-30T21:15:19","date_gmt":"2019-06-30T21:15:19","guid":{"rendered":"https:\/\/codefresh.io\/?post_type=dockerguides&#038;p=6740"},"modified":"2019-07-25T07:51:51","modified_gmt":"2019-07-25T07:51:51","slug":"build-docker-image-dockerfiles","status":"publish","type":"post","link":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/","title":{"rendered":"Building Docker Images with Dockerfiles"},"content":{"rendered":"<p>In this guide we&#8217;ll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.<\/p>\n<h2>What is a Dockerfile?<\/h2>\n<ul>\n<li>A Dockerfile is a text configuration file written using a <a href=\"https:\/\/docs.docker.com\/engine\/reference\/builder\/\">special syntax<\/a><\/li>\n<li>It describes step-by-step instructions of all the commands you need to run to assemble a Docker Image.<\/li>\n<li>The <code>docker build<\/code> command processes this file generating a Docker Image in your Local Image Cache, which you can then start-up using the <code>docker run<\/code> command, or push to a permanent Image Repository.<\/li>\n<\/ul>\n<h2>Create a Dockerfile<\/h2>\n<p>Creating a Dockerfile is as easy as creating a new file named &#8220;Dockerfile&#8221; with your text editor of choice and defining some instructions. The name of the file<br \/>\ndoes not really matter. Dockerfile is the default name but you can use any filename that you want (and even have multiple dockerfiles in the same folder)<\/p>\n<h2>Simple Dockerfile for NGINX<\/h2>\n<pre class=\"lang:yaml decode:true\">#\n# Each instruction in this file generates a new layer that gets pushed to your local image cache\n#\n\n#\n# Lines preceeded by # are regarded as comments and ignored\n#\n\n#\n# The line below states we will base our new image on the Latest Official Ubuntu \nFROM ubuntu:latest\n\n#\n# Identify the maintainer of an image\nLABEL maintainer=\"myname@somecompany.com\"\n\n#\n# Update the image to the latest packages\nRUN apt-get update &amp;&amp; apt-get upgrade -y\n\n#\n# Install NGINX to test.\nRUN apt-get install nginx -y\n\n#\n# Expose port 80\nEXPOSE 80\n\n#\n# Last is the actual command to start up NGINX within our Container\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n<\/pre>\n<h2>Dockerfile Commands<\/h2>\n<ul style=\"list-style-type: square;\">\n<li><strong>ADD<\/strong> &#8211; Defines files to copy from the Host file system onto the Container\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">ADD .\/local\/config.file \/etc\/service\/config.file<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>CMD<\/strong> &#8211; This is the command that will run when the Container starts\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">CMD [&#8220;nginx&#8221;, &#8220;-g&#8221;, &#8220;daemon off;&#8221;]<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>ENTRYPOINT<\/strong> &#8211; Sets the default application used every time a Container is created from the Image. If used in conjunction with CMD, you can remove the application and just define the arguments there\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">CMD Hello World!<\/span><\/li>\n<li><span class=\"lang:yaml decode:true crayon-inline\">ENTRYPOINT echo<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>ENV<\/strong> &#8211; Set\/modify the environment variables within Containers created from the Image.\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">ENV VERSION 1.0<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>EXPOSE<\/strong> &#8211; Define which Container ports to expose\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">EXPOSE 80<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>FROM<\/strong> &#8211; Select the base image to build the new image on top of\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">FROM ubuntu:latest<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>LABEL maintainer<\/strong> &#8211; Optional field to let you identify yourself as the maintainer of this image. This is just a label (it used to be a dedicated Docker directive).\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">LABEL maintainer=someone@xyz.xyz&#8221;<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>RUN<\/strong> &#8211; Specify commands to make changes to your Image and subsequently the Containers started from this Image. This includes updating packages, installing software, adding users, creating an initial database, setting up certificates, etc. These are the commands you would run at the command line to install and configure your application. This is one of the most important dockerfile directives.\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install -y nginx &amp;&amp; rm -rf \/var\/lib\/apt\/lists\/*<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>USER<\/strong> &#8211; Define the default User all commands will be run as within any Container created from your Image. It can be either a UID or username\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">USER docker <\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>VOLUME<\/strong> &#8211; Creates a mount point within the Container linking it back to file systems accessible by the Docker Host. New Volumes get populated with the pre-existing contents of the specified location in the image. It is specially relevant to mention is that defining Volumes in a Dockerfile can lead to issues. Volumes should be managed with docker-compose or &#8220;docker run&#8221; commands. Volumes are optional. If your application does not have any state (and most web applications work like this) then you don&#8217;t need to use volumes.\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">VOLUME \/var\/log<\/span><\/li>\n<\/ul>\n<\/li>\n<li><strong>WORKDIR<\/strong> &#8211; Define the default working directory for the command defined in the &#8220;ENTRYPOINT&#8221; or &#8220;CMD&#8221; instructions\n<ul style=\"list-style-type: square;\">\n<li><span class=\"lang:yaml decode:true crayon-inline\">WORKDIR \/home<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h2>Building and Testing Dockerfiles<\/h2>\n<p>There&#8217;s a free service that lets you quickly spin up Docker instances through a web interface called: &#8220;Play With Docker&#8221;<\/p>\n<ol>\n<li>First of all, head over to\u00a0<a href=\"http:\/\/play-with-docker.com\">http:\/\/play-with-docker.com<\/a>\u00a0and start a new session. You need to create an account first.<\/li>\n<li>Once your session is active click on &#8220;Add New Instance&#8221;:<\/li>\n<\/ol>\n<p><img class=\"aligncenter wp-image-3684 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-14.png\" alt=\"dockerfile play with docker codefresh\" width=\"323\" height=\"236\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-14.png 323w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-14-300x219.png 300w\" sizes=\"(max-width: 323px) 100vw, 323px\" \/>3. A new instance will start with a Docker Engine ready to accept commands<\/p>\n<p><img class=\"aligncenter wp-image-3685 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-15.png\" alt=\"dockerfile codefresh Docker Engine Ready\" width=\"1535\" height=\"505\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-15.png 1535w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-15-300x99.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-15-768x253.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-15-1024x337.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-15-628x207.png 628w\" sizes=\"(max-width: 1535px) 100vw, 1535px\" \/>4. Next create\/edit the Dockerfile. Run &#8220;vi Dockerfile&#8221;, press &#8220;i&#8221; to switch to &#8220;Insert Mode&#8221;, copy\/paste the contents of our Dockerfile, press &#8220;Esc&#8221; to exit &#8220;Insert Mode&#8221;, and save+exit by typing &#8220;:x&#8221;<\/p>\n<p><img class=\"aligncenter wp-image-3690 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-21.png\" alt=\"codefresh Dockerfile\" width=\"1176\" height=\"724\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-21.png 1176w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-21-300x185.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-21-768x473.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-21-1024x630.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-21-533x328.png 533w\" sizes=\"(max-width: 1176px) 100vw, 1176px\" \/>5. Build the new image using the command <code>docker build &lt;path&gt;<\/code>. Path refers to the directory containing the Dockerfile.<\/p>\n<p><img class=\"aligncenter wp-image-3687 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-18.png\" alt=\"codefresh Docker build\" width=\"1538\" height=\"491\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-18.png 1538w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-18-300x96.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-18-768x245.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-18-1024x327.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-18-628x200.png 628w\" sizes=\"(max-width: 1538px) 100vw, 1538px\" \/>6. At the end of the process you should see the message &#8220;Successfully built &lt;image ID&gt;&#8221;<\/p>\n<p><img class=\"aligncenter wp-image-3686 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-17.png\" alt=\"codefresh Docker Image built\" width=\"1897\" height=\"954\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-17.png 1897w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-17-300x151.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-17-768x386.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-17-1024x515.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-17-628x316.png 628w\" sizes=\"(max-width: 1897px) 100vw, 1897px\" \/>7. Start the new image and test connectivity to NGINX. Run the command <code>docker run -p 80:80 &lt;image ID&gt;<\/code>. The option <code>-p 80:80<\/code> exposes the Container port 80 as the Host port 80 to the world<\/p>\n<p><img class=\"aligncenter wp-image-3688 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-19.png\" alt=\"codefresh Docker Container Start\" width=\"1186\" height=\"420\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-19.png 1186w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-19-300x106.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-19-768x272.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-19-1024x363.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-19-628x222.png 628w\" sizes=\"(max-width: 1186px) 100vw, 1186px\" \/>8. As a result a port 80 link should have become active next to the IP. Click on it to access your NGINX service<\/p>\n<p><img class=\"aligncenter wp-image-3689 size-full\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-20.png\" alt=\"codefresh NGINX docker container\" width=\"604\" height=\"255\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-20.png 604w, https:\/\/codefresh.io\/wp-content\/uploads\/2017\/06\/Capture-20-300x127.png 300w\" sizes=\"(max-width: 604px) 100vw, 604px\" \/><\/p>\n<h2>Building Docker images for your own applications<\/h2>\n<p>In the previous section we have seen an example Docker image for nginx. But what if you want to package your own application in a Docker image?<\/p>\n<p>In this case you can create a Dockerfile in the same folder as your source code. Then put instructions in the dockerfile that mirror what you do locally on your workstation to compile\/package the code.<\/p>\n<p>The first step should be to find a public docker images that uses your programming language. Some examples are:<\/p>\n<ul>\n<li><a href=\"https:\/\/hub.docker.com\/_\/node\/\">Node base image<\/a><\/li>\n<li><a href=\"https:\/\/hub.docker.com\/_\/openjdk\">Java base image<\/a><\/li>\n<li><a href=\"https:\/\/hub.docker.com\/_\/ruby\/\">Ruby base image<\/a><\/li>\n<li><a href=\"https:\/\/hub.docker.com\/_\/python\">Python base image<\/a><\/li>\n<li><a href=\"https:\/\/hub.docker.com\/_\/php\">Php base image<\/a><\/li>\n<li><a href=\"https:\/\/hub.docker.com\/_\/golang\">Go base image<\/a><\/li>\n<\/ul>\n<p>Once you find a proper base image you can use it to package your own application. Here is an example for Python<\/p>\n<pre>FROM python:3.6.4-alpine3.6\nENV FLASK_APP=minitwit\n\nCOPY . \/app\nWORKDIR \/app\n\nRUN pip install --editable .\nRUN flask initdb\n\nEXPOSE 5000\n\nCMD [ \"flask\", \"run\", \"--host=0.0.0.0\" ]\n<\/pre>\n<p>Here is another example for Node.js<\/p>\n<pre>FROM node:10\n\nWORKDIR \/usr\/src\/app\n\n# Install app dependencies\nCOPY package*.json .\/\n\nRUN npm install\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"node\", \"server.js\" ]\n<\/pre>\n<h2>How to create an optimized Docker image from your dockerfile<\/h2>\n<p>Once you become familiar with building docker images you also need to pay attention to two more topics<\/p>\n<ul>\n<li>Creating docker images with the smallest file size possible<\/li>\n<li>Using multi-stage builds in order to package only what is actually needed<\/li>\n<\/ul>\n<p>For the first subject be sure to check out our <a href=\"https:\/\/codefresh.io\/docker-tutorial\/hello-whale-layers-docker\/\">Docker layer tutorial<\/a>. For multi-stage builds see also our <a href=\"https:\/\/codefresh.io\/docker-tutorial\/docker-multi-stage-builds\/\">dedicated tutorial<\/a>.<\/p>\n<p>If you want to know all the best practices about creating and using dockerfiles in you team see our in-depth <a href=\"https:\/\/codefresh.io\/containers\/docker-anti-patterns\/\">docker best practices guide<\/a>.<\/p>\n<p>Here is an example with a Node application that is using multi-stage builds:<\/p>\n<pre>FROM node:8.16 as build-deps\nWORKDIR \/usr\/src\/app\nCOPY package.json yarn.lock .\/\nRUN yarn\nCOPY . .\/\nRUN yarn build\n\nFROM nginx:1.12-alpine\nCOPY --from=build-deps \/usr\/src\/app\/build \/usr\/share\/nginx\/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n<\/pre>\n<p>Go have fun building your own Images!<\/p>\n<p>For more examples of Dockerfile templates, <a href=\"https:\/\/g.codefresh.io\/signup\">login to Codefresh (it&#8217;s free)<\/a>, click add Repository and checkout the many templates and examples.<\/p>\n<p>Ready to try Codefresh, the CI\/CD platform for Docker\/Kubernetes\/Helm? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=builddockkernginx\">Create Your Free Account Today<\/a>!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"6740\"\/>","protected":false},"excerpt":{"rendered":"<p>In this guide we&#8217;ll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app. What is a Dockerfile? A Dockerfile is a text configuration file written using a special syntax It describes step-by-step instructions of all the commands you need to &hellip; <a href=\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/\">Read more<\/a><\/p>\n","protected":false},"author":125,"featured_media":14096,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[97,121],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Building Docker Images with Dockerfiles | Codefresh<\/title>\n<meta name=\"description\" content=\"In this guide we&#039;ll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Building Docker Images with Dockerfiles\" \/>\n<meta property=\"og:description\" content=\"In this guide we&#039;ll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2019-06-30T21:15:19+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-07-25T07:51:51+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png\" \/>\n\t<meta property=\"og:image:width\" content=\"960\" \/>\n\t<meta property=\"og:image:height\" content=\"540\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Contributor\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png\",\"width\":960,\"height\":540},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#webpage\",\"url\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/\",\"name\":\"Building Docker Images with Dockerfiles | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#primaryimage\"},\"datePublished\":\"2019-06-30T21:15:19+00:00\",\"dateModified\":\"2019-07-25T07:51:51+00:00\",\"description\":\"In this guide we'll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Building Docker Images with Dockerfiles\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\"},\"headline\":\"Building Docker Images with Dockerfiles\",\"datePublished\":\"2019-06-30T21:15:19+00:00\",\"dateModified\":\"2019-07-25T07:51:51+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#webpage\"},\"wordCount\":1001,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png\",\"keywords\":[\"dockerfile\",\"guides\"],\"articleSection\":[\"Docker Tutorials\"],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\",\"name\":\"Contributor\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"caption\":\"Contributor\"},\"url\":\"https:\/\/codefresh.io\/author\/contributor\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Building Docker Images with Dockerfiles | Codefresh","description":"In this guide we'll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/","og_locale":"en_US","og_type":"article","og_title":"Building Docker Images with Dockerfiles","og_description":"In this guide we'll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.","og_url":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2019-06-30T21:15:19+00:00","article_modified_time":"2019-07-25T07:51:51+00:00","og_image":[{"width":960,"height":540,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Contributor","Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png","width":960,"height":540},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#webpage","url":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/","name":"Building Docker Images with Dockerfiles | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#primaryimage"},"datePublished":"2019-06-30T21:15:19+00:00","dateModified":"2019-07-25T07:51:51+00:00","description":"In this guide we'll learn about the Dockerfile. What it is, how to create one, and how to configure the basics to bring up your own Dockerized app.","breadcrumb":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Building Docker Images with Dockerfiles"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75"},"headline":"Building Docker Images with Dockerfiles","datePublished":"2019-06-30T21:15:19+00:00","dateModified":"2019-07-25T07:51:51+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#webpage"},"wordCount":1001,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/docker-tutorial\/build-docker-image-dockerfiles\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2019\/06\/post-designs-9.png","keywords":["dockerfile","guides"],"articleSection":["Docker Tutorials"],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75","name":"Contributor","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","caption":"Contributor"},"url":"https:\/\/codefresh.io\/author\/contributor\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6740"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/125"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=6740"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6740\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/14096"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=6740"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=6740"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=6740"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}