{"id":6877,"date":"2018-01-08T17:58:46","date_gmt":"2018-01-08T17:58:46","guid":{"rendered":"https:\/\/codefresh.io\/kubernetes-guides\/5-container-monitoring-solutions-2\/"},"modified":"2022-03-01T17:38:59","modified_gmt":"2022-03-01T17:38:59","slug":"5-container-monitoring-solutions-2","status":"publish","type":"post","link":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/","title":{"rendered":"5 Container Monitoring Solutions"},"content":{"rendered":"<p><a href=\"https:\/\/puppet.com\/resources\/whitepaper\/2015-state-devops-report\">The 2015 State of DevOps Report<\/a>, done by Puppet Labs, demonstrates that high-performing teams may resolve incidents 168 times faster than others. Their monitoring systems enable ops to quickly identify and resolve issues. Containers are synonymous with production these days, but this new technology is not much different from monitoring other infrastructure components.<\/p>\n<p>When high-level monitoring is implemented and consistently applied, this makes it easier for engineers to diagnose and resolve issues. Choosing a strategy involves understanding the technical requirements, desired outcomes, and tradeoffs. Let\u2019s start by looking at what to monitor before moving on to possible implementations.<\/p>\n<h2>What to Monitor<\/h2>\n<p>Containers are no different from traditional processes, with extra machinery to isolate them from other processes. This means you\u2019ll need common metrics like memory utilization and CPU usage. You\u2019ll also need container-specific metrics such as the CPU limit (how much of the host CPU the container is allowed) and memory limit (how much host memory the container is allowed). These four metrics provide important utilization ratios, and they can provide information on when to scale up, out, or in.<\/p>\n<p>There\u2019s more to the story than just CPU and memory though. Consider your container infrastructure. If you are using Kubernetes, then you\u2019ll also need telemetry on the cluster itself. The same goes for something like DC\/OS or Docker Swarm. You\u2019ll need ratios of cluster- allocatable memory and CPUs, as well as other orchestration-specific metrics. These ratios tell you when to scale up, out, or in.<\/p>\n<p>Step inside the container for a moment. Let\u2019s assume a container runs an HTTP server. You\u2019ll need to collect standard metrics like request counts and counts on 2xx, 4xx, 5xx, and latency. Assume you have another container-processing job off queue. You\u2019ll need to collect metrics such as the number of processed jobs, failed jobs, or retries. These are application-layer metrics, separate from the infrastructure layer, which are impossible to collect from the container runtime. Instead, the monitoring system must pull them from the process itself or the process must push them to the monitoring system. A good monitoring strategy accounts for different needs at different layers throughout the stack.<\/p>\n<p>There is also nonnumeric data coming from multiple layers in the stack. It may be an error like \u201ccould not connect to database,\u201d \u201ccontainer restart,\u201d or \u201cprocess thrashing.\u201d These usually come across as text-based logs and tend to contain genuinely useful information. A good monitoring solution considers this information, as well.<\/p>\n<h2>Comparing Monitoring Systems<\/h2>\n<p>Good monitoring systems have a few things in common. You can identify what system is good for you by considering the following:<\/p>\n<ol>\n<li>How easy is it to add instrumentation to existing code? How are the existing libraries for the languages in use? Are different data types supported?<\/li>\n<li>How easy is to configure alarms on different data? How do alarms connect with the on-call team?<\/li>\n<li>How well does the visualization system allow you to explore the data? Can you create ad-hoc charts and\/or saved dashboards?<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p>How many existing infrastructure components\u2014especially container orchestration\u2014are supported?<\/p>\n<p>These questions provide a strong framework for assessing how telemetry works across the stack, along with visualization and alerting. Here are five options for container monitoring that do well in all areas.<\/p>\n<h2>1. Datadog<\/h2>\n<p><a href=\"https:\/\/www.datadoghq.com\/product\/\">Datadog<\/a> uses an agent approach to pull metrics from various components. It supports Docker, Kubernetes, DCOS, Docker Swarm, and a host of other common components. Datadog provides all the key metrics out of the box and integrates easily with different layers in the stack. The Datadog web application features dashboards and alerts, and the agent is open source and highly configurable. Engineers can write custom integrations to create events from text-based logs and custom metrics. Datadog also provides DogStatsD, a StatsD server that reports to Datadog. This is great for teams already using StatsD or looking for an easy application-layer telemetry solution.<\/p>\n<h2>2. Prometheus<\/h2>\n<p><a href=\"https:\/\/prometheus.io\/\">Prometheus<\/a> is a complete open-source monitoring solution that differs from other solutions in that it scrapes data from components. Instead of an agent, there is a centralized server that manages registered systems (via some service discovery) from which to scrape data. The full stack includes alerts and visualization. Prometheus is also fully cloud native, so expect more and more systems to speak Prometheus over time. The system falls short on collecting text data since it\u2019s primarily time-series based. Also bear in mind that each system must aggregate data itself. This will be offloaded to a language-specific library, such as a NPM package for JavaScript application or a Ruby gem for Ruby applications. Prometheus primarily scrapes data over HTTP, so you may need extra infrastructure if components do not use HTTP. Consider a short-lived job. You\u2019ll need a push gateway for that information. Consider a long-lived process working jobs off a queue. That process may integrate with a push gateway or provide an HTTP server from which to scrape data.<\/p>\n<h2>3. ELK (Elasticsearch, Logstash, Kibana)<\/h2>\n<p>ELK is a flexible, open-source solution that handles text streams and time-series data. The stack is comprised of three components &#8211; Elasticsearch, Logstash and Kibana, each responsible for a different stage in the data pipeline. This makes it easier to integrate with a variety of infrastructure components without imposing requirements on them.<\/p>\n<p>Running all these components in large environments is the largest trade-off with this setup as there is a lot of maintenance and manual work required. Scaling and maintaining Elasticsearch can be a full-time job. Adding a buffer or queuing mechanism, such as Kafka or Redis is a must to persist data. Archiving, alerting, security &#8212; all these need to be added to the stack if you want a production-grade monitoring system.<\/p>\n<p>Hosted ELK solutions such as <a href=\"https:\/\/logz.io\">Logz.io<\/a> or <a href=\"https:\/\/www.elastic.co\/\">Elastic Cloud<\/a> are a good option if you want to save on resources, as they will operate your Elasticsearch cluster and configure all components for you. Pushing data to the cluster, which is easy, is your responsibility, and off you go.<\/p>\n<h2>4. Sysdig<\/h2>\n<p><a href=\"https:\/\/sysdig.com\/\">Sysdig<\/a> is a general-purpose monitoring solution, and Sysdig Cloud provides a cloud-hosted monitoring system. The Sysdig CLI may be installed and run on any Linux system to collect and analyze data for specific time windows. Sysdig Cloud is similar to Datadog\u2019s agent approach. The product offers Docker monitoring; alerting and troubleshooting with intelligent Kubernetes, Mesos, and Swarm integration; and visualization and alerting.<\/p>\n<h2>5. Roll Your Own!<\/h2>\n<p>There\u2019s always an option of rolling your own solution. You may choose this if none of the existing options fits your requirements or paid solutions are too costly. Rolling your own solution will likely require some of the components already discussed. You\u2019ll need a way to collect and aggregate time-series data across multiple layers in the stack. Tools like Collected handle infrastructure data. Something flexible like StatsD fits into the application layer. The data must be stored for analysis, visualization, and alerting. You may opt for something like Graphite (and hosted variations) for use with StatsD. InfluxDB is another common choice for storing time-series data. You\u2019ll also need a way to visualize data and create alerts. There are different architectures for this as well. One approach is to push everything to a system like Riemann, which can handle aggregations, alerting, and data forwarding. <a href=\"https:\/\/www.artofmonitoring.com\/\">Rolling your own solution<\/a> requires careful planning at all layers of the stack and more maintenance than other solutions.<\/p>\n<h2>How to Choose<\/h2>\n<p>Everything is a tradeoff in engineering, and choosing your monitoring approach is no different. You must consider what aspects are most important, such as real-time log stream, time-series data visualization, off-the-shelf integrations, or flexibility for custom integrations. Ultimately your solution should provide, at a minimum:<\/p>\n<ul>\n<li>key container metrics for CPU, memory, I\/O;<\/li>\n<li>container orchestration integration such as Kubernetes, DC\/OS, or Docker Swarm;<\/li>\n<li>off-the-shelf integrations with common components like Redis (don\u2019t spend time reinventing the wheel for common cases); and<\/li>\n<li>time-series visualization and alerting.<\/li>\n<\/ul>\n<h2>Summary<\/h2>\n<p>All the options discussed here meet the above criteria. It\u2019s up to you to decide which combination of tradeoffs fits for your team. Beware of rolling your own if this is your first time; you\u2019re likely to create more problems than you solve, and that\u2019s the exact opposite of what you need in a monitoring system. Put the monitoring system into production as soon as possible<\/p>\n<p>Strong production environments revolve around a well-oiled monitoring system. But your job doesn\u2019t end there. Your monitoring system keeps production safe, so experiment and improve it as your stack evolves. Your on-call team will thank you for it.<\/p>\n<p>New to Codefresh? Get started with Codefresh by <strong><a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=5conB\">signing up for an account<\/a><\/strong> today!<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"6877\"\/>","protected":false},"excerpt":{"rendered":"<p>The 2015 State of DevOps Report, done by Puppet Labs, demonstrates that high-performing teams may resolve incidents 168 times faster than others. Their monitoring systems enable ops to quickly identify and resolve issues. Containers are synonymous with production these days, but this new technology is not much different from monitoring other infrastructure components. When high-level &hellip; <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/\">Read more<\/a><\/p>\n","protected":false},"author":27,"featured_media":1398,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[1657],"tags":[14,22,24,44],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>5 Container Monitoring Solutions | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"5 Container Monitoring Solutions\" \/>\n<meta property=\"og:description\" content=\"The 2015 State of DevOps Report, done by Puppet Labs, demonstrates that high-performing teams may resolve incidents 168 times faster than others. Their monitoring systems enable ops to quickly identify and resolve issues. Containers are synonymous with production these days, but this new technology is not much different from monitoring other infrastructure components. When high-level &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2018-01-08T17:58:46+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-01T17:38:59+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1534\" \/>\n\t<meta property=\"og:image:height\" content=\"401\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@todaywasawesome\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Dan Garfield\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg\",\"width\":1534,\"height\":401},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#webpage\",\"url\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/\",\"name\":\"5 Container Monitoring Solutions | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#primaryimage\"},\"datePublished\":\"2018-01-08T17:58:46+00:00\",\"dateModified\":\"2022-03-01T17:38:59+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"5 Container Monitoring Solutions\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\"},\"headline\":\"5 Container Monitoring Solutions\",\"datePublished\":\"2018-01-08T17:58:46+00:00\",\"dateModified\":\"2022-03-01T17:38:59+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#webpage\"},\"wordCount\":1442,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg\",\"keywords\":[\"docker\",\"monitoring\",\"Containers\",\"Kubernetes\"],\"articleSection\":[\"Kubernetes Tutorials\"],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\",\"name\":\"Dan Garfield\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"caption\":\"Dan Garfield\"},\"description\":\"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome\",\"sameAs\":[\"https:\/\/twitter.com\/todaywasawesome\"],\"url\":\"https:\/\/codefresh.io\/author\/dang\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"5 Container Monitoring Solutions | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/","og_locale":"en_US","og_type":"article","og_title":"5 Container Monitoring Solutions","og_description":"The 2015 State of DevOps Report, done by Puppet Labs, demonstrates that high-performing teams may resolve incidents 168 times faster than others. Their monitoring systems enable ops to quickly identify and resolve issues. Containers are synonymous with production these days, but this new technology is not much different from monitoring other infrastructure components. When high-level &hellip; Read more","og_url":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2018-01-08T17:58:46+00:00","article_modified_time":"2022-03-01T17:38:59+00:00","og_image":[{"width":1534,"height":401,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@todaywasawesome","twitter_site":"@codefresh","twitter_misc":{"Written by":"Dan Garfield","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg","width":1534,"height":401},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#webpage","url":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/","name":"5 Container Monitoring Solutions | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#primaryimage"},"datePublished":"2018-01-08T17:58:46+00:00","dateModified":"2022-03-01T17:38:59+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"5 Container Monitoring Solutions"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4"},"headline":"5 Container Monitoring Solutions","datePublished":"2018-01-08T17:58:46+00:00","dateModified":"2022-03-01T17:38:59+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#webpage"},"wordCount":1442,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/5-container-monitoring-solutions-2\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2017\/01\/The-State-of-Container-Security-blog.jpg","keywords":["docker","monitoring","Containers","Kubernetes"],"articleSection":["Kubernetes Tutorials"],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4","name":"Dan Garfield","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","caption":"Dan Garfield"},"description":"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome","sameAs":["https:\/\/twitter.com\/todaywasawesome"],"url":"https:\/\/codefresh.io\/author\/dang\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6877"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/27"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=6877"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6877\/revisions"}],"predecessor-version":[{"id":21752,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6877\/revisions\/21752"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/1398"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=6877"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=6877"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=6877"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}