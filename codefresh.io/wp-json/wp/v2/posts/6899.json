{"id":6899,"date":"2017-07-28T15:45:52","date_gmt":"2017-07-28T15:45:52","guid":{"rendered":"https:\/\/codefresh.io\/kubernetes-guides\/recover-broken-kubernetes-cluster-2\/"},"modified":"2022-01-06T15:49:50","modified_gmt":"2022-01-06T15:49:50","slug":"recover-broken-kubernetes-cluster","status":"publish","type":"post","link":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/","title":{"rendered":"Cluster @%#&#8217;d &#8211; How to Recover a Broken Kubernetes Cluster"},"content":{"rendered":"<p>Kubernetes deployments have 3 distinct types of nodes: master nodes, ETCD nodes, and worker nodes. In high availability (HA) setups, all of these node types are replicated. Failures of individual nodes will not cause catastrophic consequences, but you need to get your cluster healthy as quickly as possible to prevent further failures.<\/p>\n<p>Recovering from events like this can be extremely difficult. Not only are your nodes (and production software) down, but you must expend IT and engineering effort to fix them. What&#8217;s worse, there aren&#8217;t any comprehensive guides to get our cluster back up and running. Until now.<\/p>\n<p><!--more--><\/p>\n<h2>An ETCD Node has Failed<\/h2>\n<p><strong>How to tell?<\/strong><\/p>\n<p>The <code>kubectl<\/code> command has a resource, Component Statuses, that will show the health of ETCD:<\/p>\n<pre>$ kubectl get cs\nNAME                 STATUS      MESSAGE\nscheduler            Healthy     ok                                                               \ncontroller-manager   Healthy     ok                                                               \netcd-2               Healthy     {\"health\": \"true\"}                                                               \netcd-0               Healthy     {\"health\": \"true\"}                                                               \netcd-1               Unhealthy   Client.Timeout exceeded while awaiting headers\n<\/pre>\n<p><strong>HA Recovery Steps<\/strong><\/p>\n<p>If Kubernetes was properly configured in HA mode, then the cluster should be able to handle losing a single ETCD node. Create a new node to replace the failed ETCD node. Record the IP Address of the new node, but do not start ETCD yet.<\/p>\n<p>On one of the working ETCD Nodes, remove the failed ETCD node from the cluster and add the IP Address of the new node:<\/p>\n<pre class=\"\">$ etcdctl --endpoints=http:\/\/127.0.0.1:2379 member list\n10b576500ed3ae71: name=kube-etcd-1 peerURLs=https:\/\/10.0.0.1:2380 clientURLs=https:\/\/10.0.0.1:2379 isLeader=false\n30bcb5f2f4c17805: name=kube-etcd-2 peerURLs=https:\/\/10.0.0.2:2380 clientURLs=https:\/\/10.0.0.2:2379 isLeader=false\na908b0f9f07a7127: name=kube-etcd-3 peerURLs=https:\/\/10.0.0.3:2380 clientURLs=https:\/\/10.0.0.3:2379 isLeader=true\n\n$ etcdctl --endpoints=http:\/\/127.0.0.1:2379 member remove 30bcb5f2f4c17805\nRemoved member 30bcb5f2f4c17805 from cluster\n\n$ etcdctl member add kube-etcd-4 --peer-urls=http:\/\/[new node IP]:2380\nMember 2be1eb8f84b7f63e added to cluster ef37ad9dc622a7c4\n<\/pre>\n<p>Configure the new ETCD node to connect to the existing cluster:<\/p>\n<pre>export ETCD_NAME=\"kube-etcd-4\"\nexport ETCD_INITIAL_CLUSTER=\"kube-etcd-1=https:\/\/10.0.0.1:2380,kube-etcd-3=https:\/\/10.0.0.3:2380,kube-etcd-4=https:\/\/[new node IP]:2380\"\nexport ETCD_INITIAL_CLUSTER_STATE=existing\netcd [flags]\n<\/pre>\n<p>Finally, login to each Kubernetes master and update the <code>kube-apiserver<\/code> component&#8217;s <code>--etcd-servers=<\/code> option to point to the new ETCD node.<\/p>\n<p><strong>Non-HA Recovery Steps<\/strong><\/p>\n<p>If Kubernetes was not running in HA mode and the only ETCD node has failed, the cluster will be down.<\/p>\n<p>If you still have access to the disk or a snapshot, attempt to recover the ETCD data directory. Typically this is the <code>\/var\/lib\/etcd<\/code> directory. Build a new ETCD node with the recovered data and the same flags as the failed ETCD node except this time, set <code>ETCD_INITIAL_CLUSTER_STATE=existing<\/code>.<\/p>\n<p>Login to the Kubernetes master and update the <code>kube-apiserver<\/code> component&#8217;s <code>--etcd-servers=<\/code> option to point to the new etcd node.<\/p>\n<h2>A Kubernetes master Node has Failed<\/h2>\n<p><strong>How to tell?<\/strong><\/p>\n<p>The <code>kubectl get nodes<\/code> command will report master nodes that are unreachable as <code>NotReady<\/code>:<\/p>\n<pre>$ kubectl get nodes\nNAME            STATUS     AGE       VERSION\nkube-master-1   Ready      21h       v1.7.2\nkube-master-2   NotReady   20h       v1.7.2\nkube-master-3   Ready      20h       v1.7.2\nkube-worker-1   Ready      17h       v1.7.2\nkube-worker-2   Ready      17h       v1.7.2\n<\/pre>\n<p><strong>HA Recovery Steps<\/strong><\/p>\n<p>Create a new Kubernetes node and join it to the working cluster. Add the appropriate master <code>labels<\/code> and <code>taints<\/code>, either in the <code>kubelet<\/code> configuration, or by using <code>kubectl<\/code>:<\/p>\n<pre>kubectl label nodes kube-master-4 node-role.kubernetes.io\/master=\nkubectl taint nodes kube-master-4 node-role.kubernetes.io\/master=:NoSchedule\n<\/pre>\n<p>Login to one of the functioning Kubernetes masters and copy the configuration to the new Kubernetes master. Usually this can be accomplished by copying the <code>\/etc\/kubernetes<\/code> directory from a working master to the new master.<\/p>\n<p>Certificates, <code>kube-apiserver<\/code>, <code>kube-controller-manager<\/code>, and <code>kube-scheduler<\/code> configurations should be copied to the new master. If they are defined as systems services, ensure that all services have started properly. If they are run using <code>kubelet<\/code> manifests in the <code>\/etc\/kubernetes\/manifests<\/code> directory, restart the <code>kubelet<\/code> service and use <code>docker ps -a<\/code> and <code>docker logs<\/code> commands to ensure that the services have started properly.<\/p>\n<p>Once the new master is working, remove the failed master:<\/p>\n<pre>$ kubectl delete nodes kube-master-2\nnode \"kube-master-2\" deleted\n<\/pre>\n<p>Update your Kubernetes API load balancer by removing the IP Address of the failed master node and adding the IP Address of the new master node.<\/p>\n<p><strong>Non-HA Recovery Steps<\/strong><\/p>\n<p>If Kubernetes was not running in HA mode and the only Kubernetes master node has failed, the cluster will be down.<\/p>\n<p>If you still have access to the disk or a snapshot, attempt to recover the Kubernetes configuration directory containing the original Kubernetes master certificates. Often times this is the <code>\/etc\/kubernetes<\/code> directory.<\/p>\n<p>Assuming that ETCD is still intact, create a new Kubernetes master pointing to the existing ETCD cluster. Use the recovered certificates on the new master. Ensure that <code>kube-apiserver<\/code>, <code>kube-controller-manager<\/code>, and <code>kube-scheduler<\/code> are running on the new master.<\/p>\n<p>Login to each worker node and update the <code>kubelet<\/code> configuration to point to the new Kubernetes master. Often times this file is found at <code>\/etc\/kubernetes\/kubelet.conf<\/code>. Restart the <code>kubelet<\/code> service after making this change.<\/p>\n<h2>A Kubernetes Worker Node has Failed<\/h2>\n<p><strong>How to tell?<\/strong><\/p>\n<p>Just like detecting a Kubernetes master failure, the <code>kubectl get nodes<\/code> command will report worker nodes that are unreachable as <code>NotReady<\/code>:<\/p>\n<pre>$ kubectl get nodes\nNAME            STATUS     AGE       VERSION\nkube-master-1   Ready      21h       v1.7.2\nkube-master-2   Ready      20h       v1.7.2\nkube-master-3   Ready      20h       v1.7.2\nkube-worker-1   Ready      17h       v1.7.2\nkube-worker-2   NotReady   17h       v1.7.2\n<\/pre>\n<p><strong>Recovery Steps<\/strong><\/p>\n<p>Kubernetes will automatically reschedule failed pods onto other nodes in the cluster. Create a new worker to replace the failed node node and join it to the Kubernetes cluster. Once the new worker is working, remove the failed worker:<\/p>\n<pre>$ kubectl delete nodes kube-worker-2\nnode \"kube-worker-2\" deleted\n<\/pre>\n<h2>Wrapping Up: Deploying to Kuberentes<\/h2>\n<p>Fixing clusters is one issue, but how about actually getting your application deployed to Kubernetes? Codefresh makes it very easy to deploy applications to Kubernetes clusters. Codefresh supports any Kubernetes cluster, whether its on Google Container Engine, AWS, Azure, Rackspace, IBM Bluemix, or even your own datacenter.<\/p>\n<p><a href=\"https:\/\/codefresh.io\/kubernetes-deploy\">Try it out<\/a>.<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"6899\"\/>","protected":false},"excerpt":{"rendered":"<p>Kubernetes deployments have 3 distinct types of nodes: master nodes, ETCD nodes, and worker nodes. In high availability (HA) setups, all of these node types are replicated. Failures of individual nodes will not cause catastrophic consequences, but you need to get your cluster healthy as quickly as possible to prevent further failures. Recovering from events &hellip; <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/\">Read more<\/a><\/p>\n","protected":false},"author":125,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[1657],"tags":[44],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Kubernetes Disaster Recovery: How to Recover Broken Clusters<\/title>\n<meta name=\"description\" content=\"Kubernetes is the most popular container orchestration technology used today. What happens if it breaks? Learn how to recover your broken Kubernetes cluster\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Cluster @%#&#039;d - How to Recover a Broken Kubernetes Cluster\" \/>\n<meta property=\"og:description\" content=\"Kubernetes is the most popular container orchestration technology used today. What happens if it breaks? Learn how to recover your broken Kubernetes cluster\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2017-07-28T15:45:52+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-06T15:49:50+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Contributor\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#webpage\",\"url\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/\",\"name\":\"Kubernetes Disaster Recovery: How to Recover Broken Clusters\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"datePublished\":\"2017-07-28T15:45:52+00:00\",\"dateModified\":\"2022-01-06T15:49:50+00:00\",\"description\":\"Kubernetes is the most popular container orchestration technology used today. What happens if it breaks? Learn how to recover your broken Kubernetes cluster\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Cluster @%#&#8217;d &#8211; How to Recover a Broken Kubernetes Cluster\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\"},\"headline\":\"Cluster @%#&#8217;d &#8211; How to Recover a Broken Kubernetes Cluster\",\"datePublished\":\"2017-07-28T15:45:52+00:00\",\"dateModified\":\"2022-01-06T15:49:50+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#webpage\"},\"wordCount\":719,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"keywords\":[\"Kubernetes\"],\"articleSection\":[\"Kubernetes Tutorials\"],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75\",\"name\":\"Contributor\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g\",\"caption\":\"Contributor\"},\"url\":\"https:\/\/codefresh.io\/author\/contributor\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Kubernetes Disaster Recovery: How to Recover Broken Clusters","description":"Kubernetes is the most popular container orchestration technology used today. What happens if it breaks? Learn how to recover your broken Kubernetes cluster","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/","og_locale":"en_US","og_type":"article","og_title":"Cluster @%#'d - How to Recover a Broken Kubernetes Cluster","og_description":"Kubernetes is the most popular container orchestration technology used today. What happens if it breaks? Learn how to recover your broken Kubernetes cluster","og_url":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2017-07-28T15:45:52+00:00","article_modified_time":"2022-01-06T15:49:50+00:00","twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Contributor","Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#webpage","url":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/","name":"Kubernetes Disaster Recovery: How to Recover Broken Clusters","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"datePublished":"2017-07-28T15:45:52+00:00","dateModified":"2022-01-06T15:49:50+00:00","description":"Kubernetes is the most popular container orchestration technology used today. What happens if it breaks? Learn how to recover your broken Kubernetes cluster","breadcrumb":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Cluster @%#&#8217;d &#8211; How to Recover a Broken Kubernetes Cluster"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75"},"headline":"Cluster @%#&#8217;d &#8211; How to Recover a Broken Kubernetes Cluster","datePublished":"2017-07-28T15:45:52+00:00","dateModified":"2022-01-06T15:49:50+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/kubernetes-tutorial\/recover-broken-kubernetes-cluster\/#webpage"},"wordCount":719,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"keywords":["Kubernetes"],"articleSection":["Kubernetes Tutorials"],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/268e5c2e4740502fae6d803783a16c75","name":"Contributor","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/26bd6dd87bf70f0c1a44721c8b3abbbd?s=96&d=blank&r=g","caption":"Contributor"},"url":"https:\/\/codefresh.io\/author\/contributor\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6899"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/125"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=6899"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6899\/revisions"}],"predecessor-version":[{"id":20942,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/6899\/revisions\/20942"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=6899"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=6899"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=6899"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}