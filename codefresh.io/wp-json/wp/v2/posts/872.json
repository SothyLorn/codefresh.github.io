{"id":872,"date":"2016-09-27T16:22:22","date_gmt":"2016-09-27T16:22:22","guid":{"rendered":"https:\/\/codefresh.io\/?p=872"},"modified":"2022-03-01T16:51:25","modified_gmt":"2022-03-01T16:51:25","slug":"continuous-deployment-elastic-beanstalk-codefresh","status":"publish","type":"post","link":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/","title":{"rendered":"Continuous Deployment to Elastic Beanstalk with Codefresh"},"content":{"rendered":"<h2><b>Triggering Elastic Beanstalk Deployment Using Codefresh\u00a0<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">This post discusses\u00a0how to set up continuous deployment (CD) of a Dockerized Node.js application to Amazon Elastic Beanstalk, using a Codefresh YAML file.\u00a0<\/span><span style=\"font-weight: 400;\">As a developer, you want the process of moving your application to production to be as automated as possible. If you use a platform such as AWS Elastic Beanstalk to deploy your application, Codefresh can help you to completely automate the process of unit testing, building, and deployment.<\/span><\/p>\n<p><!--more--><\/p>\n<p><span style=\"font-weight: 400;\">By using Codefresh together with Elastic Beanstalk, you can set up this automated process with the following steps: <\/span><\/p>\n<ul>\n<li><strong>Configure Your Repository<\/strong><span style=\"font-weight: 400;\"><strong>:<\/strong> Fork the code to your repository, and set up a Codefresh service for it, so Codefresh will be notified whenever you commit your code. <\/span><\/li>\n<li><strong>Build and Test a Docker Image<\/strong><span style=\"font-weight: 400;\"><strong>:<\/strong> Create a YAML file to automatically unit test and build your image, and launch it in a Docker container. <\/span><\/li>\n<li><strong>Create an Environment in AWS<\/strong><span style=\"font-weight: 400;\"><strong>:<\/strong> Set up the AWS environment where you want to deploy the application, and create the descriptor file.<\/span><\/li>\n<li><strong>Perform a Manual Deployment<\/strong><span style=\"font-weight: 400;\"><strong>,<\/strong> to verify your AWS configuration is correct.<\/span><\/li>\n<li><strong>Configure the Environment Variables<\/strong><span style=\"font-weight: 400;\"><strong>,<\/strong> for the values needed as input parameters for the automatic deployment.<\/span><\/li>\n<li><strong>Add a Trigger to the YAML File<\/strong><span style=\"font-weight: 400;\"><strong>,<\/strong> which will automatically deploy the application to Elastic Beanstalk.<\/span><\/li>\n<li><strong>Commit Your Code<\/strong><span style=\"font-weight: 400;\"><strong>,<\/strong> and watch it run automatically.<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">These steps are described in detail below.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Once you have completed these steps, every time you commit your code, Codefresh will automatically unit test, build, and deploy your application to Elastic Beanstalk, without any manual intervention.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">We welcome your comments or questions\u00a0below<\/span><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><b>Definitions:<\/b><\/p>\n<div class=\"table-responsive\"><table>\n<tbody>\n<tr>\n<td><b>AWS<\/b><\/td>\n<td><span style=\"font-weight: 400;\">Amazon Web Services \u2013 A collection of cloud-based web services, including Elastic Beanstalk.<\/span><\/td>\n<\/tr>\n<tr>\n<td><b>CD<\/b><\/td>\n<td><span style=\"font-weight: 400;\">Continuous Deployment &#8211; An approach where software is deployed in short cycles, so the latest version is always available. \u00a0CD includes a process for building, testing, and deploying the software quickly and reliably, so it can be done whenever a change is made.<\/span><\/td>\n<\/tr>\n<tr>\n<td><b>CI<\/b><\/td>\n<td><span style=\"font-weight: 400;\">Continuous Integration &#8211; An approach where the code versions from all developers working on the software are merged several times a day.<\/span><\/td>\n<\/tr>\n<tr>\n<td><b>CLI <\/b><\/td>\n<td><span style=\"font-weight: 400;\">Command Line Interface<\/span><\/td>\n<\/tr>\n<tr>\n<td><b>Elastic Beanstalk<\/b><\/td>\n<td><span style=\"font-weight: 400;\">A platform provided by Amazon Web Services to quickly deploy and manage an application in the cloud, and automatically set up the infrastructure, including capacity provisioning, load balancing, scaling, and health monitoring. <\/span><br \/>\n<span style=\"font-weight: 400;\">Elastic Beanstalk currently supports Docker containers, in addition to other technologies.<\/span><\/td>\n<\/tr>\n<tr>\n<td><b>YAML<\/b><\/td>\n<td><span style=\"font-weight: 400;\">The language used for Codefresh files. The file extension is .yml or .yaml.<\/span><\/td>\n<\/tr>\n<\/tbody>\n<\/table><\/div>\n<h2><b>\f<\/b><b>Configure the Codefresh Service<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">This section describes how to use Codefresh to create the Docker image that you can deploy to Elastic Beanstalk. This includes configuring the repository for your code, and building the image. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">The examples in this article use a \u201cHello World\u201d application written in Express.js. To try it out, you can fork this sample code to your repository, or use your own code.\u00a0<\/span><span style=\"font-weight: 400;\">The sample code is located at <\/span><a href=\"https:\/\/github.com\/expressjs\/express\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">https:\/\/github.com\/expressjs\/express<\/span><\/a><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><b>Note:\u00a0<\/b><span style=\"font-weight: 400;\">It is assumed that you already have a Codefresh account, and have a basic familiarity with Codefresh. If you don&#8217;t have an account, you can get one free forever <a href=\"https:\/\/codefresh.io\/?utm_medium=post&amp;utm_campaign=ElasticBeanstalkblog&amp;utm_source=blog\">here<\/a>.<\/span><\/p>\n<h2><b>Configure Your Repository<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">You must set up a service in Codefresh for your repository. This enables Codefresh to receive a notification each time you commit, so it can begin the automated process.\u00a0<\/span><span style=\"font-weight: 400;\">For details about configuring a repository in Codefresh, see <\/span><span style=\"font-weight: 400;\"><a href=\"https:\/\/codefresh.io\/docs\/\" target=\"_blank\" rel=\"noopener\">https:\/\/codhttps:\/\/codefresh.io\/docs\/<\/a>.<\/span><\/p>\n<h2><b>Build a YAML file<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">To build and unit test your Docker image, in Codefresh, create a Codefresh YAML file called <\/span><span style=\"font-weight: 400;\">codefresh.yml<\/span><span style=\"font-weight: 400;\">, which contains the required directives.\u00a0<\/span><span style=\"font-weight: 400;\">For details about building an image in Codefresh, see <a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\" target=\"_blank\" rel=\"noopener\">https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/<\/a>.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Below is an example of a <\/span><span style=\"font-weight: 400;\">codefresh.yml<\/span><span style=\"font-weight: 400;\"> file. It includes the following steps:<\/span><\/p>\n<ul>\n<li><span style=\"font-weight: 400;\">Directs the build engine to execute unit tests on the code base.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Builds a Docker image named <\/span><span style=\"font-weight: 400;\">codefresh\/express<\/span><span style=\"font-weight: 400;\">.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Pushes the image to the Docker hub registry.<\/span><\/li>\n<\/ul>\n<p><b>Note:\u00a0<\/b><span style=\"font-weight: 400;\">If you are using your own code, use your service name instead of <\/span><span style=\"font-weight: 400;\">express<\/span><span style=\"font-weight: 400;\">.<\/span><\/p>\n<pre class=\"lang:default decode:true \">version:\r\n'1.0'\r\nsteps:\r\nunit-test-step:\r\n  image: node:latest\r\n  working-directory: ${{initial-clone}}\r\n  commands:\r\n      - npm install\r\n      - npm test\r\nbuild-step:\r\n  type: build\r\n  image-name: codefresh\/express\r\npush to registry:\r\n  type: push\r\n  candidate: ${{build-step}}\r\n  tag: latest<\/pre>\n<p>&nbsp;<\/p>\n<h2><b>Configure Amazon Web Services<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">This section describes how to configure an AWS environment that can be used for an automatic deployment. This includes creating the environment, setting up the deployment descriptor file, and performing a manual deployment, to verify the configuration is correct.<\/span><\/p>\n<p><b>Note:\u00a0<\/b><span style=\"font-weight: 400;\">It is assumed that you already have an AWS account and have some familiarity with AWS and Elastic Beanstalk.<\/span><\/p>\n<h2><b>Create an Environment in AWS<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">To deploy code to Elastic Beanstalk, you have to create the AWS environment where you want it to be deployed.<\/span><\/p>\n<p><b>Procedure<\/b><\/p>\n<p><span style=\"font-weight: 400;\">In AWS, create an environment and give it a name that makes sense for your project, for example, <\/span><span style=\"font-weight: 400;\">myApp-staging<\/span><span style=\"font-weight: 400;\">, <\/span><span style=\"font-weight: 400;\">myApp-production<\/span><span style=\"font-weight: 400;\">, <\/span><span style=\"font-weight: 400;\">myApp-QA<\/span><span style=\"font-weight: 400;\">, etc.<\/span><span style=\"font-weight: 400;\">For details about creating an AWS environment, see:\u00a0<\/span><a href=\"http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/GettingStarted.html\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/GettingStarted.html<\/span><\/a><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><img class=\"alignnone size-medium wp-image-873\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-2.48.49-PM-300x173.png\" alt=\"screen-shot-2016-09-12-at-2-48-49-pm\" width=\"300\" height=\"173\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-2.48.49-PM-300x173.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-2.48.49-PM.png 513w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/p>\n<p><b>Figure\u00a01<\/b> <b>AWS Environment<\/b><\/p>\n<p><span style=\"font-weight: 400;\">Configure a deployment descriptor file for this environment. This file is usually called <\/span><span style=\"font-weight: 400;\">Dockerfile.AWS.json.<\/span><span style=\"font-weight: 400;\"> It defines the deployment settings for your application. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">For our example, the descriptor file could be as follows:<\/span><\/p>\n<pre class=\"lang:default decode:true\">{\r\n \"AWSEBDockerrunVersion\": \"1\",\r\n \"Image\": {\r\n   \"Name\": \"codefresh\/express:latest\",\r\n   \"Update\": \"true\"\r\n },\r\n \"Ports\": [\r\n   {\r\n     \"ContainerPort\": \"8080\"\r\n   }\r\n ]\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<h2><b>Perform a Manual Deployment<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">To verify that all of the configuration settings in your descriptor file are correct, perform the first deployment manually, as follows:<\/span><\/p>\n<p><b>Procedure<\/b><\/p>\n<p><span style=\"font-weight: 400;\">In AWS, choose Elastic Beanstalk and click on your environment.<\/span><\/p>\n<ul>\n<li><span style=\"font-weight: 400;\">Click <\/span><b>Upload and Deploy<\/b><span style=\"font-weight: 400;\">.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Click in the <\/span><b>Upload application<\/b><span style=\"font-weight: 400;\"> field, and select your descriptor file.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Click <\/span><b>Deploy<\/b><span style=\"font-weight: 400;\">.<\/span><\/li>\n<\/ul>\n<p><img class=\"alignnone size-large wp-image-880\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.31.11-PM-1024x420.png\" alt=\"screen-shot-2016-09-12-at-3-31-11-pm\" width=\"1024\" height=\"420\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.31.11-PM-1024x420.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.31.11-PM-300x123.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.31.11-PM-768x315.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.31.11-PM-628x258.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.31.11-PM.png 1292w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><b>Figure\u00a02<\/b> <b>Upload and Deploy Window<\/b><\/p>\n<p><span style=\"font-weight: 400;\">If the file is configured correctly, the deployment will produce results similar to those displayed below. <\/span><\/p>\n<p><img class=\"alignnone size-large wp-image-881\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.58.41-PM-1024x399.png\" alt=\"screen-shot-2016-09-06-at-12-58-41-pm\" width=\"1024\" height=\"399\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.58.41-PM-1024x399.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.58.41-PM-300x117.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.58.41-PM-768x299.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.58.41-PM-628x245.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.58.41-PM.png 1782w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><b>Figure\u00a03<\/b> <b>Deployment Results<\/b><\/p>\n<p>&nbsp;<\/p>\n<h2><b>\f<\/b><b>Set Up the Automatic Deployment<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Using AWS CLI, you can trigger a deployment to Elastic Beanstalk by using the AWS Update Environment command. Thus, in Codefresh, you can add a step containing this command to your <\/span><span style=\"font-weight: 400;\">codefresh.yml<\/span><span style=\"font-weight: 400;\"> file. If you have configured Codefresh to rebuild your image every time you commit your code, this command will also be executed. Your code will then be automatically deployed to Elastic Beanstalk each time you commit.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">To set up this trigger, you must configure environment variables in Codefresh for the input parameters required by the Update Environment command, and enter the command, including its parameters, into the YAML file. You can then commit your code, and watch it run.<\/span><\/p>\n<h2><b>Configure the Environment Variables<\/b><\/h2>\n<ul>\n<li><span style=\"font-weight: 400;\">The AWS Update Environment command requires the following input parameters:<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Your AWS credentials, which include Access Key ID, Secret Access Key, and Region.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">The AWS environment where you want to deploy the application.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Version information for the application.<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">The AWS credentials are sensitive data which should not be hard-coded into a descriptor file, because it could be a security risk. Therefore, you should configure Codefresh environment variables for these values, and encrypt them, as explained below. You can also set up variables for other command parameters, although there is no need to encrypt them.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The variable names are then used as the input parameters for the command in the YAML file, instead of the actual values. Codefresh will insert the correct values into the command line at run-time.<\/span><\/p>\n<p><b>Procedure<\/b><\/p>\n<p><span style=\"font-weight: 400;\">Set up your Access Key ID and Secret Access Key as described in <\/span><span style=\"font-weight: 400;\"><a href=\"http:\/\/docs.aws.amazon.com\/AWSSimpleQueueService\/latest\/SQSGettingStartedGuide\/AWSCredentials.html\" target=\"_blank\" rel=\"noopener\">http:\/\/docs.aws.amazon.com\/AWSSimpleQueueService\/latest\/SQSGettingStartedGuide\/AWSCredentials.html<\/a>.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In AWS, click on the Region tab in the upper right corner to determine your Region. In the figure below, the region is <\/span><b>us-west-2<\/b><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><img class=\"alignnone wp-image-879\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.52.59-PM-583x1024.png\" alt=\"screen-shot-2016-09-18-at-2-52-59-pm\" width=\"222\" height=\"390\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.52.59-PM-583x1024.png 583w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.52.59-PM-171x300.png 171w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.52.59-PM-187x328.png 187w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.52.59-PM.png 634w\" sizes=\"(max-width: 222px) 100vw, 222px\" \/><\/p>\n<p><b>Figure\u00a04<\/b> <b>Region Tab<\/b><\/p>\n<p><span style=\"font-weight: 400;\">In AWS, click on the application version tab to determine the version label of the application you want to deploy. This tab lists all the versions that can be deployed, as shown.<\/span><\/p>\n<p><img class=\"alignnone size-large wp-image-882\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.26.05-PM-1024x215.png\" alt=\"screen-shot-2016-09-06-at-12-26-05-pm\" width=\"1024\" height=\"215\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.26.05-PM-1024x215.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.26.05-PM-300x63.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.26.05-PM-768x161.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.26.05-PM-628x132.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-06-at-12.26.05-PM.png 1690w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><b>Figure\u00a05<\/b> <b>Application Versions<\/b><\/p>\n<p><span style=\"font-weight: 400;\">In Codefresh, \u00a0<\/span><span style=\"font-weight: 400;\">choose your service and pipeline and C<\/span><span style=\"font-weight: 400;\">lick on the \u201cEnvironment Variables\u201d tab to configure environment variables, as shown.<\/span><\/p>\n<p><img class=\"alignnone size-full wp-image-878\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-2.59.28-PM.png\" alt=\"screen-shot-2016-09-12-at-2-59-28-pm\" width=\"503\" height=\"48\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-2.59.28-PM.png 503w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-2.59.28-PM-300x29.png 300w\" sizes=\"(max-width: 503px) 100vw, 503px\" \/><\/p>\n<p><b>Figure\u00a06<\/b> <b>Encrypting Variables<\/b><\/p>\n<p><span style=\"font-weight: 400;\">The variables you need to configure are listed in Table\u00a01 below. Configure each of the variables as follows:<\/span><\/p>\n<ul>\n<li><span style=\"font-weight: 400;\">In the <\/span><b>KEY<\/b><span style=\"font-weight: 400;\"> field, enter the variable name exactly as shown below.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">In the <\/span><b>VALUE<\/b><span style=\"font-weight: 400;\"> field, enter the information described below.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">If indicated, select the <\/span><b>Encrypt <\/b><span style=\"font-weight: 400;\">checkbox.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Click <\/span><b>Add<\/b><span style=\"font-weight: 400;\">.<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">The required variables are:<\/span><\/p>\n<p>&nbsp;<\/p>\n<div class=\"table-responsive\"><table>\n<tbody>\n<tr>\n<td><b>Key (Name)<\/b><\/td>\n<td><b>Value<\/b><\/td>\n<td><b>Encrypt?<\/b><\/td>\n<\/tr>\n<tr>\n<td><span style=\"font-weight: 400;\">ACCESS_KEY_ID<\/span><\/td>\n<td><span style=\"font-weight: 400;\">Access Key ID from step 1<\/span><\/td>\n<td><span style=\"font-weight: 400;\">Yes<\/span><\/td>\n<\/tr>\n<tr>\n<td><span style=\"font-weight: 400;\">SECRET_ACCESS_KEY_ID<\/span><\/td>\n<td><span style=\"font-weight: 400;\">Secret Access Key from step 1<\/span><\/td>\n<td><span style=\"font-weight: 400;\">Yes<\/span><\/td>\n<\/tr>\n<tr>\n<td><span style=\"font-weight: 400;\">REGION<\/span><\/td>\n<td><span style=\"font-weight: 400;\">Region from Region tab in step 2<\/span><\/td>\n<td><span style=\"font-weight: 400;\">No<\/span><\/td>\n<\/tr>\n<tr>\n<td><span style=\"font-weight: 400;\">ENV_NAME<\/span><\/td>\n<td><span style=\"font-weight: 400;\">The name you assigned the environment you created in Section \u200e3.1<\/span><\/td>\n<td><span style=\"font-weight: 400;\">No<\/span><\/td>\n<\/tr>\n<tr>\n<td><span style=\"font-weight: 400;\">VERSION<\/span><\/td>\n<td><span style=\"font-weight: 400;\">Version label from Application Version tab in step 3<\/span><\/td>\n<td><span style=\"font-weight: 400;\">No<\/span><\/td>\n<\/tr>\n<\/tbody>\n<\/table><\/div>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">In Codefresh choose your service and C<\/span><span style=\"font-weight: 400;\">lick on the \u201cEnvironment Variables\u201d tab to view the list of environment variables, as shown. Note that the encrypted variables are displayed as <\/span><b>*****<\/b><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><img class=\"alignnone wp-image-877\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.50.07-PM-1024x628.png\" alt=\"screen-shot-2016-09-18-at-2-50-07-pm\" width=\"588\" height=\"361\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.50.07-PM-1024x628.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.50.07-PM-300x184.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.50.07-PM-768x471.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.50.07-PM-535x328.png 535w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-18-at-2.50.07-PM.png 1118w\" sizes=\"(max-width: 588px) 100vw, 588px\" \/><\/p>\n<p><b>Figure\u00a07<\/b> <b>Environment Variables<\/b><\/p>\n<h2><b>Add a Trigger to the YAML File<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">When you have set up your environment variables, you can add the AWS Update Environment command to your <\/span><span style=\"font-weight: 400;\">codefresh.yml<\/span><span style=\"font-weight: 400;\"> file, to trigger the automatic deployment to Elastic Beanstalk.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The Update Environment command must be run through an image that contains the AWS CLI. In this example, we use the image <\/span><span style=\"font-weight: 400;\">garland\/aws-cli-docker\/latest<\/span><span style=\"font-weight: 400;\"> (located at <\/span><a href=\"https:\/\/hub.docker.com\/r\/garland\/aws-cli-docker\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">https:\/\/hub.docker.com\/r\/garland\/aws-cli-docker\/<\/span><\/a><span style=\"font-weight: 400;\">). Therefore, this image must be included in the YAML file. <\/span><\/p>\n<p><span style=\"font-weight: 400;\">Add the following code to your <\/span><span style=\"font-weight: 400;\">codefresh.yml<\/span><span style=\"font-weight: 400;\"> file:<\/span><\/p>\n<pre class=\"lang:default decode:true\">elastic-beanstalk:\r\nimage: garland\/aws-cli-docker:latest\r\ncommands:\r\n  - aws configure set aws_access_key_id ${{ACCESS_KEY_ID}}\r\n  - aws configure set aws_secret_access_key ${{SECRET_ACCESS_KEY_ID}}\r\n  - aws configure set region ${{REGION}}\r\n  - aws elasticbeanstalk update-environment --environment-name ${{ENV_NAME}} --version-label ${{VERSION}}<\/pre>\n<p><span style=\"font-weight: 400;\">For more information about configuring credentials, see the following links:<\/span><\/p>\n<ul>\n<li><a href=\"http:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/cli-chap-getting-started.html\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">http:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/cli-chap-getting-started.html<\/span><\/a><\/li>\n<li><a href=\"http:\/\/docs.aws.amazon.com\/cli\/latest\/topic\/config-vars.html\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">http:\/\/docs.aws.amazon.com\/cli\/latest\/topic\/config-vars.html<\/span><\/a><\/li>\n<\/ul>\n<h3><b>Deploy on a Specific Branch<\/b><\/h3>\n<p><span style=\"font-weight: 400;\">If you want to run the deployment only on a specific branch of your image, modify the code so it appears as shown:<\/span><\/p>\n<pre class=\"lang:default decode:true\">elastic-beanstalk:\r\n  image: garland\/aws-cli-docker:latest\r\n  commands:&gt;-\r\n    sh -c  \"[ ${{CF_BRANCH}} == master ] &amp;&amp;\r\n    aws configure set aws_access_key_id ${{ACCESS_KEY_ID}} &amp;&amp;\r\n    aws configure set aws_secret_access_key ${{SECRET_ACCESS_KEY_ID}} &amp;&amp;\r\n    aws configure set region ${{REGION}} &amp;&amp;\r\n    aws elasticbeanstalk update-environment --environment-name ${{ENV_NAME}} --version-label ${{VERSION}} \"<\/pre>\n<p><b>Notes:<\/b><\/p>\n<ul>\n<li><span style=\"font-weight: 400;\">The addition of <\/span><span style=\"font-weight: 400;\">&gt;-<\/span><span style=\"font-weight: 400;\"> in the line beginning with <\/span><span style=\"font-weight: 400;\">commands:<\/span><span style=\"font-weight: 400;\"> enables running multiple commands.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">To deploy a different branch of the code, in the line beginning with <\/span><span style=\"font-weight: 400;\">sh<\/span><span style=\"font-weight: 400;\">, replace <\/span><span style=\"font-weight: 400;\">master<\/span><span style=\"font-weight: 400;\"> with the branch you want to deploy.<\/span><\/li>\n<\/ul>\n<h2><b>Commit Your Code<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Your automated deployment method is now set up. To trigger a deployment to Elastic Beanstalk, all you need to do is commit your code. Each time you commit, if the build is successful, Codefresh will automatically push the code to the AWS Elastic Beanstalk environment.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In Codefresh, you can watch the build logs and under deployment step view the details of the deployment to Elastic Beanstalk.<\/span><\/p>\n<p><img class=\"alignnone wp-image-876 size-large\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-4.07.32-PM-e1474199322156-1024x476.png\" alt=\"screen-shot-2016-09-12-at-4-07-32-pm\" width=\"1024\" height=\"476\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-4.07.32-PM-e1474199322156-1024x476.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-4.07.32-PM-e1474199322156-300x139.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-4.07.32-PM-e1474199322156-768x357.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-4.07.32-PM-e1474199322156-628x292.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-4.07.32-PM-e1474199322156.png 1909w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><b>Figure\u00a08<\/b> <b>Codefresh Console &#8211; Deploying to Elastic Beanstalk<\/b><\/p>\n<p><span style=\"font-weight: 400;\">In AWS Elastic Beanstalk, you can also click on your environment to view the details of the deployment. <\/span><\/p>\n<p>&nbsp;<\/p>\n<p><img class=\"alignnone wp-image-875\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.27.28-PM-1.png\" alt=\"screen-shot-2016-09-12-at-3-27-28-pm\" width=\"1006\" height=\"423\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.27.28-PM-1.png 1441w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.27.28-PM-1-300x126.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.27.28-PM-1-768x323.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.27.28-PM-1-1024x431.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Screen-Shot-2016-09-12-at-3.27.28-PM-1-628x264.png 628w\" sizes=\"(max-width: 1006px) 100vw, 1006px\" \/><\/p>\n<p><b>Figure\u00a09<\/b> <b>Elastic Beanstalk \u2013 Automatic Deployment<\/b><\/p>\n<p><b>Success!<\/b><\/p>\n<p><span style=\"font-weight: 400;\">You have completed setting up a full, Dockerized CI\/CD process using Codefresh together with AWS Elastic Beanstalk. This process can easily be set up for all your applications, to run every time you commit, on every branch.<\/span><\/p>\n<h2><b>\f<\/b><b>References<\/b><\/h2>\n<p><b>Github Repository: <\/b><\/p>\n<p><a href=\"https:\/\/github.com\/shay-codefresh\/express\/blob\/elasticbeanstalk\/codefresh.yml\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">https:\/\/github.com\/shay-codefresh\/express\/blob\/elasticbeanstalk\/codefresh.yml<\/span><\/a><\/p>\n<p><b>Github express Repository: <\/b><\/p>\n<p><a href=\"https:\/\/github.com\/expressjs\/express\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">https:\/\/github.com\/expressjs\/express<\/span><\/a><\/p>\n<p><b>garland\/aws-cli-docker:latest <\/b><\/p>\n<p><a href=\"https:\/\/hub.docker.com\/r\/garland\/aws-cli-docker\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">https:\/\/hub.docker.com\/r\/garland\/aws-cli-docker\/<\/span><\/a><\/p>\n<p><b>Codefresh YAML Files<\/b><\/p>\n<p><a href=\"https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/\" target=\"_blank\" rel=\"noopener\">https:\/\/codefresh.io\/docs\/docs\/codefresh-yaml\/what-is-the-codefresh-yaml\/<\/a><\/p>\n<p><b>Amazon Web Services Setup<\/b><\/p>\n<p><a href=\"http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/GettingStarted.html\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">http:\/\/docs.aws.amazon.com\/elasticbeanstalk\/latest\/dg\/GettingStarted.html<\/span><\/a><\/p>\n<p><b>Amazon Web Services Credentials:<\/b><\/p>\n<p><a href=\"http:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/cli-chap-getting-started.html\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">http:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/cli-chap-getting-started.html<\/span><\/a><\/p>\n<p><a href=\"http:\/\/docs.aws.amazon.com\/cli\/latest\/topic\/config-vars.html\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">http:\/\/docs.aws.amazon.com\/cli\/latest\/topic\/config-vars.html<\/span><\/a><\/p>\n<p><b>Forked express Repository with YAML file example: <\/b><\/p>\n<p><a href=\"https:\/\/github.com\/shay-codefresh\/express\/tree\/elasticbeanstalk\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">https:\/\/github.com\/shay-codefresh\/express\/tree\/elasticbeanstalk<\/span><\/a><\/p>\n<p>&nbsp;<\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"872\"\/>","protected":false},"excerpt":{"rendered":"<p>Triggering Elastic Beanstalk Deployment Using Codefresh\u00a0 This post discusses\u00a0how to set up continuous deployment (CD) of a Dockerized Node.js application to Amazon Elastic Beanstalk, using a Codefresh YAML file.\u00a0As a developer, you want the process of moving your application to production to be as automated as possible. If you use a platform such as AWS &hellip; <a href=\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/\">Read more<\/a><\/p>\n","protected":false},"author":15,"featured_media":1037,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1505],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Continuous Deployment to Elastic Beanstalk with Codefresh | Codefresh<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Continuous Deployment to Elastic Beanstalk with Codefresh\" \/>\n<meta property=\"og:description\" content=\"Triggering Elastic Beanstalk Deployment Using Codefresh\u00a0 This post discusses\u00a0how to set up continuous deployment (CD) of a Dockerized Node.js application to Amazon Elastic Beanstalk, using a Codefresh YAML file.\u00a0As a developer, you want the process of moving your application to production to be as automated as possible. If you use a platform such as AWS &hellip; Read more\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2016-09-27T16:22:22+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-01T16:51:25+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1534\" \/>\n\t<meta property=\"og:image:height\" content=\"401\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Shay Klapper\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"10 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg\",\"width\":1534,\"height\":401},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#webpage\",\"url\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/\",\"name\":\"Continuous Deployment to Elastic Beanstalk with Codefresh | Codefresh\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#primaryimage\"},\"datePublished\":\"2016-09-27T16:22:22+00:00\",\"dateModified\":\"2022-03-01T16:51:25+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Continuous Deployment to Elastic Beanstalk with Codefresh\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/5251b5dd795f9119527570786e452dc8\"},\"headline\":\"Continuous Deployment to Elastic Beanstalk with Codefresh\",\"datePublished\":\"2016-09-27T16:22:22+00:00\",\"dateModified\":\"2022-03-01T16:51:25+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#webpage\"},\"wordCount\":1831,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg\",\"articleSection\":[\"Containers\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/5251b5dd795f9119527570786e452dc8\",\"name\":\"Shay Klapper\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/0ac1a6e31d35c3b57d8e9997092ab7f6?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/0ac1a6e31d35c3b57d8e9997092ab7f6?s=96&d=blank&r=g\",\"caption\":\"Shay Klapper\"},\"sameAs\":[\"https:\/\/codefresh.io\"],\"url\":\"https:\/\/codefresh.io\/author\/shay\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Continuous Deployment to Elastic Beanstalk with Codefresh | Codefresh","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/","og_locale":"en_US","og_type":"article","og_title":"Continuous Deployment to Elastic Beanstalk with Codefresh","og_description":"Triggering Elastic Beanstalk Deployment Using Codefresh\u00a0 This post discusses\u00a0how to set up continuous deployment (CD) of a Dockerized Node.js application to Amazon Elastic Beanstalk, using a Codefresh YAML file.\u00a0As a developer, you want the process of moving your application to production to be as automated as possible. If you use a platform such as AWS &hellip; Read more","og_url":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2016-09-27T16:22:22+00:00","article_modified_time":"2022-03-01T16:51:25+00:00","og_image":[{"width":1534,"height":401,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Shay Klapper","Est. reading time":"10 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg","width":1534,"height":401},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#webpage","url":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/","name":"Continuous Deployment to Elastic Beanstalk with Codefresh | Codefresh","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#primaryimage"},"datePublished":"2016-09-27T16:22:22+00:00","dateModified":"2022-03-01T16:51:25+00:00","breadcrumb":{"@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Continuous Deployment to Elastic Beanstalk with Codefresh"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/5251b5dd795f9119527570786e452dc8"},"headline":"Continuous Deployment to Elastic Beanstalk with Codefresh","datePublished":"2016-09-27T16:22:22+00:00","dateModified":"2022-03-01T16:51:25+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#webpage"},"wordCount":1831,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2016\/09\/Triggering-Elastic-Beanstalk-deployment-Using-Codefresh.jpg","articleSection":["Containers"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/containers\/continuous-deployment-elastic-beanstalk-codefresh\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/5251b5dd795f9119527570786e452dc8","name":"Shay Klapper","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/0ac1a6e31d35c3b57d8e9997092ab7f6?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/0ac1a6e31d35c3b57d8e9997092ab7f6?s=96&d=blank&r=g","caption":"Shay Klapper"},"sameAs":["https:\/\/codefresh.io"],"url":"https:\/\/codefresh.io\/author\/shay\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/872"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/15"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=872"}],"version-history":[{"count":4,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/872\/revisions"}],"predecessor-version":[{"id":21722,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/872\/revisions\/21722"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/1037"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=872"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=872"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=872"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}