{"id":8907,"date":"2021-01-10T10:23:34","date_gmt":"2021-01-10T18:23:34","guid":{"rendered":"http:\/\/codefresh.io\/?p=8907"},"modified":"2022-02-09T14:43:47","modified_gmt":"2022-02-09T14:43:47","slug":"spinnaker-versus-codefresh","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/","title":{"rendered":"Codefresh vs Spinnaker"},"content":{"rendered":"<p>The appearance of containers and their performance benefits compared to the existing paradigm of virtual machines has forced several companies to rethink their software lifecycle, especially the delivery part. Continuous integration and deployment tools (CI\/CD) are passing through a second renaissance phase which is characterized by new approaches centered around short-lived environments that are launched and destroyed in a much more dynamic way.<\/p>\n<p>In this blog post, we will examine the capabilities of <a href=\"https:\/\/www.spinnaker.io\/\">Spinnaker <\/a>and contrast it with Codefresh, the continuous delivery platform for Kubernetes.<\/p>\n<p>Spinnaker is a multi-cloud deployment solution, originally created by Netflix and then open-sourced in 2015. Today it is actively developed by contributors from other companies such as Google and Target and in 2017 <a href=\"https:\/\/cloudplatform.googleblog.com\/2017\/06\/spinnaker-10-continuous-delivery.html\">it reached version 1.0<\/a>.<\/p>\n<h2>Codefresh has full CI support, Spinnaker needs Jenkins for CI<\/h2>\n<p>This is probably the most important point to understand when you evaluate Spinnaker. Spinnaker handles <strong>only <\/strong>the cloud deployment part of the continuous delivery process. Spinnaker does not compile code, does not run any tests and in general is not a generic task runner. To accomplish these tasks it calls Jenkins behind the scenes using the official Jenkins API. Therefore a solution based on Spinnaker essentially <strong>requires <\/strong>a Jenkins installation as well.<\/p>\n<p>Codefresh on the other hand is a complete CI\/CD solution handling all aspects of the software lifecycle from the moment a commit is created until it is deployed to production. Codefresh has all the capabilities that you would expect from a CI platform such as<\/p>\n<ul>\n<li>code compilation<\/li>\n<li>artifact packaging<\/li>\n<li>testing (unit, integration, acceptance etc.)<\/li>\n<li>branch management<\/li>\n<li>pull request handling<\/li>\n<\/ul>\n<p>All these features are natively supported in Codefresh, while Spinnaker offers no support for them. Essentially Spinnaker is centered around the CD part of a pipeline, while Codefresh takes care of both CI and CD. This can be better visualized with the typical pipeline steps below:<\/p>\n<p><img class=\"alignnone size-full wp-image-8988\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/lifecycle.png\" alt=\"\" width=\"670\" height=\"410\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/lifecycle.png 670w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/lifecycle-300x184.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/lifecycle-536x328.png 536w\" sizes=\"(max-width: 670px) 100vw, 670px\" \/><\/p>\n<p>The image shows the typical project pipeline where a code commit creates a Docker image, that then passes unit tests and is deployed to a staging environment. Integration\/acceptance tests are then executed and if everything is ok the code change is sent to production.<\/p>\n<p>Codefresh is a single solution that implements the whole pipeline from start to finish. Spinnaker handles only the deployment parts while the actual code compilation and testing is delegated to Jenkins tasks.<\/p>\n<p>You should now see why Spinnaker and Codefresh cannot be directly compared. Codefresh offers a superset of what Spinnaker is offering as far as CI capabilities are concerned. The comparison is really between Spinnaker plus Jenkins, versus Codefresh.<\/p>\n<p>In summary, Codefresh is a complete CI\/CD solution, while Spinnaker is a CD solution tool delegating CI to Jenkins.<\/p>\n<h2>Spinnaker and Codefresh installation options<\/h2>\n<p>Codefresh offers 3 installation choices<\/p>\n<ul>\n<li>Hosted version<\/li>\n<li>Hybrid version<\/li>\n<li>On-premises version<\/li>\n<\/ul>\n<p>The hosted version is fully managed (SAAS) and is the easiest way to start using Codefresh, as your company does not need to maintain and upgrade Codefresh. This is also the perfect choice if you are a startup and want to start using CI\/CD as fast as possible.<\/p>\n<p>Codefresh also offers <a href=\"https:\/\/codefresh.io\/docs\/docs\/administration\/behind-the-firewall\/\">a hybrid solution<\/a> where the management UI is in the cloud, but the work machines that compile, build and deploy code exist within the company premises. This is a very powerful option as it allows somebody to completely customize the build machines but keep the User Interface on the cloud version.<\/p>\n<p>It is the ideal installation for companies that have to follow specific regulations (e.g. healthcare and financial institutions) but don\u2019t want to be burdened with the management of a full installation of the platform. This has been proven one of the most popular installation options as it effectively helps companies with secure software delivery and minimal maintenance.<\/p>\n<p>For companies that wish to have full control over everything, Codefresh also offers an on-premises version. This can be installed in your company datacenter or private cloud and is fully managed by the customer.<\/p>\n<p>The important thing regarding <a href=\"https:\/\/codefresh.io\/docs\/docs\/administration\/installation-security\/\">these installation options<\/a> is the amount of flexibility when it comes to Codefresh usage. You can start with the SAAS version and move to the hybrid one with minimal migration. Codefresh can be easily used by a single consultant or a Fortune 500 company or anything in between.<\/p>\n<p>Spinnaker is only offered in a self-hosted manner. There is no SAAS version of Spinnaker that has reached general availability at the time of writing . This means that any organization that wishes to use Spinnaker must invest in manpower responsible for the daily needs and maintenance of the Spinnaker installation itself. This requires an upfront investment from Spinnaker users that may not be always possible or desirable.<\/p>\n<p>Spinnaker itself is composed of multiple micro-services that can be upgraded individually. Installing Spinnaker is a non-trivial process given the fact that a separate application (called <a href=\"https:\/\/spinnaker.io\/setup\/install\/halyard\/\">Halyard<\/a>) was also introduced to serve as the Spinnaker installer.<\/p>\n<p>In summary, Spinnaker requires in-house expertise to install and maintain right from the beginning. Codefresh offers a more gradual (and flexible approach) that doesn\u2019t require an upfront investment. The hybrid installation of Codefresh is particularly powerful as it embodies the perfect combination of security and flexibility.<\/p>\n<h2>Docker support in Codefresh and Spinnaker<\/h2>\n<p>Codefresh has embraced Docker support right from its inception. All Codefresh capabilities revolve around Docker images. Codefresh is especially powerful when it comes to creating Docker images (Docker as a service), annotating them and storing them for later usage.<\/p>\n<p>Spinnaker was created with the old philosophy of creating complete VM images instead of lightweight Docker containers. The basic paradigm of creating a release in Spinnaker is merging a complete VM (e.g. an <a href=\"https:\/\/en.wikipedia.org\/wiki\/Amazon_Machine_Image\">AMI<\/a>) with an application in rpm or deb format (a process called \u201cbaking\u201d in Spinnaker parlance).<\/p>\n<p>That being said, Spinnaker can work with Docker images as well. This functionality was later retrofitted into Spinnaker and it is not as flexible as what Codefresh offers.<\/p>\n<p>As a starting step, Codefresh offers a built-in Docker dashboard in the basic service. This Docker dashboard allows you to see all container images (from all connected registries) produced by Docker builds. You can then use this dashboard to promote images to any other registry if you desire.<\/p>\n<p><img class=\"alignnone size-full wp-image-8910\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/registry.png\" alt=\"\" width=\"927\" height=\"393\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/registry.png 927w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/registry-300x127.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/registry-768x326.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/registry-628x266.png 628w\" sizes=\"(max-width: 927px) 100vw, 927px\" \/><\/p>\n<p>The dashboard comes with various filtering and searching options:<\/p>\n<p><img class=\"alignnone size-full wp-image-8911\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image-search.png\" alt=\"\" width=\"507\" height=\"517\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image-search.png 507w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image-search-294x300.png 294w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image-search-322x328.png 322w\" sizes=\"(max-width: 507px) 100vw, 507px\" \/><\/p>\n<p>This means that Codefresh offers full traceability as you look at your Kubernetes\/Helm dashboards (explained in the next section), see what container images are deployed, click on a container image, see its details, metadata and which pipeline created it.<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/trace.png\"><img class=\"alignnone size-medium wp-image-18542\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/trace-223x300.png\" alt=\"\" width=\"223\" height=\"300\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/trace-223x300.png 223w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/trace-15x20.png 15w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/trace.png 446w\" sizes=\"(max-width: 223px) 100vw, 223px\" \/><\/a><\/p>\n<p>With Codefresh you can follow a single release from Git commit to Kubernetes deployment from a single application.<\/p>\n<p>Spinnaker has no special support for viewing and auditing docker images, so a Spinnaker solution would need an external container registry dashboard in order to fully function (we have already seen that Spinnaker requires Jenkins, so you might start seeing a pattern here on what Codefresh offers in a single service).<\/p>\n<p>This means that if you want to follow the journey of a single release with Spinnaker you need to visit at least 3 applications (Jenkins, external Docker registry UI, Spinnaker UI). It is up to you to correlate manually all information between the 3 applications and track the deployment process.<\/p>\n<p>Also, the fact that Codefresh has dedicated Docker support right from the beginning is evident from all the tools that it offers. Here are some examples.<\/p>\n<p><img class=\"alignnone size-large wp-image-8912\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/docker-layers-1024x593.png\" alt=\"\" width=\"1024\" height=\"593\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/docker-layers-1024x593.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/docker-layers-300x174.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/docker-layers-768x445.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/docker-layers-566x328.png 566w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/docker-layers.png 1082w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>The picture above shows the analysis of Docker layers for a container that Codefresh offers. This allows you to inspect the sizes of Docker images and fine-tune the order of the steps found in a Dockerfile.<\/p>\n<p><img class=\"alignnone size-large wp-image-8914\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/annotations-1024x637.png\" alt=\"\" width=\"1024\" height=\"637\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/annotations-1024x637.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/annotations-300x187.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/annotations-768x477.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/annotations-528x328.png 528w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/annotations.png 1200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>The picture above shows the <a href=\"https:\/\/codefresh.io\/docs\/docs\/docker-registries\/metadata-annotations\/\">annotation support<\/a> of Codefresh. You can assign custom tags to Docker images in a manual or automatic way. For example, you could mark docker images that have passed integration tests or are compliant with security scanning tools.<\/p>\n<p>In summary, Codefresh has superior and explicit support for Docker images. Spinnaker has only basic Docker support in the form of deploying Docker images but offers nothing additional for managing them.<\/p>\n<h2>Kubernetes support<\/h2>\n<p>In a similar manner to Docker, Codefresh comes with dedicated support for Kubernetes deployments. Codefresh offers an explicit Kubernetes deployment step that can be used in a pipeline to deploy a docker image to any Kubernetes cluster regardless of its underlying implementation (Google, Azure etc).<\/p>\n<p>Codefresh also offers a graphical way to manage a Kubernetes cluster with everything that you would expect, such as support for namespaces.<\/p>\n<p><img class=\"alignnone size-full wp-image-8913\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/k8s.png\" alt=\"\" width=\"979\" height=\"714\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/k8s.png 979w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/k8s-300x219.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/k8s-768x560.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/k8s-450x328.png 450w\" sizes=\"(max-width: 979px) 100vw, 979px\" \/><\/p>\n<p>With Spinnaker, things are not so straight-forward. First of all, getting \u201cKubernetes support\u201d in Spinnaker was not a straightforward process . There are actually two implementations.<\/p>\n<ul>\n<li>Spinnaker K8s provider version 1 (the old way &#8211; now legacy)<\/li>\n<li>Spinnaker K8s provider version 2 (the new way)<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.spinnaker.io\/setup\/install\/providers\/kubernetes\/\">Version 1 of the Spinnaker provider<\/a> was treating a Kubernetes cluster as another \u201ccloud\u201d. This resulted in a consistent experience for teams that were deploying both VMs and Docker containers via Spinnaker, but on the other hand, could not support the special characteristics that K8s clusters have. This Spinnaker provider is now marked as \u201cLegacy\u201d.<\/p>\n<p><a href=\"https:\/\/www.spinnaker.io\/setup\/install\/providers\/kubernetes-v2\/\">Version 2 of the Spinnaker provider<\/a> is now the preferred way. This provider treats Kubernetes manifests as artifacts and deploys them on a K8s cluster as any other artifact.<\/p>\n<p>In the end, however, both providers are limited by the fact that Spinnaker is a generic multi-cloud deployment tool and Kubernetes support was \u201cshoehorned\u201d in as Kubernetes is quickly becoming the de-facto clustering solution.<\/p>\n<p>The Spinnaker model is very rigid and the provider does its best to combine Kubernetes concepts to Spinnaker concepts:<\/p>\n<ul>\n<li>Server Groups \u2248 Workloads<\/li>\n<li>Load Balancers \u2248 Services, Ingresses<\/li>\n<li>Firewalls \u2248 NetworkPolicies<\/li>\n<\/ul>\n<p>The end result is a very complex and obscure configuration. You need to learn how Spinnaker treats configmaps, container image changes, annotation labels and so on before you can understand what exactly happens during a deployment.<\/p>\n<p>Codefresh, on the other hand, was designed with explicit Kubernetes support, free from the old way of deploying VMs, so it is easier to exploit specific Kubernetes features both during build time and during runtime.<\/p>\n<p>Codefresh supports multiple ways of Kubernetes deployment from the built-in deploy step, to custom kubectl commands and even GitOps deployments. There is no \u201cCodefresh specific\u201d knowledge that you must understand before deploying to Kubernetes.<\/p>\n<h2>Helm support<\/h2>\n<p>Helm is a package manager for Kubernetes and is quickly becoming the preferred way to deploy K8s applications. It can group associated application services in packages (called Charts) and can also version <strong>and <\/strong>rollback application deployments, making releases much less painful.<\/p>\n<p>Helm is another area where Codefresh support really shines. Like Kubernetes and Docker, Codefresh has explicit support for Helm repos and deployments. You can see the Helm releases from within the Codefresh UI as well as browse the available Helm Charts.<\/p>\n<p><img class=\"alignnone size-large wp-image-8927\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-1024x619.png\" alt=\"\" width=\"1024\" height=\"619\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-1024x619.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-300x181.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-768x464.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-542x328.png 542w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases.png 1108w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>The Helm UI is so powerful that you can use it to easily rollback to previous versions of an application. Again this is possible because Codefresh is fully aware about the connection between application, builds, docker images and helm releases.<\/p>\n<p><img class=\"alignnone size-full wp-image-8928\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-Diff-Rollback-2.png\" alt=\"\" width=\"886\" height=\"670\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-Diff-Rollback-2.png 886w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-Diff-Rollback-2-300x227.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-Diff-Rollback-2-768x581.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/Helm-Releases-Diff-Rollback-2-434x328.png 434w\" sizes=\"(max-width: 886px) 100vw, 886px\" \/><\/p>\n<p>Codefresh also started offering <a href=\"https:\/\/codefresh.io\/codefresh-news\/introducing-managed-helm-repositories\/\">an integrated Helm repository with each account<\/a>. This Helm repository is offered for free and like the container dashboard it can help your team quickly get up to speed with Helm using Codefresh as an all-in-one solution.<\/p>\n<p>Specifically for Helm there is a dedicated graphical dashboard that allows you to <a href=\"https:\/\/codefresh.io\/helm-tutorial\/kanban-promotion-boards\/\">promote Helm releases between different environments<\/a>.<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board.png\"><img class=\"alignnone size-large wp-image-18543\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board-1024x514.png\" alt=\"\" width=\"1024\" height=\"514\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board-1024x514.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board-300x151.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board-768x386.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board-1536x771.png 1536w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board-20x10.png 20w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/board.png 1609w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p>Spinnaker has very limited support for Helm. In fact, Helm usage in Spinnaker is just another \u201cbaking\u201d stage that uses Helm as a simple templating mechanism (similar to Kustomize). There is no other support for viewing individual Helm releases, promoting them, rolling them back etc. And for storing Helm charts with Spinnaker again you need to choose an external solution.<\/p>\n<p>You can now see the pattern of how Codefresh is an one-stop-shop for your deployments:<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/codefresh-components-1.png\"><img class=\"alignnone size-full wp-image-18544\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/codefresh-components-1.png\" alt=\"\" width=\"800\" height=\"600\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/codefresh-components-1.png 800w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/codefresh-components-1-300x225.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/codefresh-components-1-768x576.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/codefresh-components-1-20x15.png 20w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/p>\n<p>With Spinnaker on the other hand you need multiple components to achieve the same thing. Apart from Jenkins you also need to select other solutions that will help manage container images and Kubernetes\/Helm releases<\/p>\n<p><a href=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/spinnaker-components-1.png\"><img class=\"alignnone size-full wp-image-18545\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/spinnaker-components-1.png\" alt=\"\" width=\"800\" height=\"600\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/spinnaker-components-1.png 800w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/spinnaker-components-1-300x225.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/spinnaker-components-1-768x576.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/spinnaker-components-1-20x15.png 20w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/a><\/p>\n<p>In summary, Codefresh gives you everything you need to start with Kubernetes\/Helm deployments. With Spinnaker you only get the basic Kubernetes deployment support and you need additional components for the full software lifecycle.<\/p>\n<h2>Spinnaker considerations<\/h2>\n<p>By now it should be clear that if you wish to deploy to Kubernetes\/Helm and get a single solution for all your CI\/CD needs, Codefresh is a superior turn-key solution.<\/p>\n<p>That does not mean that Spinnaker is a bad choice in general. The truth is that Spinnaker has a different scope than Codefresh. Rather then being targeted at Kubernetes\/Helm, Spinnaker is a generic deployment tool that attempts to give a consistent way of deploying to multiple clouds.<\/p>\n<p>The big advantage of Spinnaker is that if your company is deploying VM\u2019s to different cloud providers at the same time (e.g. Google and Azure and AWS and Openstack), you can get a common experience through the Spinnaker UI. On the other hand, because Spinnaker needs to present a common view for all cloud providers, it is hard to expose characteristics that are unique to each one (as it happens in the case of Kubernetes).<\/p>\n<p>Codefresh can also deploy to non-Kubernetes environments, but you would need different yml configurations for each one so some manual work is involved.<\/p>\n<p>Another big advantage of Spinnaker is that is has built-in release strategies such as canaries and blue\/green deployments that are offered in a similar manner to all cloud providers. Codefresh also supports <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/blue-green-deploy\/\">blue\/green deployments<\/a> and <a href=\"https:\/\/codefresh.io\/kubernetes-tutorial\/simple-canary-codefresh-k8s-2\/\">canaries<\/a>, but of course, these are implemented for Kubernetes and would need changes for deploying VM\u2019s to other cloud providers.<\/p>\n<p>Therefore if your company is not interested in Kubernetes\/Helm and you still need to deploy VM\u2019s to more than one cloud providers at the same time, Spinnaker is a very obvious contender.<\/p>\n<h2>Spinnaker and Codefresh could work together<\/h2>\n<p>It is important to notice that Spinnaker and Codefresh could potentially work together. The Jenkins support found in Spinnaker is just a plugin. In theory, one could also write a similar plugin for Codefresh. This way Spinnaker could be used for CD while delegating all CI tasks to Codefresh.<\/p>\n<p><img class=\"alignnone size-large wp-image-8917\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/both-1024x502.png\" alt=\"\" width=\"1024\" height=\"502\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/both-1024x502.png 1024w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/both-300x147.png 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/both-768x377.png 768w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/both-628x308.png 628w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/both.png 1091w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>It is arguable whether this approach is practical or not, but it is useful to know that a team that has the resources and time to write such plugin could make both tools work together.<\/p>\n<h2>Conclusion<\/h2>\n<p>If you are looking for the easiest way to start deploying applications to Kubernetes\/Helm then Codefresh is the obvious choice. Codefresh<\/p>\n<ul>\n<li>has excellent CI support (branching\/merging, unit tests, pull requests etc)<\/li>\n<li>has built-in support for building Docker images (docker as a service)<\/li>\n<li>has an integrated dashboard for managing container images<\/li>\n<li>has a dedicated management UI for your Kubernetes cluster with full view of namespaces\/pods\/services etc.<\/li>\n<li>has an integrated Helm repository<\/li>\n<li>has full support for performing Helm releases and rolling them back<\/li>\n<li>can be used in a hosted\/on-prem\/hybrid manner allowing you to start right away<\/li>\n<\/ul>\n<p>Spinnaker on the other hand can be a better solution if<\/p>\n<ul>\n<li>You have a heavy investment on existing Jenkins jobs that you do not wish to deprecate<\/li>\n<li>You are not interested in Kubernetes\/Helm and only want to deploy full blown VM images<\/li>\n<li>You are deploying VMs to multiple clouds at the same time (Azure, AWS, Google etc) and wish to use a common interface for the deployment strategies<\/li>\n<li>You have an in-house team that will be responsible for installing\/upgrading Spinnaker and you can dedicate resources to its on-going maintenance<\/li>\n<\/ul>\n<p>Hope, you find this post useful. I look forward to your comments and any questions you have.\u00a0<span style=\"font-weight: 400;\">To try this out, <\/span><strong><a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=SpinnakerB\">create a free Codefresh account<\/a><\/strong><span style=\"font-weight: 400;\"> and start building, testing and deploying Docker images faster than ever.<\/span><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"8907\"\/>","protected":false},"excerpt":{"rendered":"<p>The appearance of containers and their performance benefits compared to the existing paradigm of virtual machines has forced several companies to rethink their software lifecycle, especially the delivery part. Continuous integration and deployment tools (CI\/CD) are passing through a second renaissance phase which is characterized by new approaches centered around short-lived environments that are launched &hellip; <a href=\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/\">Read more<\/a><\/p>\n","protected":false},"author":27,"featured_media":18548,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3120],"tags":[13,15,52,59,68],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Spinnaker Vs. Codefresh for CI\/CD pipeline deployment<\/title>\n<meta name=\"description\" content=\"In this blog post we will examine the capabilities of and contrast it with Codefresh, the continuous delivery platform for Kubernetes.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Codefresh vs Spinnaker\" \/>\n<meta property=\"og:description\" content=\"In this blog post we will examine the capabilities of and contrast it with Codefresh, the continuous delivery platform for Kubernetes.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2021-01-10T18:23:34+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-09T14:43:47+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1024\" \/>\n\t<meta property=\"og:image:height\" content=\"340\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@todaywasawesome\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Dan Garfield\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"13 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png\",\"width\":1024,\"height\":340},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/\",\"name\":\"Spinnaker Vs. Codefresh for CI\/CD pipeline deployment\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#primaryimage\"},\"datePublished\":\"2021-01-10T18:23:34+00:00\",\"dateModified\":\"2022-02-09T14:43:47+00:00\",\"description\":\"In this blog post we will examine the capabilities of and contrast it with Codefresh, the continuous delivery platform for Kubernetes.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Codefresh vs Spinnaker\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\"},\"headline\":\"Codefresh vs Spinnaker\",\"datePublished\":\"2021-01-10T18:23:34+00:00\",\"dateModified\":\"2022-02-09T14:43:47+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#webpage\"},\"wordCount\":2616,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png\",\"keywords\":[\"jenkins\",\"continuous integration\",\"devops\",\"codefresh\",\"continuous delivery\"],\"articleSection\":[\"Continuous Deployment\/Delivery\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4\",\"name\":\"Dan Garfield\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g\",\"caption\":\"Dan Garfield\"},\"description\":\"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome\",\"sameAs\":[\"https:\/\/twitter.com\/todaywasawesome\"],\"url\":\"https:\/\/codefresh.io\/author\/dang\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Spinnaker Vs. Codefresh for CI\/CD pipeline deployment","description":"In this blog post we will examine the capabilities of and contrast it with Codefresh, the continuous delivery platform for Kubernetes.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/","og_locale":"en_US","og_type":"article","og_title":"Codefresh vs Spinnaker","og_description":"In this blog post we will examine the capabilities of and contrast it with Codefresh, the continuous delivery platform for Kubernetes.","og_url":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2021-01-10T18:23:34+00:00","article_modified_time":"2022-02-09T14:43:47+00:00","og_image":[{"width":1024,"height":340,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@todaywasawesome","twitter_site":"@codefresh","twitter_misc":{"Written by":"Dan Garfield","Est. reading time":"13 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png","width":1024,"height":340},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#webpage","url":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/","name":"Spinnaker Vs. Codefresh for CI\/CD pipeline deployment","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#primaryimage"},"datePublished":"2021-01-10T18:23:34+00:00","dateModified":"2022-02-09T14:43:47+00:00","description":"In this blog post we will examine the capabilities of and contrast it with Codefresh, the continuous delivery platform for Kubernetes.","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Codefresh vs Spinnaker"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4"},"headline":"Codefresh vs Spinnaker","datePublished":"2021-01-10T18:23:34+00:00","dateModified":"2022-02-09T14:43:47+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#webpage"},"wordCount":2616,"commentCount":0,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/blog-picture.png","keywords":["jenkins","continuous integration","devops","codefresh","continuous delivery"],"articleSection":["Continuous Deployment\/Delivery"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-deployment\/spinnaker-versus-codefresh\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/17aca6389be0f81b999f1b138a0b44a4","name":"Dan Garfield","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/d4a38809809980ed49dc7e696a8e3938?s=96&d=blank&r=g","caption":"Dan Garfield"},"description":"Dan is the Co-Founder and Chief Open Source Officer at Codefresh. His work in open source includes being an Argo Maintainer, and co-chair of the GitOps Working Group. As a technology leader with a background in full-stack engineering, evangelism, and communications, he led Codefresh's go-to-market strategy and now leads open source strategy. You can follow him at twitter.com\/todaywasawesome","sameAs":["https:\/\/twitter.com\/todaywasawesome"],"url":"https:\/\/codefresh.io\/author\/dang\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/8907"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/27"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=8907"}],"version-history":[{"count":1,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/8907\/revisions"}],"predecessor-version":[{"id":21364,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/8907\/revisions\/21364"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/18548"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=8907"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=8907"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=8907"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}