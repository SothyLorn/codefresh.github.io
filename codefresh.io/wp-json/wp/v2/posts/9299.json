{"id":9299,"date":"2018-07-12T01:00:36","date_gmt":"2018-07-12T01:00:36","guid":{"rendered":"http:\/\/codefresh.io\/?p=9299"},"modified":"2021-10-06T15:36:06","modified_gmt":"2021-10-06T15:36:06","slug":"using-codefresh-with-mono-repos","status":"publish","type":"post","link":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/","title":{"rendered":"Using Codefresh with monorepos"},"content":{"rendered":"<p>Today Codefresh has released a completely redesigned Git trigger dialog with several new options for controlling the cases that trigger a pipeline.<\/p>\n<p><img class=\"alignnone size-full wp-image-9500\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/add-git-trigger-1.png\" alt=\"\" width=\"596\" height=\"843\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/add-git-trigger-1.png 596w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/add-git-trigger-1-212x300.png 212w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/add-git-trigger-1-232x328.png 232w\" sizes=\"(max-width: 596px) 100vw, 596px\" \/><\/p>\n<p>New options include:<\/p>\n<ul>\n<li>The ability to select specific pull request events. If you always wanted a pipeline that only runs when a pull request is opened, you can easily do this in the GUI now (available only for GitHub repositories)<\/li>\n<li>The ability to trigger only if the target of a pull request follows a specific naming pattern. Common examples here would be <strong>master <\/strong>or <strong>production <\/strong>so that this pipeline is triggered only when a team member is trying to merge back to the respective branch (available for all Git providers apart from Atlassian Stash)<\/li>\n<li>The ability to trigger a pipeline only if the changed files match a specific naming pattern (available for GitHub and GitLab repositories)<\/li>\n<\/ul>\n<p>The last feature is especially interesting because this means that you can now control exactly which pipelines trigger according to which files are affected by each commit. This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.<\/p>\n<p>At the moment this feature is available to Codefresh projects that are using Github, GitLab, Azure DevOps and Bitbucket Server as a Git provider.<\/p>\n<h2>Microservices, monorepos, multi-repos and atomic commits<\/h2>\n<p>Traditionally, applications developed using the monolith approach were also placed in a single Git repository. This approach was a natural fit given the big size of the project. A developer could simply check out the whole project at once, make any changes on any module and also deploy the whole application locally.<br \/>\nThis approach was very convenient for both humans and systems as it was very simple to implement and presented a holistic view of the whole application. By checking out a single Git repository you had full access to all aspects of the application.<\/p>\n<p>For really big projects, however, using a single git repository was sometimes problematic given the size of the code. Checking out code could be really slow, teams that were working on different modules would need to keep track of one another\u2019s pull request and builds and in general, scalability of operations suffered. Still, because the application was always deployed, a single entity using a single GIT repository was the most obvious answer.<\/p>\n<p>Lately, companies started moving their applications into the cloud and the introduction of containers in the form of Docker have completely changed the way an application could be deployed. Instead of deploying everything as a single entity, individual components deployed on their own (microservices) allowed for easy upgrades and most importantly easy scaling of the application.<\/p>\n<p>With the appearance of microservices, developers had to face the same question of code organization. Again, the most natural choice was to split the different applications to several Git repositories. A team could now own a specific repository where:<\/p>\n<ul>\n<li>Commits,<\/li>\n<li>Pull requests,<\/li>\n<li>Deployments,<\/li>\n<li>and auto-scaling decisions<\/li>\n<\/ul>\n<p>would happen in an independent manner.<\/p>\n<p>Having different Git repositories for each microservice works well for several companies. There are some cases, however, where having completely different multiple repositories is cumbersome for the following reasons:<\/p>\n<ul>\n<li>It is hard to get a good overview of the system as a whole<\/li>\n<li>It is difficult to know which version of which microservice is dependent on everything else<\/li>\n<li>It leads to excessive code duplication<\/li>\n<li>It makes \u201catomic commits\u201d (commits that change the API in multiple modules) a nightmare<\/li>\n<\/ul>\n<p>This realization is especially true for companies that are now experimenting with serverless architectures. Having multiple functions reside in the same repository is much more straightforward even when in practice each function is deployed on its own.<\/p>\n<p>For specific projects, it therefore\u00a0makes sense to have a mon-repo per service. Each module\/function is still deployed in an individual manner (and thus all scalability benefits at runtime are still present), but since all of them exist in the same repository, it is very simple for a developer to check out the whole service at once.<\/p>\n<p><img class=\"alignnone size-full wp-image-9302\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image4.jpg\" alt=\"\" width=\"671\" height=\"430\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image4.jpg 671w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image4-300x192.jpg 300w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image4-512x328.jpg 512w\" sizes=\"(max-width: 671px) 100vw, 671px\" \/><\/p>\n<p>This hybrid approach, where a single Git repository holds multiple modules\/functions, is\u00a0unofficially called &#8216;monorepo&#8217;.<\/p>\n<p>Using monorepos with a traditional CI solution is very challenging. Excess builds are happening all the time because multiple people are working on the same repository. Pull requests are becoming stale as they were created against a revision which quickly becomes obsolete.<\/p>\n<h2>Limiting triggering of builds to specific folders<\/h2>\n<p>To truly gain the benefits of a monorepo the CI system should be able to trigger pipelines only when changes happen in specific folders. This way the individual projects in a monorepo will build when their files change.<\/p>\n<p>Codefresh offers this capability today. In the trigger of each pipeline, you can define <a href=\"https:\/\/en.wikipedia.org\/wiki\/Glob_(programming)\">a glob expression<\/a> that will map to the project files. Only when matched files change will the pipeline trigger.<\/p>\n<p>Here are some examples of glob expressions:<\/p>\n<pre>**\/package.json\n**\/Dockerfile*\nmy-subproject\/**\nmy-subproject\/sub-subproject\/package.json\nmy-subproject\/**\/pom.xml\n<\/pre>\n<p>This means that you can now define pipelines within Codefresh that only compile\/run\/deploy each individual microservice even though all of them exist in the same Git repository.<\/p>\n<p><img class=\"alignnone size-full wp-image-9303\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image2.jpg\" alt=\"\" width=\"538\" height=\"308\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image2.jpg 538w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image2-300x172.jpg 300w\" sizes=\"(max-width: 538px) 100vw, 538px\" \/><\/p>\n<p>This technique not only cuts down the number of builds happening during day-to-day development but also opens several other possibilities on the granularity of your Codefresh builds.<\/p>\n<h2>Other scenarios for limiting builds to specific changed files<\/h2>\n<p>Glob expressions also allow you to define files instead of just folders. This capability allows for running build-only when a specific file changes. Some examples would be:<\/p>\n<ul>\n<li>Only trigger a build if a specific Dockerfile changes<\/li>\n<li>Only trigger a build if a specific package.json\/pom.xml\/Gemfile changes<\/li>\n<\/ul>\n<p>The first example is particularly interesting because it allows an organization to keep a big repo with \u201cblessed\u201d Dockerfiles and only build them when they actually change.<\/p>\n<p><img class=\"alignnone size-full wp-image-9304\" src=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image1.jpg\" alt=\"\" width=\"531\" height=\"305\" srcset=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image1.jpg 531w, https:\/\/codefresh.io\/wp-content\/uploads\/2018\/06\/image1-300x172.jpg 300w\" sizes=\"(max-width: 531px) 100vw, 531px\" \/><\/p>\n<p>How will you use the modified files field?<\/p>\n<p>You can read the full documentation here: <a href=\"https:\/\/codefresh.io\/docs\/docs\/configure-ci-cd-pipeline\/triggers\/git-triggers\/#using-the-modified-files-field-to-constrain-triggers-to-specific-folderfiles\">https:\/\/codefresh.io\/docs\/docs\/configure-ci-cd-pipeline\/triggers\/git-triggers\/#using-the-modified-files-field-to-constrain-triggers-to-specific-folderfiles<\/a><\/p>\n<p>New to Codefresh? <a href=\"https:\/\/codefresh.io\/codefresh-signup\/?utm_source=Blog&amp;utm_medium=Post&amp;utm_campaign=MonoB\">Create Your Free Account Today! <\/a><\/p>\n<input class=\"fooboxshare_post_id\" type=\"hidden\" value=\"9299\"\/>","protected":false},"excerpt":{"rendered":"<p>Today Codefresh has released a completely redesigned Git trigger dialog with several new options for controlling the cases that trigger a pipeline. New options include: The ability to select specific pull request events. If you always wanted a pipeline that only runs when a pull request is opened, you can easily do this in the &hellip; <a href=\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\">Read more<\/a><\/p>\n","protected":false},"author":62,"featured_media":9685,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1543],"tags":[59,64,2954],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.9 (Yoast SEO v18.4.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How To Use Codefresh with Mono-Repos<\/title>\n<meta name=\"description\" content=\"This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Using Codefresh with monorepos\" \/>\n<meta property=\"og:description\" content=\"This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\" \/>\n<meta property=\"og:site_name\" content=\"Codefresh\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/codefresh.io\" \/>\n<meta property=\"article:published_time\" content=\"2018-07-12T01:00:36+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-10-06T15:36:06+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"800\" \/>\n\t<meta property=\"og:image:height\" content=\"385\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@codefresh\" \/>\n<meta name=\"twitter:site\" content=\"@codefresh\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Kostis Kapelonis\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/codefresh.io\/#organization\",\"name\":\"Codefresh\",\"url\":\"https:\/\/codefresh.io\/\",\"sameAs\":[\"https:\/\/www.facebook.com\/codefresh.io\",\"https:\/\/www.linkedin.com\/company\/codefresh\",\"https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg\",\"https:\/\/twitter.com\/codefresh\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png\",\"width\":800,\"height\":800,\"caption\":\"Codefresh\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/codefresh.io\/#website\",\"url\":\"https:\/\/codefresh.io\/\",\"name\":\"Codefresh\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/codefresh.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png\",\"width\":800,\"height\":385},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#webpage\",\"url\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\",\"name\":\"How To Use Codefresh with Mono-Repos\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#primaryimage\"},\"datePublished\":\"2018-07-12T01:00:36+00:00\",\"dateModified\":\"2021-10-06T15:36:06+00:00\",\"description\":\"This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.\",\"breadcrumb\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/codefresh.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Using Codefresh with monorepos\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#webpage\"},\"author\":{\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\"},\"headline\":\"Using Codefresh with monorepos\",\"datePublished\":\"2018-07-12T01:00:36+00:00\",\"dateModified\":\"2021-10-06T15:36:06+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#webpage\"},\"wordCount\":983,\"commentCount\":1,\"publisher\":{\"@id\":\"https:\/\/codefresh.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png\",\"keywords\":[\"codefresh\",\"microservices\",\"git\"],\"articleSection\":[\"Continuous Integration\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87\",\"name\":\"Kostis Kapelonis\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/codefresh.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"contentUrl\":\"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png\",\"caption\":\"Kostis Kapelonis\"},\"description\":\"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.\",\"url\":\"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"How To Use Codefresh with Mono-Repos","description":"This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/","og_locale":"en_US","og_type":"article","og_title":"Using Codefresh with monorepos","og_description":"This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.","og_url":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/","og_site_name":"Codefresh","article_publisher":"https:\/\/www.facebook.com\/codefresh.io","article_published_time":"2018-07-12T01:00:36+00:00","article_modified_time":"2021-10-06T15:36:06+00:00","og_image":[{"width":800,"height":385,"url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png","type":"image\/png"}],"twitter_card":"summary_large_image","twitter_creator":"@codefresh","twitter_site":"@codefresh","twitter_misc":{"Written by":"Kostis Kapelonis","Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/codefresh.io\/#organization","name":"Codefresh","url":"https:\/\/codefresh.io\/","sameAs":["https:\/\/www.facebook.com\/codefresh.io","https:\/\/www.linkedin.com\/company\/codefresh","https:\/\/www.youtube.com\/channel\/UC9r94SY6BqN05kXPIHsDXPg","https:\/\/twitter.com\/codefresh"],"logo":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#logo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/02\/Codefresh_Logo_Vertical_LightBkgd.png","width":800,"height":800,"caption":"Codefresh"},"image":{"@id":"https:\/\/codefresh.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/codefresh.io\/#website","url":"https:\/\/codefresh.io\/","name":"Codefresh","description":"","publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/codefresh.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#primaryimage","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png","width":800,"height":385},{"@type":"WebPage","@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#webpage","url":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/","name":"How To Use Codefresh with Mono-Repos","isPartOf":{"@id":"https:\/\/codefresh.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#primaryimage"},"datePublished":"2018-07-12T01:00:36+00:00","dateModified":"2021-10-06T15:36:06+00:00","description":"This is a game-changing feature with several implications, the biggest one being the easy management of monorepos in Codefresh.","breadcrumb":{"@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/codefresh.io\/"},{"@type":"ListItem","position":2,"name":"Using Codefresh with monorepos"}]},{"@type":"Article","@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#article","isPartOf":{"@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#webpage"},"author":{"@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87"},"headline":"Using Codefresh with monorepos","datePublished":"2018-07-12T01:00:36+00:00","dateModified":"2021-10-06T15:36:06+00:00","mainEntityOfPage":{"@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#webpage"},"wordCount":983,"commentCount":1,"publisher":{"@id":"https:\/\/codefresh.io\/#organization"},"image":{"@id":"https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#primaryimage"},"thumbnailUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2018\/01\/Screen-Shot-2018-07-11-at-11.03.33-PM.png","keywords":["codefresh","microservices","git"],"articleSection":["Continuous Integration"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/codefresh.io\/continuous-integration\/using-codefresh-with-mono-repos\/#respond"]}]},{"@type":"Person","@id":"https:\/\/codefresh.io\/#\/schema\/person\/b2f763eca5adecaee359ad3170055d87","name":"Kostis Kapelonis","image":{"@type":"ImageObject","@id":"https:\/\/codefresh.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","contentUrl":"https:\/\/codefresh.io\/wp-content\/uploads\/2022\/03\/branded-96x96.png","caption":"Kostis Kapelonis"},"description":"Kostis is a software engineer\/technical-writer dual class character. He lives and breathes automation, good testing practices and stress-free deployments with GitOps.","url":"https:\/\/codefresh.io\/author\/kostiscodefresh-io\/"}]}},"acf":[],"_links":{"self":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/9299"}],"collection":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/users\/62"}],"replies":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/comments?post=9299"}],"version-history":[{"count":0,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/posts\/9299\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media\/9685"}],"wp:attachment":[{"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/media?parent=9299"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/categories?post=9299"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/codefresh.io\/wp-json\/wp\/v2\/tags?post=9299"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}